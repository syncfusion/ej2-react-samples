{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Dynamic gauge\r\n */\r\n//tslint:disable\r\nimport * as React from \"react\";\r\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, Inject, Annotations, AnnotationDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective, AnnotationsDirective } from '@syncfusion/ej2-react-circulargauge';\r\nimport { SampleBase } from './sample-base';\r\nlet sliderValue = 60;\r\nconst SAMPLE_CSS = `\r\n.panel {\r\n    width: 105% !important;\r\n    height: 80px !important;\r\n    margin-left: 5% !important;\r\n    margin-top: 15% !important;\r\n    border-color: lightgray;\r\n    float: left;\r\n    background-color: transparent;\r\n}\r\n\r\n.content {\r\n    float: left !important;\r\n    margin-left: 62px !important;\r\n    margin-top: 6% !important;\r\n    text-align: left !important;\r\n    border: 0px solid #dddddd;\r\n    min-height: auto;\r\n    position: absolute;\r\n}\r\n\r\n@media screen and (max-width: 1160px) {\r\n    .panel {\r\n        width: 115% !important;\r\n    }\r\n\r\n    .firstcontent {\r\n        font-size: 13px !important;\r\n    }\r\n\r\n    .secondcontent {\r\n        font-size: 15px !important;\r\n    }\r\n}\r\n\r\n@media screen and (max-width: 990px) {\r\n    .panel {\r\n        width: 50% !important;\r\n        height: 80px !important;\r\n        margin-left: 27% !important;\r\n        margin-top: 0% !important;\r\n    }\r\n\r\n    .subgauge {\r\n        margin-left: 8% !important;\r\n        margin-top: 1% !important;\r\n    }\r\n\r\n    .content {\r\n        margin-left: 18% !important;\r\n        margin-top: 2% !important;\r\n    }\r\n\r\n    .firstcontent {\r\n        font-size: 16px !important;\r\n    }\r\n\r\n    .secondcontent {\r\n        font-size: 18px !important;\r\n    }\r\n}    \r\n\r\n@media screen and (max-width: 410px) {\r\n    #column1 {\r\n        margin-left: -9% !important;\r\n    }\r\n\r\n    .subgauge {\r\n        margin-left: 3% !important;\r\n    }\r\n\r\n    .panel {\r\n        width: 52% !important;\r\n    }\r\n\r\n    .content {\r\n        margin-top: 3% !important;\r\n    }\r\n}`;\r\nexport class AppleWatchGauge extends SampleBase {\r\n    load1(args) {\r\n        let selectedTheme = location.hash.split('/')[1];\r\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n        args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\r\n        if (selectedTheme === 'highcontrast') {\r\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:17px;height:17px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image4.svg\" /></div>';\r\n        }\r\n    }\r\n    load2(args) {\r\n        let selectedTheme = location.hash.split('/')[1];\r\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n        args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\r\n        if (selectedTheme === 'highcontrast') {\r\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:15px;height:15px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image5.svg\" /></div>';\r\n        }\r\n    }\r\n    load3(args) {\r\n        let selectedTheme = location.hash.split('/')[1];\r\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n        args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1));\r\n        if (selectedTheme === 'highcontrast') {\r\n            args.gauge.axes[0].annotations[0].content = '<div id=\"annotation5\"><img style=\"width:17px;height:17px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image6.svg\" /></div>';\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section' style={{ align: \"center\" }}>\r\n                <div id=\"gauge\" className=\"row\">\r\n                <div className=\"cols-sample-area\" style={{ align: \"center\" }}>\r\n                <div className=\"col-lg-9 col-md-9\" style={{ marginLeft: '5%' }}>\r\n                    <CircularGaugeComponent load={this.load.bind(this)} id='gauge1' height={\"400px\"} width={\"400px\"}>\r\n                        <Inject services={[Annotations]}/>\r\n                        <AxesDirective>\r\n                            <AxisDirective startAngle={0} endAngle={360} minimum={0} maximum={100} lineStyle={{ width: 0 }} labelStyle={{\r\n            font: {\r\n                fontWeight: 'Roboto',\r\n                fontStyle: 'Regular',\r\n                size: '0px',\r\n                color: 'white'\r\n            },\r\n            position: 'Inside',\r\n            useRangeColor: true\r\n        }} majorTicks={{ height: 0 }} minorTicks={{ height: 0 }}>\r\n                                <AnnotationsDirective>\r\n                                    <AnnotationDirective content='<div id=\"annotation1\"><img style=\"width:22px;height:22 px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image1.svg\" /></div>' angle={8} radius='80%' zIndex='1'/>\r\n                                    <AnnotationDirective content='<div id=\"annotation2\"><img style=\"width:20px;height:20px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image2.svg\" /></div>' angle={11} radius='58%' zIndex='1'/>\r\n                                    <AnnotationDirective content='<div id=\"annotation3\"><img style=\"width:22px;height:22px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image3.svg\" /></div>' angle={16} radius='36%' zIndex='1'/>\r\n                                </AnnotationsDirective>\r\n                                <RangesDirective>\r\n                                    <RangeDirective start={0} end={100} radius='90%' startWidth={40} endWidth={40} color='#E30219' opacity={0.2}>\r\n                                    </RangeDirective>\r\n                                    <RangeDirective start={0} end={100} radius='68%' startWidth={40} endWidth={40} color='#3EDE00' opacity={0.2}>\r\n                                    </RangeDirective>\r\n                                    <RangeDirective start={0} end={100} radius='46%' startWidth={40} endWidth={40} color='#18F8F6' opacity={0.2}>\r\n                                    </RangeDirective>\r\n                                </RangesDirective>\r\n                                <PointersDirective>\r\n                                    <PointerDirective animation={{ enable: true }} value={65} radius='90%' color='#E2011A' pointerWidth={40} type='RangeBar' roundedCornerRadius={25}/>\r\n                                    <PointerDirective animation={{ enable: true }} value={43} radius='68%' color='#3FE000' pointerWidth={40} type='RangeBar' roundedCornerRadius={25}/>\r\n                                    <PointerDirective animation={{ enable: true }} value={58} radius='46%' color='#00C9E6' pointerWidth={40} type='RangeBar' roundedCornerRadius={25}/>\r\n                                </PointersDirective>\r\n                            </AxisDirective>\r\n                        </AxesDirective>\r\n                    </CircularGaugeComponent>\r\n                    </div>\r\n                    <div className=\"col-lg-3 col-md-3\" style={{ marginLeft: \"-15%\" }}>\r\n                <div className=\"panel\" style={{ \"align\": \"center\" }}>\r\n                    <div className=\"subgauge\" style={{ float: \"left\", marginTop: \"3%\" }}>\r\n                    <CircularGaugeComponent load={this.load1.bind(this)} id='gauge2' height={\"65px\"} width={\"65px\"}>\r\n                        <Inject services={[Annotations]}/>\r\n                        <AxesDirective>\r\n                            <AxisDirective startAngle={0} endAngle={360} minimum={0} maximum={100} lineStyle={{ width: 0 }} labelStyle={{\r\n            font: {\r\n                fontWeight: 'Roboto',\r\n                fontStyle: 'Regular',\r\n                size: '0px',\r\n                color: 'white'\r\n            },\r\n            position: 'Inside',\r\n            useRangeColor: true\r\n        }} majorTicks={{ height: 0 }} minorTicks={{ height: 0 }}>\r\n                                <AnnotationsDirective>\r\n                                    <AnnotationDirective content='<div id=\"annotation1\"><img style=\"width:17px;height:17px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image1.svg\" /></div>' angle={0} radius='0%' zIndex='1'/>\r\n                                </AnnotationsDirective>\r\n                                <RangesDirective>\r\n                                    <RangeDirective start={0} end={100} radius='100%' startWidth={8} endWidth={8} color='#E30219' opacity={0.2}>\r\n                                    </RangeDirective>\r\n                                </RangesDirective>\r\n                                <PointersDirective>\r\n                                    <PointerDirective animation={{ enable: true }} value={65} radius='100%' color='#E2011A' pointerWidth={8} type='RangeBar' roundedCornerRadius={5}/>\r\n                                </PointersDirective>\r\n                            </AxisDirective>\r\n                        </AxesDirective>\r\n                    </CircularGaugeComponent>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <span className=\"firstcontent\" style={{ fontSize: \"18px\" }}>MOVE</span>\r\n                        <span className=\"firstcontent\" style={{ fontSize: \"18px\", color: \"#f4104d\" }}>&nbsp;65%</span><br />\r\n                        <span className=\"secondcontent\" style={{ color: \"#f4104d\", fontSize: \"19px\" }}>338/520 CAL</span>\r\n                    </div>\r\n                </div>\r\n                <div className=\"panel\" style={{ \"align\": \"center\" }}>\r\n                    <div className=\"subgauge\" style={{ float: \"left\", marginTop: \"3%\" }}>\r\n                    <CircularGaugeComponent load={this.load2.bind(this)} id='gauge3' height={\"65px\"} width={\"65px\"}>\r\n                        <Inject services={[Annotations]}/>\r\n                        <AxesDirective>\r\n                            <AxisDirective startAngle={0} endAngle={360} minimum={0} maximum={100} lineStyle={{ width: 0 }} labelStyle={{\r\n            font: {\r\n                fontWeight: 'Roboto',\r\n                fontStyle: 'Regular',\r\n                size: '0px',\r\n                color: 'white'\r\n            },\r\n            position: 'Inside',\r\n            useRangeColor: true\r\n        }} majorTicks={{ height: 0 }} minorTicks={{ height: 0 }}>\r\n                                <AnnotationsDirective>\r\n                                    <AnnotationDirective content='<div id=\"annotation1\"><img style=\"width:17px;height:17px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image2.svg\" /></div>' angle={0} radius='0%' zIndex='1'/>\r\n                                </AnnotationsDirective>\r\n                                <RangesDirective>\r\n                                    <RangeDirective start={0} end={100} radius='100%' startWidth={8} endWidth={8} color='#3EDE00' opacity={0.2}>\r\n                                    </RangeDirective>\r\n                                </RangesDirective>\r\n                                <PointersDirective>\r\n                                    <PointerDirective animation={{ enable: true }} value={43} radius='100%' color='#3FE000' pointerWidth={8} type='RangeBar' roundedCornerRadius={5}/>\r\n                                </PointersDirective>\r\n                            </AxisDirective>\r\n                        </AxesDirective>\r\n                    </CircularGaugeComponent>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <span className=\"firstcontent\" style={{ fontSize: \"18px\" }}>EXERCISE</span>\r\n                        <span className=\"firstcontent\" style={{ fontSize: \"18px\", color: \"#f4104d\" }}>&nbsp;6%</span><br />\r\n                        <span className=\"secondcontent\" style={{ color: \"#a6ff00\", fontSize: \"19px\" }}>9/30 MIN</span>\r\n                    </div>\r\n                    </div>\r\n                    <div className=\"panel\" style={{ \"align\": \"center\" }}>\r\n                    <div className=\"subgauge\" style={{ float: \"left\", marginTop: \"3%\" }}>\r\n                    <CircularGaugeComponent load={this.load3.bind(this)} id='gauge4' height={\"65px\"} width={\"65px\"}>\r\n                        <Inject services={[Annotations]}/>\r\n                        <AxesDirective>\r\n                            <AxisDirective startAngle={0} endAngle={360} minimum={0} maximum={100} lineStyle={{ width: 0 }} labelStyle={{\r\n            font: {\r\n                fontWeight: 'Roboto',\r\n                fontStyle: 'Regular',\r\n                size: '0px',\r\n                color: 'white'\r\n            },\r\n            position: 'Inside',\r\n            useRangeColor: true\r\n        }} majorTicks={{ height: 0 }} minorTicks={{ height: 0 }}>\r\n                                <AnnotationsDirective>\r\n                                    <AnnotationDirective content='<div id=\"annotation1\"><img style=\"width:25px;height:25px;\" src=\"////npmci.syncfusion.com/development/react/demos/src/circular-gauge/images/image3.svg\" /></div>' angle={0} radius='0%' zIndex='1'/>\r\n                                </AnnotationsDirective>\r\n                                <RangesDirective>\r\n                                    <RangeDirective start={0} end={100} radius='100%' startWidth={8} endWidth={8} color='#18F8F6' opacity={0.2}>\r\n                                    </RangeDirective>\r\n                                </RangesDirective>\r\n                                <PointersDirective>\r\n                                    <PointerDirective animation={{ enable: true }} value={58} radius='100%' color='#00C9E6' pointerWidth={8} type='RangeBar' roundedCornerRadius={5}/>\r\n                                </PointersDirective>\r\n                            </AxisDirective>\r\n                        </AxesDirective>\r\n                    </CircularGaugeComponent>\r\n                    </div>\r\n                    <div className=\"content\">\r\n                        <span className=\"firstcontent\" style={{ fontSize: \"18px\" }}>STAND</span>\r\n                        <span className=\"firstcontent\" style={{ fontSize: \"18px\", color: \"#f4104d\" }}>&nbsp;66%</span><br />\r\n                        <span className=\"secondcontent\" style={{ color: \"#a6ff00\", fontSize: \"19px\" }}>7/12 HR</span>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n                    </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<AppleWatchGauge />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}