{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Ranges\r\n */\r\nimport * as React from 'react';\r\nimport { PropertyPane } from './property-pane';\r\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, Inject, PointersDirective, PointerDirective, RangesDirective, RangeDirective, Annotations, Legend } from '@syncfusion/ej2-react-circulargauge';\r\nimport { SampleBase } from './sample-base';\r\nimport { DropDownListComponent, DropDownList } from '@syncfusion/ej2-react-dropdowns';\r\nimport { CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class Circle extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.loaded = false;\r\n        // Code for Property Panel\r\n        this.positionlist = [\r\n            { value: 'Top' },\r\n            { value: 'Bottom' },\r\n            { value: 'Left' },\r\n            { value: 'Right' },\r\n            { value: 'Auto' }\r\n        ];\r\n        this.alignlist = [\r\n            { value: 'Far' },\r\n            { value: 'Center' },\r\n            { value: 'Near' }\r\n        ];\r\n        this.shapelist = [\r\n            { value: 'Circle' },\r\n            { value: 'Rectangle' },\r\n            { value: 'Triangle' },\r\n            { value: 'Diamond' },\r\n            { value: 'InvertedTriangle' }\r\n        ];\r\n    }\r\n    position() {\r\n        this.gauge.legendSettings.position = this.positionElement.value;\r\n    }\r\n    alignment() {\r\n        this.gauge.legendSettings.alignment = this.alignElement.value;\r\n    }\r\n    shape() {\r\n        this.gauge.legendSettings.shape = this.dropElement.value;\r\n    }\r\n    enableToggleLegend(args) {\r\n        this.gauge.legendSettings.toggleVisibility = args.checked;\r\n    }\r\n    enableLegend(args) {\r\n        this.gauge.legendSettings.visible = args.checked;\r\n        this.gauge.refresh();\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n            <div className='control-section row'>\r\n                <div className='col-lg-8'>\r\n                    <CircularGaugeComponent load={this.load.bind(this)} id='range-container' loaded={this.onChartLoad.bind(this)} title='Measure of wind speed in Km/h' legendSettings={{ visible: true, position: \"Bottom\" }} ref={gauge => this.gauge = gauge}>\r\n                        <Inject services={[Annotations, Legend]}/>                                           \r\n                        <AxesDirective>\r\n                            <AxisDirective startAngle={210} endAngle={150} radius='80%' minimum={0} maximum={120} majorTicks={{\r\n            color: '#9E9E9E', height: 16, interval: 20\r\n        }} lineStyle={{ width: 2 }} minorTicks={{\r\n            height: 8, interval: 10\r\n        }} labelStyle={{\r\n            position: 'Inside', useRangeColor: false,\r\n            font: {\r\n                size: '12px', color: '#424242', fontFamily: 'Roboto', fontStyle: 'Regular'\r\n            }\r\n        }}>\r\n                                <RangesDirective>\r\n                                    <RangeDirective start={0} end={5} color='#ccffff' radius='110%' legendText='Light air'/>\r\n                                    <RangeDirective start={5} end={11} color='#99ffff' radius='110%' legendText='Light breeze'/>\r\n                                    <RangeDirective start={11} end={19} color='#99ff99' radius='110%' legendText='Gentle breeze'/>\r\n                                    <RangeDirective start={19} end={28} color='#79ff4d' radius='110%' legendText='Moderate breeze'/>\r\n                                    <RangeDirective start={28} end={49} color='#c6ff1a' radius='110%' legendText='Strong breeze'/>\r\n                                    <RangeDirective start={49} end={74} color='#e6ac00' radius='110%' legendText='Gale'/>\r\n                                    <RangeDirective start={74} end={102} color='#ff6600' radius='110%' legendText='Storm'/>\r\n                                    <RangeDirective start={102} end={120} color='#ff0000' radius='110%' legendText='Hurricane force'/>\r\n                                </RangesDirective>\r\n                                <PointersDirective>\r\n                                    <PointerDirective value={70} radius='60%' color='#757575' pointerWidth={8} border={{\r\n            width: 0,\r\n            color: 'transparent'\r\n        }} animation={{ enable: true }} cap={{\r\n            radius: 7,\r\n            color: '#757575'\r\n        }} needleTail={{ length: '18%' }}/>\r\n                                </PointersDirective>\r\n                            </AxisDirective>\r\n                        </AxesDirective>\r\n                    </CircularGaugeComponent>\r\n                </div>\r\n                \r\n                <div className='col-lg-4 property-section'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                            <tbody>\r\n                               <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '20%' }}>\r\n                                        <div id='enablePointer'>Show Legend</div>\r\n                                    </td>\r\n                                    <td style={{ width: '40%' }}>\r\n                                        <div style={{ paddingTop: '0px' }}>\r\n                                        <CheckBoxComponent id='enable' checked={true} change={this.enableLegend.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '20%' }}>\r\n                                        <div id='enable'>Show range when the legend item is toggled</div>\r\n                                    </td>\r\n                                    <td style={{ width: '40%' }}>\r\n                                        <div style={{ paddingTop: '0px' }}>\r\n                                        <CheckBoxComponent id='enableToggle' checked={true} change={this.enableToggleLegend.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                        <td>\r\n                                            <div id='position'>Position</div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div>\r\n                                                <DropDownListComponent width=\"120px\" index={0} change={this.position.bind(this)} ref={d => this.positionElement = d} dataSource={this.positionlist} fields={{ text: 'value', value: 'value' }}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{ height: '50px' }}>\r\n                                        <td>\r\n                                            <div id='range'>Alignment</div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div>\r\n                                                <DropDownListComponent width=\"120px\" index={0} change={this.alignment.bind(this)} ref={d => this.alignElement = d} dataSource={this.alignlist} fields={{ text: 'value', value: 'value' }}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{ height: '50px' }}>\r\n                                        <td>\r\n                                            <div id='pointColor'>Shape</div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div>\r\n                                                <DropDownListComponent width=\"120px\" index={0} change={this.shape.bind(this)} ref={d => this.dropElement = d} dataSource={this.shapelist} fields={{ text: 'value', value: 'value' }}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        if (!this.loaded) {\r\n            this.loaded = true;\r\n            this.legendPosition = new DropDownList({\r\n                index: 0,\r\n                width: 130,\r\n                change: () => {\r\n                    let position = this.legendPosition.value.toString();\r\n                }\r\n            });\r\n            this.legendPosition.appendTo('#legendPosition');\r\n        }\r\n    }\r\n}\r\n\nrender(<Circle />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}