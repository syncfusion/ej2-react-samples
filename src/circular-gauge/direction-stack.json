{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for direction compass\r\n */\r\nimport * as React from \"react\";\r\nimport { PropertyPane } from './property-pane';\r\nimport { CircularGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective } from '@syncfusion/ej2-react-circulargauge';\r\nimport { SampleBase } from './sample-base';\r\nimport { DropDownList } from '@syncfusion/ej2-dropdowns';\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class Direction extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.loaded = false;\r\n    }\r\n    onLabelRender(args) {\r\n        args.text = ['N', 'NE', 'E', 'SE', 'S', 'SW', 'W', 'NW', ''][args.value];\r\n    }\r\n    ;\r\n    // Code for Property Panel\r\n    onChartLoad(args) {\r\n        if (!this.loaded) {\r\n            this.loaded = true;\r\n            this.pointerColor = new DropDownList({\r\n                index: 0,\r\n                placeholder: 'Select Range Bar Color',\r\n                width: 100,\r\n                change: () => {\r\n                    let rangeColor = this.pointerColor.value.toString();\r\n                    this.gauge.axes[0].pointers[0].color = rangeColor;\r\n                    this.gauge.setPointerValue(0, 0, this.gauge.axes[0].pointers[0].value);\r\n                }\r\n            });\r\n            this.pointerColor.appendTo('#poiterColor');\r\n            this.labelColor = new DropDownList({\r\n                index: 0,\r\n                placeholder: 'Select Range Bar Color',\r\n                width: 100,\r\n                change: () => {\r\n                    let rangeColor = this.labelColor.value.toString();\r\n                    this.gauge.axes[0].labelStyle.font.color = rangeColor;\r\n                    this.gauge.refresh();\r\n                }\r\n            });\r\n            this.labelColor.appendTo('#labelColor');\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className='control-section row'>\r\n                    <div className='col-lg-8'>\r\n                        <CircularGaugeComponent load={this.load.bind(this)} id='direction-gauge' ref={gauge => this.gauge = gauge} axisLabelRender={this.onLabelRender.bind(this)} loaded={this.onChartLoad.bind(this)}>\r\n                            <AxesDirective>\r\n                                <AxisDirective radius='70%' startAngle={0} endAngle={360} minimum={0} maximum={8} majorTicks={{\r\n            height: 15,\r\n            interval: 1\r\n        }} lineStyle={{ width: 10 }} minorTicks={{\r\n            height: 10,\r\n            interval: 0.5\r\n        }} labelStyle={{\r\n            font: {\r\n                size: '12px', fontFamily: 'Roboto'\r\n            },\r\n            autoAngle: true,\r\n            hiddenLabel: 'Last'\r\n        }}>\r\n                                    <PointersDirective>\r\n                                        <PointerDirective value={7} radius='50%' color='#f03e3e' pointerWidth={20} cap={{\r\n            radius: 0\r\n        }} animation={{\r\n            enable: false\r\n        }}/>\r\n                                        <PointerDirective value={3} radius='50%' color='#9E9E9E' pointerWidth={20} cap={{\r\n            radius: 0\r\n        }} animation={{\r\n            enable: false\r\n        }}/>\r\n                                    </PointersDirective>\r\n                                    <RangesDirective>\r\n                                        <RangeDirective start={7} end={7}/>\r\n                                    </RangesDirective>\r\n                                </AxisDirective>\r\n                            </AxesDirective>\r\n                        </CircularGaugeComponent>\r\n                    </div>\r\n                    \r\n                    <div className='col-lg-4 property-section'>\r\n                        <PropertyPane title='Properties'>\r\n                            <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                                <tbody>\r\n                                    <tr style={{ height: '50px' }}>\r\n                                        <td>\r\n                                            <div id=''>Pointer Color</div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div>\r\n                                                <select id=\"poiterColor\" className=\"form-control\">\r\n                                                    <option value=\"#f03e3e\">#f03e3e</option>\r\n                                                    <option value=\"#4472c4\">#4472c4</option>\r\n                                                    <option value=\"#ed7d31\">#ed7d31</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{ height: '50px' }}>\r\n                                        <td>\r\n                                            <div id=''>Label Color</div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div>\r\n                                                <select id=\"labelColor\" className=\"form-control\">\r\n                                                    <option value=\"#f03e3e\">#f03e3e</option>\r\n                                                    <option value=\"#4472c4\">#4472c4</option>\r\n                                                    <option value=\"#ed7d31\">#ed7d31</option>\r\n                                                </select>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Direction />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}