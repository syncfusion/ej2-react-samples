{"index.css":".inplace-control-section.pickers-layout .control_wrapper {\r\n    margin: auto;\r\n    max-width: 400px;\r\n}\r\n\r\n.inplace-control-section.pickers-layout .control_wrapper table {\r\n    margin: auto;\r\n}\r\n\r\n.inplace-control-section.pickers-layout .control_wrapper table td {\r\n    width: 200px;\r\n    height: 100px;\r\n}\r\n\r\n.inplace-control-section.pickers-layout .control_wrapper table td .control-label {\r\n    margin-bottom: 0px;\r\n}\r\n\r\n@media (max-width: 768px) {\r\n    .inplace-control-section.pickers-layout {\r\n        padding-left: 0;\r\n        padding-right: 0;\r\n    }\r\n\r\n    .inplace-control-section.pickers-layout .control_wrapper table tr td:nth-child(1) {\r\n        width: 130px;\r\n    }\r\n\r\n    .inplace-control-section.pickers-layout .control_wrapper table tr td:nth-child(2) {\r\n        width: 200px;\r\n    }\r\n}\r\n\r\n#pickerProperty table td {\r\n    width: 50%;\r\n}\r\n\r\n#pickerProperty .property-panel-table div {\r\n    padding-left: 10px;\r\n    padding-top: 10px;\r\n}\r\n\r\n.e-inplaceeditor-tip .e-editable-component .e-input-group .e-clear-icon.e-clear-icon-hide,\r\n.inplace-control-section.pickers-layout .e-inplaceeditor .e-editable-component .e-clear-icon-hide {\r\ndisplay: block;\r\nvisibility: hidden;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { DateRangePicker, Inject, InPlaceEditorComponent, TimePicker } from '@syncfusion/ej2-react-inplace-editor';\r\nimport * as React from 'react';\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\n\r\n// tslint:disable:max-line-length\r\nexport class Pickers extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.dateValue = new Date('5/23/2017');\r\n        this.dateTimeValue = new Date('5/23/2017 12:00 PM');\r\n        this.dateRangeValue = [new Date('5/23/2017'), new Date('7/5/2017')];\r\n        this.datePickerModel = { placeholder: 'Select a date' };\r\n        this.timePickerModel = { placeholder: 'Select a time', value: new Date('5/23/2017,12:00 PM') };\r\n        this.dateTimePickerModel = { placeholder: 'Select a date and time' };\r\n        this.dateRangePickerModel = { placeholder: 'Select a date range' };\r\n        // Mapping DropDownList dataSource property\r\n        this.editorData = [\r\n            { 'value': 'inline', 'text': 'Inline' }, { 'value': 'popup', 'text': 'Popup' }\r\n        ];\r\n        // Mapping DropDownList fields property\r\n        this.dropDownFields = { text: 'text', value: 'value' };\r\n        // Mapping DropDownList value property\r\n        this.dropDownVal = 'inline';\r\n        this.scrollRightPane = () => {\r\n            let mode = document.getElementById('editorMode').value;\r\n            if (mode === 'Inline') {\r\n                return;\r\n            }\r\n            if (this.dateObj && (this.dateObj.element.querySelectorAll('.e-editable-open').length > 0)) {\r\n                this.dateObj.enableEditMode = false;\r\n            }\r\n            if (this.timeObj && (this.timeObj.element.querySelectorAll('.e-editable-open').length > 0)) {\r\n                this.timeObj.enableEditMode = false;\r\n            }\r\n            if (this.dateTimeObj && (this.dateTimeObj.element.querySelectorAll('.e-editable-open').length > 0)) {\r\n                this.dateTimeObj.enableEditMode = false;\r\n            }\r\n            if (this.dateRangeObj && (this.dateRangeObj.element.querySelectorAll('.e-editable-open').length > 0)) {\r\n                this.dateRangeObj.enableEditMode = false;\r\n            }\r\n        };\r\n    }\r\n    // Change event funtion for DropDownList component   \r\n    changeEditorMode(e) {\r\n        let mode = this.editorMode.value;\r\n        this.dateObj.mode = mode;\r\n        this.timeObj.mode = mode;\r\n        this.dateTimeObj.mode = mode;\r\n        this.dateRangeObj.mode = mode;\r\n        this.dateObj.dataBind();\r\n        this.timeObj.dataBind();\r\n        this.dateTimeObj.dataBind();\r\n        this.dateRangeObj.dataBind();\r\n    }\r\n    rendereComplete() {\r\n        let rightPane = document.getElementById('right-pane');\r\n        if (rightPane) {\r\n            rightPane.addEventListener('scroll', () => {\r\n                this.scrollRightPane();\r\n            });\r\n        }\r\n    }\r\n    componentWillUnmount() {\r\n        let rightPane = document.getElementById('right-pane');\r\n        if (rightPane) {\r\n            rightPane.removeEventListener('scroll', () => {\r\n                this.scrollRightPane();\r\n            });\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className=\"col-lg-8 control-section inplace-control-section pickers-layout\">\r\n                    <div className=\"control_wrapper form-horizontal\">\r\n                        <table>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <label className=\"control-label\" style={{ textAlign: 'left', fontSize: '14px', fontWeight: 400 }}>\r\n                                            DatePicker </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <InPlaceEditorComponent ref={(date) => { this.dateObj = date; }} id='datePickerEle' mode='Inline' type='Date' value={this.dateValue} model={this.datePickerModel}>\r\n                                        </InPlaceEditorComponent>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <label className=\"control-label\" style={{ textAlign: 'left', fontSize: '14px', fontWeight: 400 }}>\r\n                                            TimePicker </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <InPlaceEditorComponent ref={(time) => { this.timeObj = time; }} id='timePickerEle' mode='Inline' type='Time' value={this.dateValue} model={this.timePickerModel}>\r\n                                            <Inject services={[TimePicker]}/>\r\n                                        </InPlaceEditorComponent>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <label className=\"control-label\" style={{ textAlign: 'left', fontSize: '14px', fontWeight: 400 }}>\r\n                                            DateTimePicker </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <InPlaceEditorComponent ref={(dateTime) => { this.dateTimeObj = dateTime; }} id='dateTimePickerEle' mode='Inline' type='DateTime' value={this.dateTimeValue} model={this.dateTimePickerModel}>\r\n                                        </InPlaceEditorComponent>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td>\r\n                                        <label className=\"control-label\" style={{ textAlign: 'left', fontSize: '14px', fontWeight: 400 }}>\r\n                                            DateRangePicker </label>\r\n                                    </td>\r\n                                    <td>\r\n                                        <InPlaceEditorComponent ref={(dateRange) => { this.dateRangeObj = dateRange; }} id='dateRangePickerEle' mode='Inline' type='DateRange' value={this.dateRangeValue} model={this.dateRangePickerModel}>\r\n                                            <Inject services={[DateRangePicker]}/>\r\n                                        </InPlaceEditorComponent>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n                <div className='col-lg-4 property-section' id=\"pickerProperty\">\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\" className=\"property-panel-table\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td>\r\n                                        <div>Mode</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            \r\n                                            <DropDownListComponent ref={(drop) => { this.editorMode = drop; }} id='editorMode' className='form-control' dataSource={this.editorData} fields={this.dropDownFields} value={this.dropDownVal} width={'90%'} change={this.changeEditorMode.bind(this)}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Pickers />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}