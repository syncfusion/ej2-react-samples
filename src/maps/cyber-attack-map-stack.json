{"index.css":"/* css */","map-data/default-datasource.json":"{\r\n    \"default\" : [\r\n        {\r\n            \"drillColor\": \"#C13664\",\r\n            \"continent\": \"North America\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 10882,\r\n            \"color\": \"#71B081\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#9C3367\",\r\n            \"continent\": \"South America\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 13776,\r\n            \"color\": \"#5A9A77\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#80306A\",\r\n            \"continent\": \"Africa\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 18718.0,\r\n            \"color\": \"#498770\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#622D6C\",\r\n            \"continent\": \"Europe\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 3746,\r\n            \"color\": \"#39776C\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#462A6D\",\r\n            \"continent\": \"Asia\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 10688,\r\n            \"color\": \"#266665\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#2A2870\",\r\n            \"continent\": \"Australia\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 30716,\r\n            \"color\": \"#124F5E\"\r\n        }\r\n    ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Default map sample\r\n */\r\n//tslint:disable\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, MarkersDirective, MarkerDirective, Marker, MapsTooltip, NavigationLine } from '@syncfusion/ej2-react-maps';\r\nimport { SampleBase } from './sample-base';\r\nimport * as data from './map-data/default-datasource.json';\r\nlet datasource = data;\r\nconst SAMPLE_CSS = `\r\n.name {\r\n    margin-top: -6px;\r\n    margin-left: -6px;\r\n    font-size: 12px;\r\n    color: black;\r\n    text-shadow: 0px 1px 1px lightgray;\r\n    font-weight: 500\r\n}\r\n\r\n@keyframes dash {\r\n    from {\r\n        stroke-dashoffset: 1000;\r\n        stroke-width: 1px;\r\n        stroke: #D2691E;\r\n    }\r\n\r\n    to {\r\n        stroke-dashoffset: 0;\r\n        stroke-width: 1px;\r\n    }\r\n\r\n    40% {\r\n        opacity: 0.7;\r\n    }\r\n\r\n    50%,\r\n    100% {\r\n        opacity: 0;\r\n    }\r\n}\r\n\r\n.pulse-css {\r\n    width: 12px;\r\n    height: 12px;\r\n    -webkit-border-radius: 10px;\r\n    -moz-border-radius: 10px;\r\n    border-radius: 10px;\r\n    background: #D2691E;\r\n    position: relative;\r\n    animation-delay: 5s;\r\n}\r\n\r\n.pulse-css:before,\r\n.pulse-css:after {\r\n    content: '';\r\n    width: 9px;\r\n    height: 9px;\r\n    -webkit-border-radius: 10px;\r\n    -moz-border-radius: 10px;\r\n    border-radius: 10px;\r\n    background-color: #D2691E;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    margin: auto;\r\n    transform: scale(0.5);\r\n    animation: pulse-css1 2s linear infinite;\r\n}\r\n\r\n.parent_css {\r\n    width: 13px;\r\n    height: 13px;\r\n    background: #D2691E;\r\n    position: relative;\r\n    animation-delay: 5s;\r\n}\r\n\r\n.parent_css:before,\r\n.parent_css:after {\r\n    content: '';\r\n    width: 9px;\r\n    height: 9px;\r\n    background-color: #D2691E;\r\n    position: absolute;\r\n    top: 0;\r\n    right: 0;\r\n    bottom: 0;\r\n    left: 0;\r\n    margin: auto;\r\n    transform: scale(0.5);\r\n    animation: pulse-css1 3s linear infinite;\r\n}\r\n\r\n@keyframes pulse-css1 {\r\n    0% {\r\n        transform: scale(0.5);\r\n        opacity: 0;\r\n    }\r\n\r\n    50% {\r\n        opacity: 0.2;\r\n    }\r\n\r\n    90%,\r\n    100% {\r\n        transform: scale(5);\r\n        opacity: 0;\r\n    }\r\n}`;\r\nexport class CyberAttackMaps extends SampleBase {\r\n    render() {\r\n        return (<div className='control-panel'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <MapsComponent id=\"container\" loaded={this.loaded.bind(this)} load={this.load} zoomSettings={{\r\n            enable: false\r\n        }} titleSettings={{\r\n            text: 'Cyber Attack Map of United States',\r\n            textStyle: { size: '16px' }\r\n        }}>\r\n                        <Inject services={[Marker, MapsTooltip, NavigationLine]}/>\r\n                        <LayersDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/world-map.json')} shapeSettings={{\r\n            border: { color: '#D2691E', width: 0.5 },\r\n            fill: '#FFFFE0'\r\n        }} navigationLineSettings={[\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.3, color: '#ffffb3',\r\n                latitude: [15.758401, 39.864171],\r\n                longitude: [101.155642, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: 0.4, color: '#ffffb3',\r\n                latitude: [57.725612, 39.864171],\r\n                longitude: [-101.802160, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.2, color: '#ffffb3',\r\n                latitude: [29.930938, 39.864171],\r\n                longitude: [69.358894, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.1, color: '#ffffb3',\r\n                latitude: [22.860388, 39.864171],\r\n                longitude: [79.739066, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.1, color: '#ffffb3',\r\n                latitude: [-24.763753, 39.864171],\r\n                longitude: [134.852191, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.4, color: '#ffffb3',\r\n                latitude: [34.611098, 39.864171],\r\n                longitude: [104.189872, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.8, color: '#ffffb3',\r\n                latitude: [-12.354844, 39.864171],\r\n                longitude: [-49.017709, -100.854833],\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.4, color: '#ffffb3',\r\n                latitude: [3.450682, 39.864171],\r\n                longitude: [-72.943141, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.7, color: '#ffffb3',\r\n                latitude: [62.448268, 39.864171],\r\n                longitude: [97.251835, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.3, color: '#ffffb3',\r\n                latitude: [65.931163, 39.864171],\r\n                longitude: [-45.812820, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.2, color: '#ffffb3',\r\n                latitude: [-21.206222, 39.864171],\r\n                longitude: [17.122018, -100.854833],\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.2, color: '#ffffb3',\r\n                latitude: [35.839969, 39.864171],\r\n                longitude: [137.904641, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.2, color: '#ffffb3',\r\n                latitude: [46.582184, 39.864171],\r\n                longitude: [2.232903, -100.854833]\r\n            },\r\n            {\r\n                dashArray: '5,1', visible: true,\r\n                angle: -0.2, color: '#ffffb3',\r\n                latitude: [0.390617, 39.864171],\r\n                longitude: [37.893734, -100.854833]\r\n            }\r\n        ]}>\r\n                                <MarkersDirective>\r\n                                    <MarkerDirective visible={true} template='<div id=\"marker_template\"><div class=\"pulse-css\"><br /><div class=\"name\">{{:name}}</div></div></div>' animationDuration={0} height={15} width={15} dataSource={[\r\n            { latitude: 15.758401, longitude: 101.155642, name: 'Thailand' },\r\n            { latitude: 57.725612, longitude: -101.802160, name: 'Canada' },\r\n            { latitude: 39.634177, longitude: 42.410740, name: 'Turkey' },\r\n            { latitude: 22.860388, longitude: 79.739066, name: 'India' },\r\n            { latitude: -24.763753, longitude: 134.852191, name: 'Australia' },\r\n            { latitude: 34.611098, longitude: 104.189872, name: 'China' },\r\n            { latitude: -12.354844, longitude: -49.017709, name: 'Brazil' },\r\n            { latitude: 3.450682, longitude: -72.943141, name: 'Colombia' },\r\n            { latitude: 62.448268, longitude: 97.251835, name: 'Russia' },\r\n            { latitude: 65.931163, longitude: -45.812820, name: 'Greenland' },\r\n            { latitude: -21.206222, longitude: 17.122018, name: 'Namibia' },\r\n            { latitude: 35.839969, longitude: 137.904641, name: 'Japan' },\r\n            { latitude: 46.582184, longitude: 2.232903, name: 'France' },\r\n            { latitude: 0.390617, longitude: 37.893734, name: 'Kenya' }\r\n        ]}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} template='<div id=\"parent_template\"><div class=\"parent_css\"><br/><div class=\"name\" style=\"margin-left: -10px;margin-top: -2px\">United States</div></div></div>' height={20} width={20} animationDuration={0} dataSource={[\r\n            {\r\n                latitude: 39.864171,\r\n                longitude: -100.854833\r\n            }\r\n        ]}>\r\n\r\n                                        </MarkerDirective>\r\n                                </MarkersDirective>\r\n                            </LayerDirective>\r\n                        </LayersDirective>\r\n                    </MapsComponent>\r\n                </div>\r\n                <div style={{ float: 'right', marginright: '10px' }}>Source: \r\n       <a href=\"https://craft.co/youtube/locations\" target=\"_blank\">craft.co/youtube/locations</a>\r\n       </div>\r\n        </div>);\r\n    }\r\n}\r\n\nrender(<CyberAttackMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}