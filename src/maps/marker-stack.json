{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","map-data/top-population.json":"\r\n{\r\n    \"population\" : [\r\n        {\r\n            \"name\": \"Tokyo\",\r\n            \"latitude\": 35.6894875,\r\n            \"longitude\": 139.6917064,\r\n            \"population\": 33200000,\r\n            \"Country\": \"Japan\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"New York\",\r\n            \"latitude\": 40.7127753,\r\n            \"longitude\": -74.0059728,\r\n            \"population\": 17800000,\r\n            \"Country\": \"United States\",\r\n            \"Continent\": \"North America\",\r\n            \"color\": \"green\",\r\n            \"shape\": \"Diamond\"\r\n        },\r\n        {\r\n            \"name\": \"Sao Paulo\",\r\n            \"latitude\": -23.5505199,\r\n            \"longitude\": -46.6333094,\r\n            \"population\": 17700000,\r\n            \"Country\": \"Brazil\",\r\n            \"Continent\": \"South America\",\r\n            \"color\": \"orange\",\r\n            \"shape\": \"InvertedTriangle\"\r\n        },\r\n        {\r\n            \"name\": \"Seoul/Incheon\",\r\n            \"latitude\": 37.566535,\r\n            \"longitude\": 126.9779692,\r\n            \"population\": 17500000,\r\n            \"Country\": \"South Korea\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Mexico City\",\r\n            \"latitude\": 19.2464696,\r\n            \"longitude\": -99.1013498,\r\n            \"population\": 17400000,\r\n            \"Country\": \"Mexico\",\r\n            \"Continent\": \"North America\",\r\n            \"color\": \"green\",\r\n            \"shape\": \"Diamond\"\r\n        },\r\n        {\r\n            \"name\": \"Osaka/Kobe/Kyoto\",\r\n            \"latitude\": 35.0212466,\r\n            \"longitude\": 135.7555968,\r\n            \"population\": 16425000,\r\n            \"Country\": \"Japan\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Manila\",\r\n            \"latitude\": 14.5995124,\r\n            \"longitude\": 120.9842195,\r\n            \"population\": 14750000,\r\n            \"Country\": \"Philippines\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Mumbai\",\r\n            \"latitude\": 19.0759837,\r\n            \"longitude\": 72.8776559,\r\n            \"population\": 14350000,\r\n            \"Country\": \"India\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Delhi\",\r\n            \"latitude\": 28.6139391,\r\n            \"longitude\": 77.2090212,\r\n            \"population\": 14300000,\r\n            \"Country\": \"India\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Jakarta\",\r\n            \"latitude\": -6.17511,\r\n            \"longitude\": 106.8650395,\r\n            \"population\": 14250000,\r\n            \"Country\": \"Indonesia\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Lagos\",\r\n            \"latitude\": 6.5243793,\r\n            \"longitude\": 3.3792057,\r\n            \"population\": 13400000,\r\n            \"Continent\": \"Africa\",\r\n            \"Country\": \"Nigeria\",\r\n            \"color\": \"blue\",\r\n            \"shape\": \"Rectangle\"\r\n        },\r\n        {\r\n            \"name\": \"Kolkata\",\r\n            \"latitude\": 22.572646,\r\n            \"longitude\": 88.363895,\r\n            \"population\": 12700000,\r\n            \"Country\": \"India\",\r\n            \"Continent\": \"Asia\",\r\n            \"color\": \"red\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Cairo\",\r\n            \"latitude\": 30.0444196,\r\n            \"longitude\": 31.2357116,\r\n            \"population\": 12200000,\r\n            \"Country\": \"Egypt\",\r\n            \"Continent\": \"Africa\",\r\n            \"color\": \"blue\",\r\n            \"shape\": \"Rectangle\"\r\n        },\r\n        {\r\n            \"name\": \"Los Angeles\",\r\n            \"latitude\": 34.0522265,\r\n            \"longitude\": -118.2436596,\r\n            \"population\": 11789000,\r\n            \"Continent\": \"North America\",\r\n            \"Country\": \"United States\",\r\n            \"color\": \"green\",\r\n            \"shape\": \"Diamond\"\r\n        },\r\n        {\r\n            \"name\": \"Buenos Aires\",\r\n            \"latitude\": -34.6036844,\r\n            \"longitude\": -58.3815591,\r\n            \"population\": 11200000,\r\n            \"Country\": \"Argentina\",\r\n            \"color\": \"orange\",\r\n            \"Continent\": \"South America\",\r\n            \"shape\": \"InvertedTriangle\"\r\n        },\r\n        {\r\n            \"name\": \"Rio de Janeiro\",\r\n            \"latitude\": -22.9068467,\r\n            \"longitude\": -43.1728965,\r\n            \"population\": 10800000,\r\n            \"Country\": \"Brazil\",\r\n            \"color\": \"orange\",\r\n            \"Continent\": \"South America\",\r\n            \"shape\": \"InvertedTriangle\"\r\n        },\r\n        {\r\n            \"name\": \"Moscow\",\r\n            \"latitude\": 55.755826,\r\n            \"longitude\": 37.6173,\r\n            \"population\": 10500000,\r\n            \"Country\": \"Russia\",\r\n            \"color\": \"yellow\",\r\n            \"Continent\": \"Europe\",\r\n            \"shape\": \"Triangle\"\r\n        },\r\n        {\r\n            \"name\": \"Shanghai\",\r\n            \"latitude\": 31.2303904,\r\n            \"longitude\": 121.4737021,\r\n            \"population\": 10000000,\r\n            \"Country\": \"China\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Karachi\",\r\n            \"latitude\": 25.0700428,\r\n            \"longitude\": 67.2847875,\r\n            \"population\": 9800000,\r\n            \"Country\": \"Pakistan\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Paris\",\r\n            \"latitude\": 48.856614,\r\n            \"longitude\": 2.3522219,\r\n            \"population\": 9645000,\r\n            \"Country\": \"France\",\r\n            \"color\": \"yellow\",\r\n            \"Continent\": \"Europe\",\r\n            \"shape\": \"Triangle\"\r\n        },\r\n        {\r\n            \"name\": \"Istanbul\",\r\n            \"latitude\": 41.0082376,\r\n            \"longitude\": 28.9783589,\r\n            \"population\": 9000000,\r\n            \"Country\": \"Istanbul\",\r\n            \"color\": \"yellow\",\r\n            \"Continent\": \"Europe\",\r\n            \"shape\": \"Triangle\"\r\n        },\r\n        {\r\n            \"name\": \"Nagoya\",\r\n            \"latitude\": 35.1814464,\r\n            \"longitude\": 136.906398,\r\n            \"population\": 9000000,\r\n            \"Country\": \"Japan\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Beijing\",\r\n            \"latitude\": 39.9041999,\r\n            \"longitude\": 116.4073963,\r\n            \"population\": 8614000,\r\n            \"Country\": \"China\",\r\n            \"color\": \"red\",\r\n            \"Continent\": \"Asia\",\r\n            \"shape\": \"Pentagon\"\r\n        },\r\n        {\r\n            \"name\": \"Chicago\",\r\n            \"latitude\": 41.8781136,\r\n            \"longitude\": -87.6297982,\r\n            \"population\": 8308000,\r\n            \"Country\": \"United States\",\r\n            \"color\": \"green\",\r\n            \"Continent\": \"North America\",\r\n            \"shape\": \"Diamond\"\r\n        },\r\n        {\r\n            \"name\": \"London\",\r\n            \"latitude\": 51.5073509,\r\n            \"longitude\": -0.1277583,\r\n            \"population\": 8278000,\r\n            \"Country\": \"United Kingdom\",\r\n            \"color\": \"yellow\",\r\n            \"Continent\": \"Europe\",\r\n            \"shape\": \"Triangle\"\r\n        }\r\n  ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, MapsTooltip, Marker, MarkersDirective, MarkerDirective } from '@syncfusion/ej2-react-maps';\r\nimport { CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\nimport * as data from './map-data/top-population.json';\r\nlet datasource = data;\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class MarkerMaps extends SampleBase {\r\n    // Code for Property Panel\r\n    shapeChange(args) {\r\n        if (args.checked) {\r\n            this.mapInstance.layers[0].markerSettings[0].shapeValuePath = 'shape';\r\n        }\r\n        else {\r\n            this.mapInstance.layers[0].markerSettings[0].shapeValuePath = null;\r\n        }\r\n        this.mapInstance.refresh();\r\n    }\r\n    colorChange(args) {\r\n        if (args.checked) {\r\n            this.mapInstance.layers[0].markerSettings[0].colorValuePath = 'color';\r\n        }\r\n        else {\r\n            this.mapInstance.layers[0].markerSettings[0].colorValuePath = null;\r\n        }\r\n        this.mapInstance.refresh();\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='col-lg-9 control-section'>\r\n                    <MapsComponent id=\"maps\" loaded={this.onMapsLoad.bind(this)} load={this.load} ref={m => this.mapInstance = m} useGroupingSeparator={true} format={\"n\"} zoomSettings={{\r\n            enable: false\r\n        }} titleSettings={{\r\n            text: 'Top 25 populated cities in the world',\r\n            textStyle: {\r\n                size: '16px'\r\n            }\r\n        }}>\r\n                        <Inject services={[Marker, MapsTooltip]}/>\r\n                        <LayersDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/world-map.json')} shapePropertyPath='name' shapeDataPath='Country' dataSource={datasource.population} shapeSettings={{\r\n            fill: '#C3E6ED'\r\n        }}><MarkersDirective>\r\n                                    <MarkerDirective visible={true} animationDuration={0} shape='Circle' fill='white' width={10} border={{\r\n            color: '#285255',\r\n            width: 2\r\n        }} dataSource={datasource.population} tooltipSettings={{\r\n            template: '<div id=\"markertooltiptemplate\" style=\"width: 170px;opacity: 90%;background: rgba(53, 63, 76, 0.90);box-shadow: 0px 2px 2px rgba(0, 0, 0, 0.40);padding:10px;border: 1px #abb9c6;border-radius: 4px;\">' +\r\n                '<div style=\"font-size:13px;color:#ffffff;font-weight: 500;\"><center>${name}</center></div>' +\r\n                '<hr style=\"margin-top: 2px;margin-bottom:5px;border:0.5px solid #DDDDDD\">' +\r\n                '<div><span style=\"font-size:13px;color:#cccccc\">Country : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${Country}</span></div>' +\r\n                '<div><span style=\"font-size:13px;color:#cccccc\">Continent : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${Continent}</span></div>' +\r\n                '<div><span style=\"font-size:13px;color:#cccccc\">Population : </span><span style=\"font-size:13px;color:#ffffff;font-weight: 500;\">${population}</span></div></div>',\r\n            visible: true,\r\n            valuePath: 'population'\r\n        }}>\r\n                                    </MarkerDirective>\r\n                                </MarkersDirective>\r\n                            </LayerDirective>\r\n                        </LayersDirective>\r\n                    </MapsComponent>\r\n                    \r\n                    <div style={{ float: 'right', marginright: '10px' }}>Source:\r\n                        <a href=\"http://www.citymayors.com/statistics/largest-cities-population-125.html\" target=\"_blank\">www.citymayors.com</a>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className='col-lg-3 property-section'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%', marginBottom: '20px' }}>\r\n                            <tr style={{ height: \"50px\" }}>\r\n                                <td style={{ width: \"80%\" }}>\r\n                                    <div className=\"property-text\" style={{ padding: \"0px;\" }}>Bind markers shape from data source</div>\r\n                                </td>\r\n                                <td style={{ width: \"20%\" }}>\r\n                                    <div className=\"col\">\r\n                                        <CheckBoxComponent id=\"shapeCheckBox\" change={this.shapeChange.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr style={{ height: \"50px\" }}>\r\n                                <td style={{ width: \"70%\" }}>\r\n                                    <div className=\"property-text\" style={{ padding: \"0px;\" }}>Bind markers color from data source</div>\r\n                                </td>\r\n                                <td style={{ width: \"20%\" }}>\r\n                                    <div className=\"col\">\r\n                                        <CheckBoxComponent id=\"colorCheckBox\" change={this.colorChange.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onMapsLoad(args) {\r\n        let maps = document.getElementById('maps');\r\n        maps.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<MarkerMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}