{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","map-data/zooming-datasource.json":"[\r\n    {\r\n        \"country\": \"RUS\",\r\n        \"continent\": \"Europe\",\r\n        \"CategoryName\": \"Books\",\r\n        \"Sales\": 3746,\r\n        \"color\": \"#EC9B79\"\r\n    },\r\n    {\r\n        \"country\": \"IND\",\r\n        \"continent\": \"Asia\",\r\n        \"CategoryName\": \"Books\",\r\n        \"Sales\": 10688,\r\n        \"color\": \"#7BC1E8\"\r\n    },\r\n    {\r\n        \"country\": \"CAN\",\r\n        \"continent\": \"North America\",\r\n        \"CategoryName\": \"Books\",\r\n        \"Sales\": 10882,\r\n        \"color\": \"#B5E485\"\r\n    },\r\n    {\r\n        \"country\": \"BRA\",\r\n        \"continent\": \"South America\",\r\n        \"CategoryName\": \"Books\",\r\n        \"Sales\": 13776,\r\n        \"color\": \"#78D0D3\"\r\n    },\r\n    {\r\n        \"country\": \"JPN\",\r\n        \"continent\": \"Asia\",\r\n        \"CategoryName\": \"Books\",\r\n        \"Sales\": 19390,\r\n        \"color\": \"#7BC1E8\"\r\n    },\r\n    {\r\n        \"country\": \"AUS\",\r\n        \"continent\": \"Australia\",\r\n        \"CategoryName\": \"Books\",\r\n        \"Sales\": 30716,\r\n        \"color\": \"#D6D572\"\r\n    },\r\n    {\r\n        \"country\": \"CAF\",\r\n        \"continent\": \"Africa\",\r\n        \"CategoryName\": \"Books\",\r\n        \"Sales\": 18718.0,\r\n        \"color\": \"#DF819C\"\r\n    }\r\n]","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, Zoom } from '@syncfusion/ej2-react-maps';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { SliderComponent } from '@syncfusion/ej2-react-inputs';\r\nimport * as data from './map-data/zooming-datasource.json';\r\nlet datasource = data;\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }\r\n    .slider-content-wrapper {\r\n        width: 40%;\r\n        margin: 0 auto;\r\n        min-width: 185px;\r\n    }\r\n\r\n    .slider-userselect {\r\n        -webkit-user-select: none;\r\n        /* Safari 3.1+ */\r\n        -moz-user-select: none;\r\n        /* Firefox 2+ */\r\n        -ms-user-select: none;\r\n        /* IE 10+ */\r\n        user-select: none;\r\n        /* Standard syntax */\r\n    }\r\n\r\n    .slider-labeltext {\r\n        text-align: -webkit-left;\r\n        font-weight: 500;\r\n        font-size: 13px;\r\n        padding-bottom: 10px;\r\n    }\r\n\r\n    .slider_container {\r\n        margin-top: 40px;\r\n    }\r\n\r\n    .e-bigger .slider-content-wrapper {\r\n        width: 80%;\r\n    }\r\n\r\n    #height_slider .e-tab-handle::after {\r\n        background-color: #f9920b;\r\n    }\r\n\r\n    #height_slider.e-control.e-slider .e-slider-track {\r\n        height: 8px;\r\n        top: calc(50% - 4px);\r\n        border-radius: 0;\r\n    }\r\n    .highcontrast #height_slider.e-control.e-slider .e-slider-track {\r\n        height: 10px;\r\n        top: calc(50% - 5px);\r\n        border-radius: 0;\r\n    }\r\n    .fabric .slider_container .e-slider-hover .e-slider-track, .fabric .slider_container .e-slider-container:active .e-slider-track,\r\n    .fabric .slider_container .e-slider-container .e-slider .e-tab-track{\r\n        background-color: #c8c8c8;\r\n    }\r\n\r\n    #gradient_slider.e-control.e-slider .e-range {\r\n        height: 6px;\r\n        top: calc(50% - 3px);\r\n        border-radius: 5px;\r\n        background: linear-gradient(to top left, #f9f9f9 25%, #f9920b 90%);\r\n    }\r\n\r\n    .fabric .slider_container .e-slider-hover .e-slider-track,\r\n    .fabric .slider_container .e-slider-container:active .e-slider-track,\r\n    .fabric .slider_container .e-slider-container .e-slider .e-tab-track {\r\n        background-color: #c8c8c8;\r\n    }\r\n\r\n    #gradient_slider.e-control.e-slider .e-slider-track {\r\n        height: 8px;\r\n        top: calc(50% - 4px);\r\n        border-radius: 5px;\r\n    }\r\n\r\n    #range > * {\r\n        padding: 0px !important;\r\n    }`;\r\nconst slidercss = `  \r\n    .content-wrapper {\r\n        width: 40%;\r\n        margin: 0 auto;\r\n        min-width: 100px;\r\n    }`;\r\nexport class ZoomingMaps extends SampleBase {\r\n    sliderchange(args) {\r\n        this.mapInstance.zoomModule.toolBarZooming(args.value, 'ZoomIn');\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section row'>\r\n                    <div className='col-md-8'>\r\n                        \r\n                        <MapsComponent id=\"maps\" loaded={this.onMapsLoad.bind(this)} load={this.load} ref={m => this.mapInstance = m} zoomSettings={{\r\n            enable: true,\r\n            pinchZooming: true,\r\n            toolbars: ['Zoom', 'ZoomIn', 'ZoomOut', 'Pan', 'Reset']\r\n        }}>\r\n                            <Inject services={[Zoom]}/>\r\n                            <LayersDirective>\r\n                                <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/world-map.json')} shapePropertyPath='continent' shapeDataPath='continent' dataSource={datasource} animationDuration={500} shapeSettings={{\r\n            autofill: true,\r\n            colorValuePath: 'color'\r\n        }}>\r\n                                </LayerDirective>\r\n                            </LayersDirective>\r\n                        </MapsComponent>\r\n                    </div>\r\n                    <div className='col-md-4 property-section'>\r\n                        <PropertyPane title='Properties'>\r\n                            <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '80%' }}>\r\n                                        <div>Zooming</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <input type=\"checkbox\" onClick={this.zooming.bind(this)} defaultChecked={true} id=\"zoom\" style={{ marginTop: '15px' }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '80%' }}>\r\n                                        <div>Mouse wheel zoom</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <input type=\"checkbox\" onClick={this.mousewheel.bind(this)} defaultChecked={true} id=\"mousewheel\" style={{ marginTop: '15px' }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '80%' }}>\r\n                                        <div>Pinch zoom</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <input type=\"checkbox\" onClick={this.pinching.bind(this)} defaultChecked={true} id=\"pinch\" style={{ marginTop: '15px' }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '80%' }}>\r\n                                        <div>Single click zoom</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <input type=\"checkbox\" onClick={this.singletap.bind(this)} id=\"singletap\" style={{ marginTop: '15px' }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '80%' }}>\r\n                                        <div>Double click zoom</div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div>\r\n                                            <input type=\"checkbox\" onClick={this.doubletab.bind(this)} id=\"doubletap\" style={{ marginTop: '15px' }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '80%' }}>\r\n                                        <div id=\"range1\">Animation Duration <span>&nbsp;&nbsp;&nbsp;500ms</span> </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"content-wrapper\">\r\n                                            <style> {slidercss} </style>\r\n                                            <SliderComponent id=\"range\" change={this.animationChange.bind(this)} ref={(slider) => this.animationElement = slider} name=\"animationRange\" step={250} value={500} min={0} max={1000}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onMapsLoad(args) {\r\n        let maps = document.getElementById('maps');\r\n        maps.setAttribute('title', '');\r\n    }\r\n    ;\r\n    mousewheel() {\r\n        let element = (document.getElementById('mousewheel'));\r\n        this.mapInstance.zoomSettings.mouseWheelZoom = element.checked;\r\n        this.mapInstance.refresh();\r\n    }\r\n    pinching() {\r\n        let element = (document.getElementById('pinch'));\r\n        this.mapInstance.zoomSettings.pinchZooming = element.checked;\r\n        this.mapInstance.refresh();\r\n    }\r\n    zooming() {\r\n        let element = (document.getElementById('zoom'));\r\n        this.mapInstance.zoomSettings.enable = element.checked;\r\n        this.mapInstance.refresh();\r\n    }\r\n    doubletab() {\r\n        let element = (document.getElementById('doubletap'));\r\n        this.mapInstance.zoomSettings.doubleClickZoom = element.checked;\r\n        let ele1 = document.getElementById('singletap');\r\n        if (element.checked) {\r\n            ele1.disabled = true;\r\n        }\r\n        else {\r\n            ele1.disabled = false;\r\n        }\r\n        this.mapInstance.refresh();\r\n    }\r\n    singletap() {\r\n        let element = (document.getElementById('singletap'));\r\n        let ele1 = document.getElementById('doubletap');\r\n        this.mapInstance.zoomSettings.zoomOnClick = element.checked;\r\n        if (element.checked) {\r\n            ele1.disabled = true;\r\n        }\r\n        else {\r\n            ele1.disabled = false;\r\n        }\r\n        this.mapInstance.refresh();\r\n    }\r\n    animationChange() {\r\n        this.mapInstance.layers[0].animationDuration = parseInt(this.animationElement.value.toString(), 10);\r\n        this.mapInstance.refresh();\r\n        document.getElementById('range1').innerHTML = 'Animation Duration <span>&nbsp;&nbsp;&nbsp;' + (parseInt(this.animationElement.value.toString(), 10)) + 'ms';\r\n    }\r\n}\r\n\nrender(<ZoomingMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}