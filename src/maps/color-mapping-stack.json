{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","map-data/color-mapping.json":"{\r\n\"color\": [\r\n    {\"State\" : \"Alabama\",\"inches\": 5.37, \"value\": \"High\" },\r\n    {\"State\" : \"Alaska\", \"inches\":1.15, \"value\": \"Low\" },\r\n    {\"State\" : \"Arizona\", \"inches\":0.77, \"value\": \"Low\" },\r\n    {\"State\" : \"Arkansas\", \"inches\":4.99, \"value\": \"High\" },\r\n    {\"State\" : \"California\", \"inches\":1.93, \"value\": \"Low\" },\r\n    {\"State\" : \"Colorado\", \"inches\":1.56, \"value\": \"Low\" },\r\n    {\"State\" : \"Connecticut\", \"inches\":4.35, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Delaware\", \"inches\":4.01, \"value\": \"High\" },\r\n    {\"State\" : \"Florida\", \"inches\":3.63, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Georgia\", \"inches\":4.16, \"value\": \"High\" },\r\n    {\"State\" : \"Hawaii\", \"inches\":5.94, \"value\": \"High\" },\r\n    {\"State\" : \"Idaho\", \"inches\":1.75, \"value\": \"Low\" },\r\n    {\"State\" : \"Illinois\", \"inches\":3.79, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Indiana\", \"inches\":3.94, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Iowa\", \"inches\":3.25, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Kansas\", \"inches\":3.00, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Kentucky\", \"inches\":4.61, \"value\": \"High\" },\r\n    {\"State\" : \"Louisiana\", \"inches\":5.22, \"value\": \"High\" },\r\n    {\"State\" : \"Maine\", \"inches\":3.49, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Maryland\", \"inches\":3.93, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Massachusetts\", \"inches\":4.06, \"value\": \"High\" },\r\n    {\"State\" : \"Michigan\", \"inches\":2.62, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Minnesota\", \"inches\":2.19, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Mississippi\", \"inches\":5.77, \"value\": \"High\" },\r\n    {\"State\" : \"Missouri\", \"inches\":4.12, \"value\": \"High\" },\r\n    {\"State\" : \"Montana\",\"inches\":1.51, \"value\": \"Low\" },\r\n    {\"State\" : \"Nebraska\",\"inches\":2.60, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Nevada\",\"inches\":0.96, \"value\": \"Low\" },\r\n    {\"State\" : \"New Hampshire\",\"inches\":3.54, \"value\": \"Moderate\" },\r\n    {\"State\" : \"New Jersey\",\"inches\":4.13, \"value\": \"High\" },\r\n    {\"State\" : \"New Mexico\",\"inches\":0.82, \"value\": \"Low\" },\r\n    {\"State\" : \"New York\",\"inches\":3.41, \"value\": \"Moderate\" },\r\n    {\"State\" : \"North Carolina\",\"inches\":4.14, \"value\": \"High\" },\r\n    {\"State\" : \"North Dakota\",\"inches\":1.50, \"value\": \"Low\" },\r\n    {\"State\" : \"Ohio\",\"inches\":3.53, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Oklahoma\",\"inches\":3.84, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Oregon\",\"inches\":2.33, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Pennsylvania\",\"inches\":3.67, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Rhode Island\",\"inches\":4.23, \"value\": \"High\" },\r\n    {\"State\" : \"South Carolina\",\"inches\":3.83, \"value\": \"Moderate\" },\r\n    {\"State\" : \"South Dakota\",\"inches\":2.17, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Tennessee\",\"inches\":5.15, \"value\": \"High\" },\r\n    {\"State\" : \"Texas\",\"inches\":2.50, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Utah\",\"inches\":1.16, \"value\": \"Low\" },\r\n    {\"State\" : \"Vermont\",\"inches\":3.40, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Virginia\",\"inches\":3.91, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Washington\",\"inches\":2.90, \"value\": \"Moderate\" },\r\n    {\"State\" : \"West Virginia\",\"inches\":4.06, \"value\": \"High\" },\r\n    {\"State\" : \"Wisconsin\",\"inches\":2.73, \"value\": \"Moderate\" },\r\n    {\"State\" : \"Wyoming\",\"inches\":1.42, \"value\": \"Low\" }\r\n]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\r\nimport { PropertyPane } from './property-pane';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, Legend, MapsTooltip, } from '@syncfusion/ej2-react-maps';\r\nimport * as data from './map-data/color-mapping.json';\r\nlet datasource = data;\r\nimport { SampleBase } from './sample-base';\r\nexport class ColorMap extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        // Code for Property Panel\r\n        this.dropList = [\r\n            { text: 'Range', value: 'RangeColorMapping' },\r\n            { text: 'Equal', value: 'EqualColorMapping' },\r\n            { text: 'Desaturation', value: 'DesaturationColorMapping' }\r\n        ];\r\n    }\r\n    minOpacityChange() {\r\n        if (this.opacityElement.checked && !this.opacityElement.disabled) {\r\n            let slider = document.getElementById('minOpacity');\r\n            let minOpacity = parseFloat(slider.value);\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].minOpacity = minOpacity;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].minOpacity = minOpacity;\r\n            this.mapInstance.refresh();\r\n        }\r\n    }\r\n    maxOpacityChange() {\r\n        if (this.opacityElement.checked && !this.opacityElement.disabled) {\r\n            let slider = document.getElementById('maxOpacity');\r\n            let maxOpacity = parseFloat(slider.value);\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].maxOpacity = maxOpacity;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].maxOpacity = maxOpacity;\r\n            this.mapInstance.refresh();\r\n        }\r\n    }\r\n    opacityChange(args) {\r\n        let value = args.checked;\r\n        if (value) {\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].minOpacity = parseFloat(this.minOpacityElement.value);\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].maxOpacity = parseFloat(this.maxOpacityElement.value);\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].minOpacity = parseFloat(this.minOpacityElement.value);\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].maxOpacity = parseFloat(this.maxOpacityElement.value);\r\n            this.minOpacityElement.disabled = false;\r\n            this.maxOpacityElement.disabled = false;\r\n        }\r\n        else {\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].minOpacity = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].maxOpacity = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].minOpacity = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].maxOpacity = null;\r\n            this.minOpacityElement.disabled = true;\r\n            this.maxOpacityElement.disabled = true;\r\n        }\r\n        this.mapInstance.refresh();\r\n    }\r\n    typeChange() {\r\n        let value = this.typeElement.value.toString();\r\n        if (value === 'RangeColorMapping') {\r\n            this.opacityElement.disabled = true;\r\n            this.mapInstance.layers[0].shapeSettings.colorValuePath = 'inches';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].from = 0.1;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].to = 1;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].color = '#DEEBAE';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].label = '0 - 1';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].from = 1;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].to = 2;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].color = '#A4D6AD';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].label = '1 - 2';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].from = 2;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].to = 3;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].color = '#37AFAB';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].label = '2 - 3';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].from = 3;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].to = 4;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].color = '#547C84';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].label = '3 - 4';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].from = 4;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].to = 5;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].color = '#CEBF93';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].label = '4 - 5';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].from = 5;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].to = 6;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].color = '#a69d70';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].label = '5 - 6';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].value = null;\r\n            this.mapInstance.legendSettings.title.text = 'Inches';\r\n            this.mapInstance.refresh();\r\n        }\r\n        else if (value === 'EqualColorMapping') {\r\n            this.opacityElement.disabled = true;\r\n            this.mapInstance.layers[0].shapeSettings.colorValuePath = 'value';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].color = '#DEEBAE';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].value = 'Low';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].value = 'Moderate';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].color = '#A4D6AD';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].color = '#37AFAB';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].value = 'High';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].color = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].color = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].color = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].value = null;\r\n            this.mapInstance.legendSettings.title.text = 'Category';\r\n            this.mapInstance.refresh();\r\n        }\r\n        if (value === 'DesaturationColorMapping') {\r\n            if (this.opacityElement.checked) {\r\n                this.mapInstance.layers[0].shapeSettings.colorMapping[0].minOpacity = parseFloat(this.minOpacityElement.value);\r\n                this.mapInstance.layers[0].shapeSettings.colorMapping[0].maxOpacity = parseFloat(this.maxOpacityElement.value);\r\n            }\r\n            else {\r\n                this.mapInstance.layers[0].shapeSettings.colorMapping[0].minOpacity = null;\r\n                this.mapInstance.layers[0].shapeSettings.colorMapping[0].maxOpacity = null;\r\n            }\r\n            this.mapInstance.layers[0].shapeSettings.colorValuePath = 'inches';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].from = 0.1;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].to = 6;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].color = ['#F0D6AD', '#19547B'];\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[0].label = '0 - 6';\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].color = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[1].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].color = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[2].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].color = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[3].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].color = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[4].value = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].from = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].to = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].color = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].label = null;\r\n            this.mapInstance.layers[0].shapeSettings.colorMapping[5].value = null;\r\n            this.mapInstance.legendSettings.title.text = 'Inches';\r\n            this.mapInstance.refresh();\r\n            this.opacityElement.disabled = false;\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='col-lg-9 control-section'>\r\n                    <MapsComponent id=\"maps\" load={this.load} ref={m => this.mapInstance = m} titleSettings={{\r\n            text: 'Spring Precipitation Averages of US States',\r\n            textStyle: {\r\n                size: '16px'\r\n            }\r\n        }} zoomSettings={{\r\n            enable: false\r\n        }} legendSettings={{\r\n            visible: true,\r\n            position: 'Bottom', height: '10',\r\n            width: '80%', mode: 'Interactive',\r\n            titleStyle: {\r\n                size: '18px'\r\n            },\r\n            title: { text: 'Inches' }\r\n        }}>\r\n                        <Inject services={[Legend, MapsTooltip]}/>\r\n                        <LayersDirective>\r\n                            <LayerDirective dataSource={datasource.color} shapeDataPath='State' shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/usa.json')} shapePropertyPath='name' shapeSettings={{\r\n            colorValuePath: 'inches',\r\n            fill: '#E5E5E5',\r\n            /*border: {\r\n                color: 'black',\r\n                width: 0.2\r\n            },*/\r\n            colorMapping: [\r\n                {\r\n                    from: 0.1, to: 1, color: '#DEEBAE', label: '0 - 1'\r\n                },\r\n                {\r\n                    from: 1, to: 2, color: '#A4D6AD', label: '1 - 2'\r\n                },\r\n                {\r\n                    from: 2, to: 3, color: '#37AFAB', label: '2 - 3'\r\n                },\r\n                {\r\n                    from: 3, to: 4, color: '#547C84', label: '3 - 4'\r\n                },\r\n                {\r\n                    from: 4, to: 5, color: '#CEBF93', label: '4 - 5'\r\n                },\r\n                {\r\n                    from: 5, to: 6, color: '#a69d70', label: '5 - 6'\r\n                },\r\n            ],\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'State',\r\n            template: '<div id=\"template\"><div class=\"toolback\"><div class=\"listing2\"><center>${State}</center></div>' +\r\n                '<hr style=\"margin-top: 2px;margin-bottom:5px;border:0.5px solid #DDDDDD\"/><div><center>  <span class=\"listing1\">Inches : </span>' +\r\n                '<span class=\"listing2\">${inches}</span></center></div><div><center>  <span class=\"listing1\">Category : </span>' +\r\n                '<span class=\"listing2\">${value}</span> </center></div></div></div>'\r\n        }}>\r\n                            </LayerDirective>\r\n                        </LayersDirective>\r\n                    </MapsComponent>\r\n                    \r\n                <div style={{ float: 'right', marginright: '10px' }}>Source: \r\n                    <a href=\"https://simple.wikipedia.org/wiki/List_of_countries_by_population_density\" target=\"_blank\">simple.wikipedia.org</a>\r\n                </div>\r\n                </div>\r\n                \r\n\t\t\t\t\t<div className='col-lg-3 property-section'>\r\n\t\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t\t<table id='property' title='Properties' className='property-panel-table' style={{ width: '110%', marginBottom: '20px' }}>\r\n                                <tr>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Color MappingType</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"Type\" width=\"120px\" index={0} change={this.typeChange.bind(this)} ref={d => this.typeElement = d} dataSource={this.dropList} fields={{ text: 'text', value: 'value' }}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr id=\"hideOne\">\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Change Opacity</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckBoxComponent id='opacity' checked={false} change={this.opacityChange.bind(this)} ref={d => this.opacityElement = d} disabled={true}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr id=\"hideTwo\">\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Min Opacity</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"range\" id='minOpacity' disabled onChange={this.minOpacityChange.bind(this)} ref={d => this.minOpacityElement = d} min=\"0\" max=\"1\" step=\"0.1\" defaultValue=\"0.5\"/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr id=\"hideThree\">\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Max Opacity</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"range\" id='maxOpacity' disabled onChange={this.maxOpacityChange.bind(this)} ref={d => this.maxOpacityElement = d} min=\"0\" max=\"1\" step=\"0.1\" defaultValue=\"1\"/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t\t</div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<ColorMap />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}