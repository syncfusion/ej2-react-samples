{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, Marker, Legend, MarkersDirective, MarkerDirective } from '@syncfusion/ej2-react-maps';\r\nimport { SampleBase } from './sample-base';\r\nimport { AccumulationChart, PieSeries, AccumulationTooltip } from '@syncfusion/ej2-react-charts';\r\nAccumulationChart.Inject(PieSeries, AccumulationTooltip);\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class PieMaps extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.chartCollection = [];\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section row'>\r\n                    <div className='col-md-12'>\r\n                        <MapsComponent id=\"maps\" resize={this.resize.bind(this)} loaded={this.onMapsLoad.bind(this)} load={this.load} ref={m => this.mapInstance = m} titleSettings={{\r\n            text: 'Top 6 largest countries age group details',\r\n            textStyle: {\r\n                size: '16px'\r\n            }\r\n        }} zoomSettings={{\r\n            enable: false\r\n        }} legendSettings={{\r\n            visible: true,\r\n            position: 'Bottom'\r\n        }}>\r\n                            <Inject services={[Marker, Legend]}/>\r\n                            <LayersDirective>\r\n                                <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/continent.json')} shapeSettings={{\r\n            fill: '#E5E5E5',\r\n            colorMapping: [\r\n                {\r\n                    from: 0, to: 4, color: '#634D6F', label: '0-14 years',\r\n                },\r\n                {\r\n                    from: 5, to: 14, color: '#B34D6D', label: '15-24 years'\r\n                },\r\n                {\r\n                    from: 15, to: 59, color: '#557C5C', label: '25-54 years'\r\n                },\r\n                {\r\n                    from: 60, to: 100, color: '#5E55E2', label: '55-64 years'\r\n                }\r\n            ]\r\n        }}>\r\n                                <MarkersDirective>\r\n                                <MarkerDirective visible={true} animationDuration={0} template='<div id=\"marker4\" style=\"margin-left:-35px;margin-top:-35px;position: absolute !important;\"></div>' dataSource={[\r\n            { 'latitude': 35.746512259918504, 'longitude': 102.216796875 },\r\n        ]}></MarkerDirective>\r\n                                    <MarkerDirective visible={true} animationDuration={0} template='<div id=\"marker1\" style=\"margin-left:-35px;margin-top:-35px;position: absolute !important;\"></div>' dataSource={[\r\n            { 'latitude': 61.938950426660604, 'longitude': 97.03125 },\r\n        ]}></MarkerDirective>\r\n                                    <MarkerDirective visible={true} animationDuration={0} template='<div id=\"marker2\" style=\"margin-left:-35px;margin-top:-35px;position: absolute !important;\"></div>' dataSource={[\r\n            { 'latitude': 57.70414723434193, 'longitude': -114.08203125 }\r\n        ]}></MarkerDirective>\r\n                                    <MarkerDirective visible={true} animationDuration={0} template='<div id=\"marker3\" style=\"margin-left:-35px;margin-top:-35px;position: absolute !important;\"></div>' dataSource={[\r\n            { 'latitude': 39.90973623453719, 'longitude': -103.0078125 }\r\n        ]}></MarkerDirective>\r\n                                    <MarkerDirective visible={true} animationDuration={0} template='<div id=\"marker5\" style=\"margin-left:-35px;margin-top:-35px;position: absolute !important;\"></div>' dataSource={[\r\n            { 'latitude': -8.667918002363107, 'longitude': -52.55859375 },\r\n        ]}></MarkerDirective>\r\n                                    <MarkerDirective visible={true} animationDuration={0} template='<div id=\"marker6\" style=\"margin-left:-35px;margin-top:-35px;position: absolute !important;\"></div>' dataSource={[\r\n            { 'latitude': -23.725011735951796, 'longitude': 132.978515625 }\r\n        ]}></MarkerDirective>\r\n                                </MarkersDirective>\r\n                                </LayerDirective>\r\n                            </LayersDirective>\r\n                        </MapsComponent>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div style={{ float: 'right', marginright: '10px' }}>Source: \r\n                <a href=\"http://www.nationmaster.com/country-info/stats/People/Age-structure/55--64-years\" target=\"_blank\">www.nationmaster.com</a>\r\n               \r\n               </div>\r\n               \r\n            </div>);\r\n    }\r\n    onMapsLoad(args) {\r\n        let maps = document.getElementById('maps');\r\n        maps.setAttribute('title', '');\r\n        let chart = new AccumulationChart({\r\n            background: 'transparent',\r\n            width: '70',\r\n            height: '70',\r\n            tooltip: {\r\n                enable: true,\r\n                format: '${point.x} : ${point.y}'\r\n            },\r\n            series: [\r\n                {\r\n                    explode: true,\r\n                    explodeIndex: 0,\r\n                    explodeOffset: '20%',\r\n                    name: 'China',\r\n                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],\r\n                    dataSource: [\r\n                        { 'x': '0-14 years', y: 17.2 }, { 'x': '15-24 years', y: 15.4 },\r\n                        { 'x': '25-54 years', y: 46.9 }, { 'x': '55-64 years', y: 11.3 },\r\n                    ],\r\n                    type: 'Pie',\r\n                    xName: 'x',\r\n                    yName: 'y'\r\n                }\r\n            ],\r\n            legendSettings: { visible: false }\r\n        });\r\n        chart.appendTo('#marker1');\r\n        this.chartCollection.push(chart);\r\n        let chart1 = new AccumulationChart({\r\n            background: 'transparent',\r\n            width: '70',\r\n            height: '70',\r\n            tooltip: {\r\n                enable: true,\r\n                format: '${point.x} : ${point.y}%'\r\n            },\r\n            series: [\r\n                {\r\n                    explode: true,\r\n                    explodeIndex: 0,\r\n                    explodeOffset: '20%',\r\n                    name: 'Russia',\r\n                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],\r\n                    dataSource: [\r\n                        { 'x': '0-14 years', y: 16 }, { 'x': '15-24 years', y: 11.5 },\r\n                        { 'x': '25-54 years', y: 45.9 }, { 'x': '55-64 years', y: 13.5 },\r\n                    ],\r\n                    type: 'Pie',\r\n                    xName: 'x',\r\n                    yName: 'y'\r\n                }\r\n            ]\r\n        });\r\n        chart1.appendTo('#marker2');\r\n        this.chartCollection.push(chart1);\r\n        let chart2 = new AccumulationChart({\r\n            background: 'transparent',\r\n            width: '70',\r\n            height: '70',\r\n            tooltip: {\r\n                enable: true,\r\n                format: '${point.x} : ${point.y}%'\r\n            },\r\n            series: [\r\n                {\r\n                    explode: true,\r\n                    explodeIndex: 0,\r\n                    explodeOffset: '20%',\r\n                    name: 'Canada',\r\n                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],\r\n                    dataSource: [\r\n                        { 'x': '0-14 years', y: 15.5 }, { 'x': '15-24 years', y: 12.9 },\r\n                        { 'x': '25-54 years', y: 41.4 }, { 'x': '55-64 years', y: 13.3 },\r\n                    ],\r\n                    type: 'Pie',\r\n                    xName: 'x',\r\n                    yName: 'y'\r\n                }\r\n            ]\r\n        });\r\n        chart2.appendTo('#marker3');\r\n        this.chartCollection.push(chart2);\r\n        let chart3 = new AccumulationChart({\r\n            background: 'transparent',\r\n            width: '70',\r\n            height: '70',\r\n            tooltip: {\r\n                enable: true,\r\n                format: '${point.x} : ${point.y}%'\r\n            },\r\n            series: [\r\n                {\r\n                    explode: true,\r\n                    explodeIndex: 0,\r\n                    explodeOffset: '20%',\r\n                    name: 'USA',\r\n                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],\r\n                    dataSource: [\r\n                        { 'x': '0-14 years', y: 20 }, { 'x': '15-24 years', y: 13.7 },\r\n                        { 'x': '25-54 years', y: 40.2 }, { 'x': '55-64 years', y: 12.3 },\r\n                    ],\r\n                    type: 'Pie',\r\n                    xName: 'x',\r\n                    yName: 'y'\r\n                }\r\n            ]\r\n        });\r\n        chart3.appendTo('#marker4');\r\n        this.chartCollection.push(chart3);\r\n        let chart4 = new AccumulationChart({\r\n            background: 'transparent',\r\n            width: '70',\r\n            height: '70',\r\n            tooltip: {\r\n                enable: true,\r\n                format: '${point.x} : ${point.y}%'\r\n            },\r\n            series: [\r\n                {\r\n                    explode: true,\r\n                    explodeIndex: 0,\r\n                    explodeOffset: '20%',\r\n                    name: 'Brazil',\r\n                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],\r\n                    dataSource: [\r\n                        { 'x': '0-14 years', y: 24.2 }, { 'x': '15-24 years', y: 16.7 },\r\n                        { 'x': '25-54 years', y: 43.6 }, { 'x': '55-64 years', y: 8.2 },\r\n                    ],\r\n                    type: 'Pie',\r\n                    xName: 'x',\r\n                    yName: 'y'\r\n                }\r\n            ]\r\n        });\r\n        chart4.appendTo('#marker5');\r\n        this.chartCollection.push(chart4);\r\n        let chart5 = new AccumulationChart({\r\n            background: 'transparent',\r\n            width: '70',\r\n            height: '70',\r\n            tooltip: {\r\n                enable: true,\r\n                format: '${point.x} : ${point.y}%'\r\n            },\r\n            series: [\r\n                {\r\n                    explode: true,\r\n                    explodeIndex: 0,\r\n                    explodeOffset: '20%',\r\n                    name: 'Australia',\r\n                    palettes: ['#634D6F', '#B34D6D', '#557C5C', '#5E55E2', '#7C744D'],\r\n                    dataSource: [\r\n                        { 'x': '0-14 years', y: 18.1 }, { 'x': '15-24 years', y: 13.4 },\r\n                        { 'x': '25-54 years', y: 42 }, { 'x': '55-64 years', y: 11.8 },\r\n                    ],\r\n                    type: 'Pie',\r\n                    xName: 'x',\r\n                    yName: 'y'\r\n                }\r\n            ]\r\n        });\r\n        chart5.appendTo('#marker6');\r\n        this.chartCollection.push(chart5);\r\n    }\r\n    ;\r\n    resize(args) {\r\n        for (let i = 0; i < this.chartCollection.length; i++) {\r\n            this.chartCollection[i].destroy();\r\n        }\r\n    }\r\n}\r\n\nrender(<PieMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}