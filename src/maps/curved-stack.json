{"index.css":"/* css */","map-data/curved-datasource.json":"\r\n{\r\n    \"location\" : [ \r\n        {  \"name\" : \"New Delhi\",\r\n        \"latitude\": 28.6139391,\r\n        \"longitude\": 77.2090212\r\n        }, {\r\n        \"name\" : \"Mumbai\",\r\n        \"latitude\":  19.0759837,\r\n        \"longitude\":  72.8776559\r\n        }, {\r\n        \"name\" : \"Chennai\",\r\n        \"latitude\":  13.0826802,\r\n        \"longitude\": 80.2707184\r\n        }, {\r\n        \"name\" : \"Kolkata\",\r\n        \"latitude\":  22.572646,\r\n        \"longitude\":  88.363895\r\n        }, {\r\n        \"name\" : \"Kunming\",\r\n        \"latitude\": 24.880095,\r\n        \"longitude\":  102.832891\r\n        }, {\r\n        \"name\" : \"Beijing\",\r\n        \"latitude\":  39.9041999,\r\n        \"longitude\":  116.4073963\r\n        }, {\r\n        \"name\" : \"Shanghai\",\r\n        \"latitude\": 31.2303904,\r\n        \"longitude\": 121.4737021\r\n        }, {\r\n        \"name\" : \"Hong Kong\",\r\n        \"latitude\": 22.396428,\r\n        \"longitude\": 114.109497\r\n        }, {\r\n        \"name\" : \"Guangzhou\",\r\n        \"latitude\": 23.12911,\r\n        \"longitude\": 113.264385\r\n        }\r\n    ]\r\n}","map-data/navigation-datasource.json":"{\r\n    \"navigation\" : [\r\n        {\r\n            \"dashArray\": \"5,1\",\r\n            \"visible\": true,       \r\n            \"angle\": -0.2,\r\n            \"color\": \"black\",\r\n            \"latitude\": [28.6139391, 39.9041999],\r\n            \"longitude\": [77.2090212, 116.4073963]\r\n            \r\n        },\r\n        {\r\n            \"dashArray\": \"5,1\",\r\n            \"visible\": true,       \r\n            \"angle\": -0.2,\r\n            \"color\": \"black\",\r\n            \"latitude\": [28.6139391, 31.2303904],\r\n            \"longitude\": [77.2090212, 121.4737021]\r\n            \r\n        },\r\n        {\r\n            \"dashArray\": \"5,1\",\r\n            \"visible\": true,       \r\n            \"angle\": -0.2,\r\n            \"color\": \"black\",\r\n            \"latitude\": [28.6139391, 23.12911],\r\n            \"longitude\": [77.2090212, 113.264385]\r\n            \r\n        },\r\n        {\r\n            \"dashArray\": \"5,1\",\r\n            \"visible\": true,       \r\n            \"angle\": -0.4,\r\n            \"color\": \"black\",\r\n            \"latitude\": [28.6139391, 22.396428],\r\n            \"longitude\": [77.2090212, 114.109497]\r\n            \r\n        },\r\n        {\r\n            \"dashArray\": \"5,1\",\r\n            \"visible\": true,       \r\n            \"angle\": -0.2,\r\n            \"color\": \"black\",\r\n            \"latitude\": [19.0759837, 23.12911],\r\n            \"longitude\": [72.8776559, 113.264385]\r\n            \r\n        },\r\n        {\r\n            \"dashArray\": \"5,1\",\r\n            \"visible\": true,       \r\n            \"angle\": -0.2,\r\n            \"color\": \"black\",\r\n            \"latitude\": [13.0826802, 22.396428],\r\n            \"longitude\": [80.2707184, 114.109497]\r\n            \r\n        },\r\n        {\r\n            \"dashArray\": \"5,1\",\r\n            \"visible\": true,       \r\n            \"angle\": -0.2,\r\n            \"color\": \"black\",\r\n            \"latitude\": [22.572646, 24.880095],\r\n            \"longitude\": [88.363895, 102.832891]     \r\n        }\r\n    ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, Marker, MapsTooltip, MarkersDirective, MarkerDirective, NavigationLine, Zoom } from '@syncfusion/ej2-react-maps';\r\nimport { SampleBase } from './sample-base';\r\nimport * as data1 from './map-data/curved-datasource.json';\r\nimport * as data2 from './map-data/navigation-datasource.json';\r\nlet datasource1 = data1;\r\nlet datasource2 = data2;\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nlet markerTemplate = '<div id=\"marker1\" style=\"font-size:12px;color:black;font-weight:500\">{{:name}}' + '</div>';\r\nexport class CurvedMaps extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section row'>\r\n                    <div className='col-md-12'>\r\n                        <MapsComponent id=\"maps\" loaded={this.onMapsLoad.bind(this)} load={this.load} ref={m => this.mapInstance = m} centerPosition={{\r\n            latitude: 30.41078179084589,\r\n            longitude: 90.52734374999999\r\n        }} zoomSettings={{\r\n            enable: false,\r\n            zoomFactor: 3.5\r\n        }} mapsArea={{\r\n            background: '#AEE2FA'\r\n        }} titleSettings={{\r\n            text: 'Flights from India to China',\r\n            textStyle: {\r\n                size: '16px'\r\n            }\r\n        }}>\r\n                            <Inject services={[Marker, MapsTooltip, NavigationLine, Zoom]}/>\r\n                            <LayersDirective>\r\n                                <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/world-map.json')} shapeDataPath={'name'} shapePropertyPath={'name'} dataSource={[\r\n            {\r\n                name: 'India'\r\n            },\r\n            {\r\n                name: 'China'\r\n            }\r\n        ]} shapeSettings={{\r\n            colorValuePath: 'name',\r\n            fill: '#fcfbf9',\r\n            border: {\r\n                width: 0.1,\r\n                color: 'black'\r\n            },\r\n            colorMapping: [\r\n                {\r\n                    value: 'China',\r\n                    color: '#f7d083'\r\n                },\r\n                {\r\n                    value: 'India',\r\n                    color: '#FFFE99'\r\n                }\r\n            ]\r\n        }} navigationLineSettings={datasource2.navigation}>\r\n                                <MarkersDirective>\r\n                                    <MarkerDirective visible={true} shape='Circle' fill='white' width={4} animationDuration={0} border={{ color: 'black', width: 1 }} dataSource={datasource1.location}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            { 'name': 'New Delhi',\r\n                'latitude': 28.6139391,\r\n                'longitude': 77.2090212\r\n            }\r\n        ]} offset={{\r\n            x: -50,\r\n            y: 10\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            {\r\n                'name': 'Mumbai',\r\n                'latitude': 19.0759837,\r\n                'longitude': 72.8776559\r\n            }\r\n        ]} offset={{\r\n            x: 0,\r\n            y: 12\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            {\r\n                'name': 'Chennai',\r\n                'latitude': 13.0826802,\r\n                'longitude': 80.2707184\r\n            }\r\n        ]} offset={{\r\n            x: 0,\r\n            y: 12\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            {\r\n                'name': 'Kolkata',\r\n                'latitude': 22.572646,\r\n                'longitude': 88.363895\r\n            }\r\n        ]} offset={{\r\n            x: 0,\r\n            y: 12\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            {\r\n                'name': 'Kunming',\r\n                'latitude': 24.880095,\r\n                'longitude': 102.832891\r\n            }\r\n        ]} offset={{\r\n            x: 0,\r\n            y: 12\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            {\r\n                'name': 'Beijing',\r\n                'latitude': 39.9041999,\r\n                'longitude': 116.4073963\r\n            }\r\n        ]} offset={{\r\n            x: 0,\r\n            y: 12\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            {\r\n                'name': 'Shanghai',\r\n                'latitude': 31.2303904,\r\n                'longitude': 121.4737021\r\n            }\r\n        ]} offset={{\r\n            x: 0,\r\n            y: 12\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            {\r\n                'name': 'Hong Kong',\r\n                'latitude': 22.396428,\r\n                'longitude': 114.109497\r\n            }\r\n        ]} offset={{\r\n            x: 20,\r\n            y: 20\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                    <MarkerDirective visible={true} dataSource={[\r\n            {\r\n                'name': 'Guangzhou',\r\n                'latitude': 23.12911,\r\n                'longitude': 113.264385\r\n            }\r\n        ]} offset={{\r\n            x: 35,\r\n            y: -10\r\n        }} template={markerTemplate} animationDuration={0}>\r\n                                    </MarkerDirective>\r\n                                </MarkersDirective>\r\n                                </LayerDirective>\r\n                            </LayersDirective>\r\n                        </MapsComponent>\r\n                    </div>\r\n                    \r\n                    <div style={{ float: 'right', marginright: '10px' }}>Source: \r\n                        <a href=\"https://www.tibettravel.org/nepal-map/nepal-india-map.html\" target=\"_blank\">www.tibettravel.org</a>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onMapsLoad(args) {\r\n        let maps = document.getElementById('maps');\r\n        maps.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<CurvedMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}