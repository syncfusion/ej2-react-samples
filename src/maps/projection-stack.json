{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","map-data/projection-datasource.json":"{\r\n    \"projection\" : [\r\n        {\r\n            \"Country\": \"China\",\r\n            \"Membership\": \"Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"France\",\r\n            \"Membership\": \"Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Russia\",\r\n            \"Membership\": \"Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"United Kingdom\",\r\n            \"Membership\": \"Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"United States\",\r\n            \"Membership\": \"Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Bolivia\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Eq. Guinea\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Ethiopia\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"CÃ´te d Ivoire\",\r\n            \"Membership\": \"Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Kazakhstan\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Kuwait\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Netherlands\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Peru\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Poland\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        },\r\n        {\r\n            \"Country\": \"Sweden\",\r\n            \"Membership\": \"Non-Permanent\"\r\n        }\r\n    ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, Zoom, Legend, MapsTooltip } from '@syncfusion/ej2-react-maps';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport * as data from './map-data/projection-datasource.json';\r\nlet datasource = data;\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class ProjectionMaps extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.droplist = [\r\n            { value: 'Mercator' },\r\n            { value: 'Equirectangular' },\r\n            { value: 'Miller' },\r\n            { value: 'Eckert3' },\r\n            { value: 'Eckert5' },\r\n            { value: 'Eckert6' },\r\n            { value: 'Winkel3' },\r\n            { value: 'AitOff' }\r\n        ];\r\n    }\r\n    change() {\r\n        this.mapInstance.projectionType = this.dropElement.value;\r\n        this.mapInstance.refresh();\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section row'>\r\n                    <div className='col-md-8'>\r\n                        <MapsComponent id=\"maps\" loaded={this.onMapsLoad.bind(this)} load={this.load} ref={m => this.mapInstance = m} zoomSettings={{\r\n            enable: false\r\n        }} legendSettings={{\r\n            visible: true\r\n        }} titleSettings={{\r\n            text: 'Members of the UN Security Council',\r\n            textStyle: {\r\n                size: '16px'\r\n            },\r\n            subtitleSettings: {\r\n                text: '- In 2017',\r\n                alignment: 'Far'\r\n            }\r\n        }}>\r\n                            <Inject services={[Zoom, Legend, MapsTooltip]}/>\r\n                            <LayersDirective>\r\n                                <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/world-map.json')} shapePropertyPath='name' shapeDataPath='Country' dataSource={datasource.projection} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'Country'\r\n        }} shapeSettings={{\r\n            fill: '#E5E5E5',\r\n            colorMapping: [\r\n                {\r\n                    value: 'Permanent',\r\n                    color: '#EDB46F'\r\n                },\r\n                {\r\n                    color: '#F1931B',\r\n                    value: 'Non-Permanent'\r\n                }\r\n            ],\r\n            colorValuePath: 'Membership'\r\n        }}>\r\n                                </LayerDirective>\r\n                            </LayersDirective>\r\n                        </MapsComponent>\r\n                    </div>\r\n                    \r\n                    <div className='col-md-4 property-section'>\r\n                        <PropertyPane title='Properties'>\r\n                            <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '60%' }}>\r\n                                        <div>Projection Type:</div>\r\n                                    </td>\r\n                                    <td style={{ width: '40%' }}>\r\n                                        <div>\r\n                                            <DropDownListComponent width=\"120px\" index={0} change={this.change.bind(this)} ref={d => this.dropElement = d} dataSource={this.droplist} fields={{ text: 'value', value: 'value' }} placeholder='Select projection type'/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div style={{ float: 'right', marginright: '10px' }}>Source: \r\n                <a href=\"https://en.wikipedia.org/wiki/List_of_members_of_the_United_Nations_Security_Council\" target=\"_blank\">en.wikipedia.org</a>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onMapsLoad(args) {\r\n        let maps = document.getElementById('maps');\r\n        maps.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<ProjectionMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}