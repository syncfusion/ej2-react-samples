{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, Selection } from '@syncfusion/ej2-react-maps';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nconst SAMPLE_CSS = `\r\n#control-container {\r\n    padding: 0px !important;\r\n}\r\n#seat-parent {\r\n    text-align: center;\r\n    cursor: pointer\r\n}\r\n#selectedseats {\r\n    padding: 10px;\r\n}\r\n#selectedseats, #seat-info {             \r\n    font-size: 14px;\r\n}\r\n#clear-btn {\r\n    padding: 10px;\r\n    border: 2px solid rgb(241, 235, 247);\r\n    border-radius: 8px;\r\n    background: rgb(246, 245, 248);\r\n    color: black;\r\n    font-size: 14px;\r\n}\r\n#sampletitle {\r\n    padding-left:30px;\r\n    font-size:20px;\r\n    font-weight:400;\r\n}\r\n.seats {\r\n    padding-top: 15px;\r\n    font-weight: bold;\r\n}`;\r\nlet seatInfo;\r\nexport class SeatBookingMaps extends SampleBase {\r\n    shapeSelected(args) {\r\n        seatInfo = document.getElementById('selectedseats');\r\n        if (args.shapeData.fill === 'Orange') {\r\n            args.fill = 'Orange !important';\r\n            document.getElementById(args.target).setAttribute('class', 'ShapeselectionMapStyle');\r\n            return;\r\n        }\r\n        args.fill = 'green';\r\n        let seat = args.shapeData.seatno;\r\n        let connector = ' ';\r\n        if (seatInfo.innerHTML === '') {\r\n            seatInfo.innerHTML = '<span id=\"seat-info\">Seats Selected -</span>';\r\n        }\r\n        else {\r\n            connector = ', ';\r\n        }\r\n        let seatString = '<span class=\"seats\">' + connector + seat + '</span>';\r\n        let seatString1 = ' ' + seat + '</span><span class=\"seats\">,'; // 15</span><span class=\"seats\">,\r\n        let lastString = '<span id=\"seat-info\">Seats Selected -</span><span class=\"seats\"> ' + seat + '</span>';\r\n        if (seatInfo.innerHTML.indexOf(seatString) === -1 && seatInfo.innerHTML.indexOf(seatString1) === -1 &&\r\n            seatInfo.innerHTML.indexOf(lastString) === -1) {\r\n            seatInfo.innerHTML += '<span class=\"seats\">' + connector + seat + '</span>';\r\n        }\r\n        else {\r\n            seatInfo.innerHTML = seatInfo.innerHTML.replace(seatString, '');\r\n            seatInfo.innerHTML = seatInfo.innerHTML.replace(seatString1, '');\r\n            if (seatInfo.innerHTML === lastString) {\r\n                seatInfo.innerHTML = '';\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section row'>\r\n                    <div className='col-md-8'>\r\n                    <div style={{ width: 200, margin: 'auto', paddingBottom: 20 }}>\r\n                          <img src=\"////npmci.syncfusion.com/development/react/demos/src/maps/images/bus-icon.png\" alt=\"Bus icon\" style={{ width: 25, height: 25, float: 'left' }}>\r\n                          </img>\r\n                          <div id=\"sampletitle\">Bus seat selection</div>\r\n                    </div>\r\n                    <div style={{ border: '3px solid darkgray', width: 200, display: 'block', margin: 'auto' }}>\r\n                    <img src=\"////npmci.syncfusion.com/development/react/demos/src/maps/images/wheel.png\" alt=\"Stering wheel icon\" style={{ width: 30, height: 30, marginLeft: '18%', marginTop: 10 }}></img>\r\n                        <MapsComponent id=\"maps\" loaded={this.onMapsLoad.bind(this)} load={this.load} ref={m => this.mapInstance = m} zoomSettings={{\r\n            enable: false\r\n        }} height=\"400\" itemSelection={this.shapeSelected.bind(this)}>\r\n                            <Inject services={[Selection]}/>\r\n                            <LayersDirective>\r\n                                <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/seat-selection.json')} geometryType='Normal' shapeSettings={{\r\n            colorValuePath: 'fill'\r\n        }} selectionSettings={{\r\n            enable: true,\r\n            opacity: 1,\r\n            enableMultiSelect: true\r\n        }}>\r\n                                </LayerDirective>\r\n                            </LayersDirective>\r\n                        </MapsComponent>\r\n                    </div>\r\n                    </div>\r\n                    <div className='col-md-4 property-section'>\r\n                        <PropertyPane title='Seat Selection'>\r\n                            <table id='property' className='property-panel-table' style={{ width: '100%' }}>\r\n                                <tbody>\r\n                                    <tr style={{ height: '30px' }}>\r\n                                        <td>\r\n                                            <div style={{ height: '0', width: '15px', paddingBottom: '5px', backgroundColor: 'gray', borderRadius: '25%' }}></div>\r\n\r\n                                            <div id='available' style={{ marginTop: '-25px', marginLeft: '15px' }}>Available</div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{ height: '30px' }}>\r\n                                        <td>\r\n                                            <div style={{ height: '0', width: '15px', paddingBottom: '5px', backgroundColor: 'Green', borderRadius: '25%' }}></div>\r\n\r\n                                            <div id='selected' style={{ marginTop: '-25px', marginLeft: '15px' }}>Selected</div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr style={{ height: '30px' }}>\r\n                                        <td>\r\n                                            <div style={{ height: '0', width: '15px', paddingBottom: '5px', backgroundColor: 'Orange', borderRadius: '25%' }}></div>\r\n\r\n                                            <div id='booked' style={{ marginTop: '-25px', marginLeft: '15px' }}>Booked</div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <br></br>\r\n                            <div id=\"seat-parent\">\r\n                                <span id='clear-btn' onClick={this.clearseats.bind(this)}>Clear Selection</span><br /><br />\r\n                                <div id=\"selectedseats\"></div>\r\n                            </div>\r\n                        </PropertyPane>\r\n                </div>\r\n            </div>\r\n            </div>);\r\n    }\r\n    onMapsLoad(args) {\r\n        let maps = document.getElementById('maps');\r\n        maps.setAttribute('title', '');\r\n    }\r\n    ;\r\n    clearseats() {\r\n        seatInfo.innerHTML = '';\r\n        let selected = document.getElementsByClassName('ShapeselectionMapStyle');\r\n        for (let i = 0, length = selected.length; i < length; i++) {\r\n            selected[0].setAttribute('class', '');\r\n        }\r\n    }\r\n}\r\n\nrender(<SeatBookingMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}