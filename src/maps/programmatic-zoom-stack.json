{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","map-data/southamerica-country-capitals.json":"{\r\n    \"southAmericaCountryCapitals\":[\r\n        {\r\n            \"name\": \"Buenos Aires\",\r\n            \"latitude\": -34.603722,\r\n            \"longitude\": -58.381592,\r\n            \"Country\": \"Argentina\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Sucre\",\r\n            \"latitude\": -19.019585,\r\n            \"longitude\": -65.261963,\r\n            \"Country\": \"Bolivia\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Bras√≠lia\",\r\n            \"latitude\": -15.793889,\r\n            \"longitude\": -47.882778,\r\n            \"Country\": \"Brazil\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Santiago\",\r\n            \"latitude\": -33.447487,\r\n            \"longitude\": -70.673676,\r\n            \"Country\": \"Chile\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Bogota\",\r\n            \"latitude\": 4.624335,\r\n            \"longitude\": -74.063644,\r\n            \"Country\": \"Colombia\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Quito\",\r\n            \"latitude\": -0.180653,\r\n            \"longitude\": -78.467834,\r\n            \"Country\": \"Ecuador\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Georgetown\",\r\n            \"latitude\": 6.8045,\r\n            \"longitude\": -58.1553,\r\n            \"Country\": \"Guyana\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Asuncion\",\r\n            \"latitude\": -25.3006592,\r\n            \"longitude\": -57.63591,\r\n            \"Country\": \"Paraguay\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Lima\",\r\n            \"latitude\": -12.046374,\r\n            \"longitude\": -77.042793,\r\n            \"Country\": \"Peru\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Paramaribo\",\r\n            \"latitude\":  5.8663802,\r\n            \"longitude\": -55.1668205,\r\n            \"Country\": \"Suriname\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Montevideo\",\r\n            \"latitude\": -34.901112,\r\n            \"longitude\": -56.164532,\r\n            \"Country\": \"Uruguay\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Caracas\",\r\n            \"latitude\": 10.500000,\r\n            \"longitude\": -66.916664,\r\n            \"Country\": \"Vanezuela\",\r\n            \"Continent\": \"South America\"\r\n        },\r\n        {\r\n            \"name\": \"Cayenne\",\r\n            \"latitude\": 4.937200,\r\n            \"longitude\": -52.326000,\r\n            \"Country\": \"French Guiana\",\r\n            \"Continent\": \"South America\"\r\n        }\r\n    ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, MapsTooltip, Marker, MarkersDirective, MarkerDirective, Zoom } from '@syncfusion/ej2-react-maps';\r\nimport { CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\nimport * as data from './map-data/southamerica-country-capitals.json';\r\nlet datasource = data;\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class ProgrammaticZoomMaps extends SampleBase {\r\n    // Code for Property Panel\r\n    zoomChange(args) {\r\n        this.mapInstance.zoomSettings.shouldZoomInitially = args.checked;\r\n        this.mapInstance.refresh();\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='col-lg-9 control-section'>\r\n                    <MapsComponent id=\"maps\" load={this.load} loaded={this.onMapsLoad.bind(this)} ref={m => this.mapInstance = m} useGroupingSeparator={true} format={\"n\"} zoomSettings={{\r\n            enable: true,\r\n            mouseWheelZoom: false,\r\n            pinchZooming: false\r\n        }} titleSettings={{\r\n            text: 'Capitals of South American countries',\r\n            textStyle: {\r\n                size: '16px'\r\n            }\r\n        }}>\r\n                        <Inject services={[Marker, MapsTooltip, Zoom]}/>\r\n                        <LayersDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/world-map.json')} shapePropertyPath='name' shapeDataPath='Country' dataSource={datasource.southAmericaCountryCapitals} shapeSettings={{\r\n            fill: '#C3E6ED',\r\n            border: {\r\n                color: 'black',\r\n                width: .3\r\n            }\r\n        }}><MarkersDirective>\r\n                                    <MarkerDirective visible={true} animationDuration={0} height={20} width={20} shape='Image' imageUrl='////npmci.syncfusion.com/development/react/demos/src/maps/images/ballon.png' dataSource={datasource.southAmericaCountryCapitals} tooltipSettings={{\r\n            format: '<b>Capital</b> : ${name}<br><b>Country</b> : ${Country}',\r\n            visible: true,\r\n            valuePath: 'name'\r\n        }}>\r\n                                    </MarkerDirective>\r\n                                </MarkersDirective>\r\n                            </LayerDirective>\r\n                        </LayersDirective>\r\n                    </MapsComponent>\r\n                    \r\n                    <div style={{ float: 'right', marginright: '10px' }}>Source:\r\n                        <a href=\"https://en.wikipedia.org/wiki/List_of_sovereign_states_and_dependent_territories_in_South_America#Sovereign_states\" target=\"_blank\">www.wikipedia.com</a>\r\n                    </div>\r\n                </div>\r\n                \r\n                <div className='col-lg-3 property-section'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%', marginBottom: '20px' }}>\r\n                            <tr style={{ height: \"50px\" }}>\r\n                                <td style={{ width: \"70%\" }}>\r\n                                    <div className=\"property-text\" style={{ padding: \"0px;\" }}>Zoom to fit all the makers in maps</div>\r\n                                </td>\r\n                                <td style={{ width: \"20%\" }}>\r\n                                    <div className=\"col\">\r\n                                        <CheckBoxComponent id=\"zoomCheckBox\" change={this.zoomChange.bind(this)}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onMapsLoad(args) {\r\n        let maps = document.getElementById('maps');\r\n        maps.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<ProgrammaticZoomMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}