{"index.css":"/* css */","map-data/default-datasource.json":"{\r\n    \"default\" : [\r\n        {\r\n            \"drillColor\": \"#C13664\",\r\n            \"continent\": \"North America\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 10882,\r\n            \"color\": \"#71B081\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#9C3367\",\r\n            \"continent\": \"South America\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 13776,\r\n            \"color\": \"#5A9A77\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#80306A\",\r\n            \"continent\": \"Africa\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 18718.0,\r\n            \"color\": \"#498770\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#622D6C\",\r\n            \"continent\": \"Europe\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 3746,\r\n            \"color\": \"#39776C\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#462A6D\",\r\n            \"continent\": \"Asia\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 10688,\r\n            \"color\": \"#266665\"\r\n        },\r\n        {\r\n            \"drillColor\": \"#2A2870\",\r\n            \"continent\": \"Australia\",\r\n            \"CategoryName\": \"Books\",\r\n            \"Sales\": 30716,\r\n            \"color\": \"#124F5E\"\r\n        }\r\n    ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Projection sample\r\n */\r\nimport * as React from \"react\";\r\nimport { MapAjax } from '@syncfusion/ej2-maps';\r\nimport { MapsComponent, Inject, LayersDirective, LayerDirective, Selection, Highlight, MarkersDirective, MarkerDirective, Marker, MapsTooltip } from '@syncfusion/ej2-react-maps';\r\nimport { SampleBase } from './sample-base';\r\nimport * as data from './map-data/default-datasource.json';\r\nlet datasource = data;\r\n// Data ref\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }\r\n    .backLabel:hover {\r\n        cursor: pointer;\r\n}`;\r\nlet markers = [\r\n    { name: 'Asia', latitude: 50.32087157990324, longitude: 90.015625 },\r\n    { name: 'Australia', latitude: -23.88583769986199, longitude: 134.296875 },\r\n    { name: 'Africa', latitude: 16.97274101999902, longitude: 16.390625 },\r\n    { name: 'Europe', latitude: 49.95121990866204, longitude: 18.468749999999998 },\r\n    { name: 'North America', latitude: 59.88893689676585, longitude: -109.3359375 },\r\n    { name: 'South America', latitude: -6.64607562172573, longitude: -54.54687499999999 }\r\n];\r\nlet touchmove;\r\nexport class DrilldownMaps extends SampleBase {\r\n    change() {\r\n        this.mapInstance.baseLayerIndex = 0;\r\n        this.mapInstance.refresh();\r\n        let button = document.getElementById('button');\r\n        button.style.display = 'none';\r\n        document.getElementById('content').innerHTML = 'Click on a shape to drill';\r\n        document.getElementById('category').style.visibility = 'hidden';\r\n        document.getElementById('text').innerHTML = '';\r\n        document.getElementById('symbol').style.visibility = 'hidden';\r\n    }\r\n    shapeSelected(args) {\r\n        let shape = args.shapeData.continent;\r\n        if (this.mapInstance.baseLayerIndex === 0 && !touchmove) {\r\n            if (shape === 'Africa') {\r\n                this.mapInstance.baseLayerIndex = 1;\r\n                this.mapInstance.refresh();\r\n            }\r\n            else if (shape === 'Europe') {\r\n                this.mapInstance.baseLayerIndex = 2;\r\n                this.mapInstance.refresh();\r\n            }\r\n            else if (shape === 'Asia') {\r\n                this.mapInstance.baseLayerIndex = 3;\r\n                this.mapInstance.refresh();\r\n            }\r\n            else if (shape === 'North America') {\r\n                this.mapInstance.baseLayerIndex = 4;\r\n                this.mapInstance.refresh();\r\n            }\r\n            else if (shape === 'South America') {\r\n                this.mapInstance.baseLayerIndex = 5;\r\n                this.mapInstance.refresh();\r\n            }\r\n            else if (shape === 'Australia') {\r\n                this.mapInstance.baseLayerIndex = 6;\r\n                this.mapInstance.refresh();\r\n            }\r\n            let button = document.getElementById('button');\r\n            button.style.display = 'block';\r\n            document.getElementById('content').innerHTML = '';\r\n            document.getElementById('category').style.visibility = 'visible';\r\n            document.getElementById('text').innerHTML = shape;\r\n            document.getElementById('symbol').style.visibility = 'visible';\r\n        }\r\n        touchmove = false;\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section row'>\r\n                <div id=\"button\" className=\"backLabel\">\r\n                <a id=\"category\" onClick={this.change.bind(this)} style={{ visibility: 'hidden', display: 'inline-block', fontsize: 16 }}>  \r\n                    <h5>WorldMap</h5>\r\n                    </a>\r\n                    <p style={{ visibility: 'hidden', display: 'inline-block' }} id=\"symbol\">&nbsp;&gt;&gt;&nbsp;</p>\r\n                    <p id=\"text\" style={{ display: 'inline-block', fontSize: 16 }}></p>\r\n                </div>\r\n\r\n               \r\n                <div className='col-md-12'>\r\n                    <MapsComponent id=\"maps\" ref={m => this.mapInstance = m} loaded={this.loaded} load={this.load} shapeSelected={this.shapeSelected.bind(this)} zoomSettings={{\r\n            enable: false\r\n        }}>\r\n                        <Inject services={[Selection, Highlight, Marker, MapsTooltip]}/>\r\n                        <LayersDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/world-map.json')} layerType='Geometry' shapePropertyPath='continent' shapeDataPath='continent' dataSource={datasource.default} shapeSettings={{\r\n            colorValuePath: 'drillColor'\r\n        }} selectionSettings={{\r\n            enable: false\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'continent'\r\n        }}>\r\n                            <MarkersDirective>\r\n                                    <MarkerDirective visible={true} template='<div style=\"font-size: 12px;color:white;text-shadow: 0px 1px 1px black;font-weight: 500;width:50px\">{{:name}}</div>' animationDuration={0} dataSource={markers}>\r\n                                    </MarkerDirective>\r\n                                </MarkersDirective>\r\n                            </LayerDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/africa.json')} layerType='Geometry' shapeSettings={{\r\n            fill: '#80306A'\r\n        }} highlightSettings={{\r\n            enable: true,\r\n            fill: '#80306A'\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'name'\r\n        }}>\r\n                            </LayerDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/europe.json')} layerType='Geometry' shapeSettings={{\r\n            fill: '#622D6C'\r\n        }} highlightSettings={{\r\n            enable: true,\r\n            fill: '#622D6C'\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'name'\r\n        }}>\r\n                            </LayerDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/asia.json')} layerType='Geometry' shapeSettings={{\r\n            fill: '#462A6D'\r\n        }} highlightSettings={{\r\n            enable: true,\r\n            fill: '#462A6D'\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'name'\r\n        }}>\r\n                            </LayerDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/north-america.json')} layerType='Geometry' shapeSettings={{\r\n            fill: '#C13664'\r\n        }} highlightSettings={{\r\n            enable: true,\r\n            fill: '#C13664'\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'name'\r\n        }}>\r\n                            </LayerDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/south-america.json')} layerType='Geometry' shapeSettings={{\r\n            fill: '#9C3367'\r\n        }} highlightSettings={{\r\n            enable: true,\r\n            fill: '#9C3367'\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'name'\r\n        }}>\r\n                            </LayerDirective>\r\n                            <LayerDirective shapeData={new MapAjax('////npmci.syncfusion.com/development/react/demos/src/maps/map-data/oceania.json')} layerType='Geometry' shapeSettings={{\r\n            fill: '#2A2870'\r\n        }} highlightSettings={{\r\n            enable: true,\r\n            fill: '#2A2870'\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            valuePath: 'name'\r\n        }}>\r\n                            </LayerDirective>\r\n                        </LayersDirective>\r\n                    </MapsComponent>\r\n                </div>\r\n            </div>\r\n            <div><i><p id=\"content\" style={{ fontSize: '16px', color: 'grey', textAlign: 'center' }}>Click on a shape to drill</p></i></div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<DrilldownMaps />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}