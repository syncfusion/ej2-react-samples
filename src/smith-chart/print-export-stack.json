{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * print and export sample for smith chart\r\n */\r\nimport * as React from \"react\";\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { SmithchartComponent, SmithchartSeriesCollectionDirective, SmithchartSeriesDirective, Inject, TooltipRender, SmithchartLegend } from '@syncfusion/ej2-react-charts';\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\nexport class Print extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.droplist = [\r\n            { text: 'JPEG', value: 'JPEG' },\r\n            { text: 'PNG', value: 'PNG' },\r\n            { text: 'SVG', value: 'SVG' },\r\n            { text: 'PDF', value: 'PDF' },\r\n        ];\r\n    }\r\n    onClick2(e) {\r\n        this.smithchartInstance.print();\r\n    }\r\n    onClick1(e) {\r\n        let fileName = document.getElementById('fileName').value;\r\n        this.smithchartInstance.export(this.mode.value, fileName);\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='col-md-8 control-section'>\r\n                    <SmithchartComponent load={this.load.bind(this)} id='smith-chart' ref={gauge => this.smithchartInstance = gauge} horizontalAxis={{ minorGridLines: { visible: true } }} legendSettings={{ visible: true, shape: 'Circle' }} //To config the legend for smithchart                        \r\n         radialAxis={{ minorGridLines: { visible: true } }}>\r\n                        <Inject services={[TooltipRender, SmithchartLegend]}/>\r\n                        <SmithchartSeriesCollectionDirective>\r\n                            <SmithchartSeriesDirective points={[\r\n            { resistance: 0.15, reactance: 0 }, { resistance: 0.15, reactance: 0.15 },\r\n            { resistance: 0.18, reactance: 0.3 }, { resistance: 0.2, reactance: 0.4 },\r\n            { resistance: 0.25, reactance: 0.6 }, { resistance: 0.38, reactance: 0.95 },\r\n            { resistance: 0.6, reactance: 1.25 }, { resistance: 1, reactance: 1.6 },\r\n            { resistance: 1.65, reactance: 1.9 }, { resistance: 2.75, reactance: 2 },\r\n            { resistance: 4.5, reactance: 0 }, { resistance: 3, reactance: -2 },\r\n            { resistance: 1.65, reactance: -1.95 }, { resistance: 1, reactance: -1.65 },\r\n            { resistance: 0.6, reactance: -1.25 }, { resistance: 0.35, reactance: -0.9 },\r\n            { resistance: 0.25, reactance: -0.6 }, { resistance: 0.25, reactance: -0.4 },\r\n            { resistance: 0.25, reactance: -0.3 }, { resistance: 0.25, reactance: -0.15 },\r\n            { resistance: 0.25, reactance: 0 },\r\n        ]} name='Transmission' enableAnimation={true} tooltip={{ visible: true }} marker={{ shape: 'Circle', visible: true, border: { width: 2 } }}>\r\n                            </SmithchartSeriesDirective>\r\n                        </SmithchartSeriesCollectionDirective>\r\n                    </SmithchartComponent>\r\n                </div>\r\n                \r\n                <div className='col-md-4 property-section'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%', marginBottom: '20px' }}>\r\n                            <tr>\r\n                                <td>\r\n                                    <div>Export Type</div>\r\n                                </td>\r\n                                <td>\r\n                                    <div>\r\n                                        <DropDownListComponent id=\"mode\" width=\"100px\" index={0} placeholder=\"JPEG\" ref={d => this.mode = d} dataSource={this.droplist} fields={{ text: 'text', value: 'value' }}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div>File Name</div>\r\n                                </td>\r\n                                <td>\r\n                                    <div className=\"e-float-input\" style={{ 'margin-top': '0px' }}>\r\n                                        <input id=\"fileName\" ref={d => this.nameElement = d} type=\"text\" defaultValue=\"Smith chart\" style={{ \"width\": \"100px\" }}/>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"btn-control\">\r\n                                        <ButtonComponent onClick={this.onClick1.bind(this)} style={{ width: '80px' }} cssClass='e-info' isPrimary={true}>Export</ButtonComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>\r\n                                    <div id=\"btn-control\">\r\n                                        <ButtonComponent onClick={this.onClick2.bind(this)} style={{ width: '80px' }} cssClass='e-info' isPrimary={true}>Print</ButtonComponent>\r\n                                    </div>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Print />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}