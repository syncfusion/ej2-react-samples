{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Axis types samples for sparkline\r\n */\r\nimport * as React from \"react\";\r\nimport { SparklineComponent, Inject, SparklineTooltip } from '@syncfusion/ej2-react-charts';\r\nimport { SampleBase } from './sample-base';\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nconst tableWidth = { width: '100%' };\r\nconst padding10 = { padding: '10px' };\r\nexport class Axis extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <div id=\"spark-container\" className=\"row\">\r\n                        <div className=\"cols-sample-area\">\r\n                            <table style={tableWidth}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style={{ \"text-align\": \"center\", \"font-size\": \"14px\", \"font-weight\": \"600\", \"font-family\": \"Roboto\" }}>\r\n                                            <div>Mean working hours for a month</div>\r\n                                            <div><i>(DateTime axis)</i></div>\r\n                                        </td>\r\n                                        <td style={padding10}>\r\n                                            <SparklineComponent load={this.load.bind(this)} id='spark1-container' height='100px' width='170px' lineWidth={1} type='Column' valueType='DateTime' fill='#3C78EF' tooltipSettings={{\r\n            visible: true, format: '${xDate} : ${yval}hrs',\r\n        }} dataSource={[\r\n            { xDate: new Date(2018, 0, 1), x: 0, yval: 4 },\r\n            { xDate: new Date(2018, 0, 2), x: 1, yval: 4.5 },\r\n            { xDate: new Date(2018, 0, 3), x: 2, yval: 8 },\r\n            { xDate: new Date(2018, 0, 4), x: 3, yval: 7 },\r\n            { xDate: new Date(2018, 0, 5), x: 4, yval: 6 },\r\n            { xDate: new Date(2018, 0, 8), x: 5, yval: 8 },\r\n            { xDate: new Date(2018, 0, 9), x: 6, yval: 8 },\r\n            { xDate: new Date(2018, 0, 10), x: 7, yval: 6.5 },\r\n            { xDate: new Date(2018, 0, 11), x: 8, yval: 4 },\r\n            { xDate: new Date(2018, 0, 12), x: 9, yval: 5.5 },\r\n            { xDate: new Date(2018, 0, 15), x: 10, yval: 8 },\r\n            { xDate: new Date(2018, 0, 16), x: 11, yval: 6 },\r\n            { xDate: new Date(2018, 0, 17), x: 12, yval: 6.5 },\r\n            { xDate: new Date(2018, 0, 18), x: 13, yval: 7.5 },\r\n            { xDate: new Date(2018, 0, 19), x: 14, yval: 7.5 },\r\n            { xDate: new Date(2018, 0, 22), x: 15, yval: 4 },\r\n            { xDate: new Date(2018, 0, 23), x: 16, yval: 8 },\r\n            { xDate: new Date(2018, 0, 24), x: 17, yval: 6 },\r\n            { xDate: new Date(2018, 0, 25), x: 18, yval: 7.5 },\r\n            { xDate: new Date(2018, 0, 26), x: 19, yval: 4.5 },\r\n            { xDate: new Date(2018, 0, 29), x: 20, yval: 6 },\r\n            { xDate: new Date(2018, 0, 30), x: 21, yval: 5 },\r\n            { xDate: new Date(2018, 0, 31), x: 22, yval: 7 }\r\n        ]} xName='xDate' yName='yval'>\r\n                                                <Inject services={[SparklineTooltip]}/>\r\n                                            </SparklineComponent>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ \"text-align\": \"center\", \"font-size\": \"14px\", \"font-weight\": \"600\", \"font-family\": \"Roboto\" }}>\r\n                                            <div>Percentage of the students in a class</div>\r\n                                            <div><i>(Category axis)</i></div>\r\n                                        </td>\r\n                                        <td style={padding10}>\r\n                                            <SparklineComponent load={this.load.bind(this)} id='spark2-container' height='100px' width='170px' lineWidth={1} type='Column' valueType='Category' fill='#3C78EF' tooltipSettings={{\r\n            visible: true, format: '${xval} : ${yval}%',\r\n        }} dataSource={[\r\n            { x: 0, xval: 'Robert', yval: 60 },\r\n            { x: 1, xval: 'Andrew', yval: 65 },\r\n            { x: 2, xval: 'Suyama', yval: 70 },\r\n            { x: 3, xval: 'Michael', yval: 80 },\r\n            { x: 4, xval: 'Janet', yval: 55 },\r\n            { x: 5, xval: 'Davolio', yval: 90 },\r\n            { x: 6, xval: 'Fuller', yval: 75 },\r\n            { x: 7, xval: 'Nancy', yval: 85 },\r\n            { x: 8, xval: 'Margaret', yval: 77 },\r\n            { x: 9, xval: 'Steven', yval: 68 },\r\n            { x: 10, xval: 'Laura', yval: 96 },\r\n            { x: 11, xval: 'Elizabeth', yval: 57 }\r\n        ]} xName='xval' yName='yval'>\r\n                                                <Inject services={[SparklineTooltip]}/>\r\n                                            </SparklineComponent>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ \"text-align\": \"center\", \"font-size\": \"14px\", \"font-weight\": \"600\", \"font-family\": \"Roboto\" }}>\r\n                                            <div>Expenditure details of various trips</div>\r\n                                            <div><i>(Numeric axis)</i></div>\r\n                                        </td>\r\n                                        <td style={padding10}>\r\n                                            <SparklineComponent load={this.load.bind(this)} id='spark3-container' height='100px' width='170px' lineWidth={1} type='Column' valueType='Numeric' fill='#3C78EF' tooltipSettings={{\r\n            visible: true, format: '${x} : $${yval}',\r\n        }} dataSource={[\r\n            { x: 1, xval: 2010, yval: 190 },\r\n            { x: 2, xval: 2011, yval: 165 },\r\n            { x: 3, xval: 2012, yval: 158 },\r\n            { x: 4, xval: 2013, yval: 175 },\r\n            { x: 5, xval: 2014, yval: 200 },\r\n            { x: 6, xval: 2015, yval: 180 },\r\n            { x: 7, xval: 2016, yval: 210 }\r\n        ]} xName='x' yName='yval'>\r\n                                                <Inject services={[SparklineTooltip]}/>\r\n                                            </SparklineComponent>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Axis />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}