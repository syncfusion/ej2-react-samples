{"index.css":"/* css */","data-source.js":"\"use strict\";\n/**\n * Chart datasource\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.employeeData = [{\n        'EmployeeID': 1,\n        'yValue': 2,\n        'FirstName': 'Nancy',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 0, 1),\n    },\n    {\n        'EmployeeID': 2,\n        'yValue': 5,\n        'FirstName': 'Andrew',\n        'Title': 'Vice President, Sales',\n        'HireDate': new Date(1992, 1, 1),\n    },\n    {\n        'EmployeeID': 3,\n        'yValue': 8,\n        'FirstName': 'Janet',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 2, 1),\n    },\n    {\n        'EmployeeID': 4,\n        'yValue': 4,\n        'FirstName': 'Margaret',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 3, 1),\n    },\n    {\n        'EmployeeID': 5,\n        'yValue': 7,\n        'FirstName': 'Steven',\n        'Title': 'Sales Manager',\n        'HireDate': new Date(1992, 4, 1),\n    },\n    {\n        'EmployeeID': 6,\n        'yValue': 9,\n        'FirstName': 'Michael',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 5, 1),\n    },\n    {\n        'EmployeeID': 7,\n        'yValue': 6,\n        'FirstName': 'Robert',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 6, 1),\n    },\n    {\n        'EmployeeID': 8,\n        'yValue': 4,\n        'FirstName': 'Laura',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1992, 7, 1),\n    },\n    {\n        'EmployeeID': 9,\n        'yValue': 8,\n        'FirstName': 'Anne',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 8, 1),\n    }, {\n        'EmployeeID': 10,\n        'yValue': 2,\n        'FirstName': 'Fletcher',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 9, 1),\n    },\n    {\n        'EmployeeID': 11,\n        'yValue': 5,\n        'FirstName': 'Robin',\n        'Title': 'Vice President, Sales',\n        'HireDate': new Date(1992, 10, 1),\n    },\n    {\n        'EmployeeID': 12,\n        'yValue': 8,\n        'FirstName': 'Mathew',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1992, 11, 1),\n    },\n    {\n        'EmployeeID': 13,\n        'yValue': 4,\n        'FirstName': 'Henry',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 0, 1),\n    },\n    {\n        'EmployeeID': 14,\n        'yValue': 7,\n        'FirstName': 'Flemming',\n        'Title': 'Sales Manager',\n        'HireDate': new Date(1993, 1, 1),\n    },\n    {\n        'EmployeeID': 15,\n        'yValue': 9,\n        'FirstName': 'Clarke',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 2, 1),\n    },\n    {\n        'EmployeeID': 16,\n        'yValue': 6,\n        'FirstName': 'Martin',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 3, 1),\n    },\n    {\n        'EmployeeID': 17,\n        'yValue': 4,\n        'FirstName': 'Loius',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 4, 1),\n    },\n    {\n        'EmployeeID': 18,\n        'yValue': 8,\n        'FirstName': 'Arthur',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 5, 1),\n    },\n    {\n        'EmployeeID': 19,\n        'yValue': 5,\n        'FirstName': 'Marcus',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 6, 1),\n    },\n    {\n        'EmployeeID': 20,\n        'yValue': 7,\n        'FirstName': 'Albert',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 7, 1),\n    },\n    {\n        'EmployeeID': 21,\n        'yValue': 9,\n        'FirstName': 'Nicolas',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 8, 1),\n    },\n    {\n        'EmployeeID': 22,\n        'yValue': 7,\n        'FirstName': 'Behardien',\n        'Title': 'Sales Representative',\n        'HireDate': new Date(1993, 9, 1),\n    },\n    {\n        'EmployeeID': 23,\n        'yValue': 3,\n        'FirstName': 'Bruce',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 10, 1),\n    },\n    {\n        'EmployeeID': 24,\n        'yValue': 7,\n        'FirstName': 'Kimi',\n        'Title': 'Inside Sales Coordinator',\n        'HireDate': new Date(1993, 11, 1),\n    }];\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Range Navigator Customization\r\n */\r\nimport * as React from \"react\";\r\nimport { DateTime, Inject, RangeNavigatorComponent } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { GridComponent, ColumnsDirective, ColumnDirective } from '@syncfusion/ej2-react-grids';\r\nimport { employeeData } from './data-source';\r\nimport { SampleBase } from './sample-base';\r\nexport let transX = 'translateX(10%)';\r\nconst divStyle = {\r\n    transform: transX\r\n};\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px;\r\n    }\r\n    #days {\r\n        font-size: 15px;\r\n        font-style: normal;\r\n        font-family: \"Segoe UI\";\r\n        font-weight: 500;\r\n        text-anchor: middle;\r\n        transform: none;\r\n        opacity: 1;\r\n    }\r\n    `;\r\nexport class Customization extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.gridData = employeeData.filter((data) => {\r\n            return (data.HireDate >= new Date(1992, 5, 1) && data.HireDate <= new Date(1993, 4, 1));\r\n        });\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <div className=\"row\" style={{ textAlign: \"center\" }}>\r\n                        <div id=\"days\">Filter From Hire Date</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RangeNavigatorComponent id='rangenavigator' ref={rangenavigator => this.rangenavigator1 = rangenavigator} style={{ textAlign: \"center\" }} height='75' valueType='DateTime' intervalType='Quarter' load={this.load.bind(this)} changed={this.changed.bind(this)} width={Browser.isDevice ? '100%' : '80%'} enableGrouping={true} allowSnapping={true} groupBy='Years' enableDeferredUpdate={true} value={[new Date('1992-06-01'), new Date('1993-05-01')]} dataSource={employeeData} xName='HireDate' yName='yValue'>\r\n                            <Inject services={[DateTime]}/>\r\n                        </RangeNavigatorComponent>\r\n                    </div>\r\n                    <div className=\"row\" style={divStyle}>\r\n                        <GridComponent id=\"grid\" ref={grid => this.grid1 = grid} dataSource={this.gridData} created={this.gridCreated.bind(this)} width={Browser.isDevice ? '100%' : '80%'}>                            \r\n                            <Inject services={[DateTime]}/>\r\n                            <ColumnsDirective>\r\n                                <ColumnDirective field='EmployeeID' headerText='Employee ID' textAlign='Center'></ColumnDirective>\r\n                                <ColumnDirective field='FirstName' headerText='Name' textAlign='Center'></ColumnDirective>\r\n                                <ColumnDirective field='Title' headerText='Title' textAlign='Center'></ColumnDirective>\r\n                                <ColumnDirective field='HireDate' headerText='Hire Date' format={{ skeleton: 'yMd', type: 'date' }} textAlign='Center'></ColumnDirective>\r\n                            </ColumnsDirective>\r\n                        </GridComponent>\r\n                        </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    changed(args) {\r\n        if (this.grid1 && this.gridRender) {\r\n            this.grid1.dataSource = employeeData.filter((data) => {\r\n                return (data.HireDate >= new Date(+args.start) && data.HireDate <= new Date(+args.end));\r\n            });\r\n            this.grid1.refresh();\r\n        }\r\n    }\r\n    ;\r\n    gridCreated(args) {\r\n        this.gridRender = true;\r\n    }\r\n}\r\n\nrender(<Customization />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}