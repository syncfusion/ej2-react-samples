{"index.css":"/* css */","data-service.js":"\"use strict\";\n/**\n * Chart data service\n */\nObject.defineProperty(exports, \"__esModule\", { value: true });\nfunction GetDateTimeData(start, end, min, max) {\n    var series1 = [];\n    var point = {};\n    var value = 100;\n    var date;\n    for (var i = 0; start <= end; i++) {\n        date = start.getTime();\n        if (min || max) {\n            value = getRandomInt(min, max);\n        }\n        else {\n            if (Math.random() > .5) {\n                value += Math.random();\n            }\n            else {\n                value -= Math.random();\n            }\n        }\n        point = { x: new Date(date), y: value };\n        new Date(start.setDate(start.getDate() + 1));\n        series1.push(point);\n    }\n    return series1;\n}\nexports.GetDateTimeData = GetDateTimeData;\nfunction getRandomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\nexports.getRandomInt = getRandomInt;\nfunction GetNumericData(start, end, min, max) {\n    var series1 = [];\n    var point = {};\n    var value = 30;\n    for (var i = start; i <= end; i++) {\n        if (min || max) {\n            value = getRandomInt(min, max);\n        }\n        else {\n            if (Math.random() > .5) {\n                value += Math.random();\n            }\n            else {\n                value -= Math.random();\n            }\n        }\n        point = { x: i, y: Math.round(value) };\n        series1.push(point);\n    }\n    return series1;\n}\nexports.GetNumericData = GetNumericData;\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Light Weight Range Navigator\r\n */\r\nimport * as React from \"react\";\r\nimport { RangeNavigatorComponent, DateTime, Inject } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { GetDateTimeData } from './data-service';\r\nimport { SampleBase } from './sample-base';\r\nexport let data = GetDateTimeData(new Date(2018, 0, 1), new Date(2019, 0, 1));\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n        padding: 0px !important;\r\n    }\r\n    .tableStyle{\r\n        transform:translateX(75%);\r\n        margin-top:20px;\r\n        text-align:center;font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;\r\n    }\r\n    #rangenavigator {\r\n        transform: translate(0, 25%);\r\n    }\r\n    #days {\r\n        font-family: Segoe UI;font-weight: 500; font-style:normal; font-size:15px;\r\n    }\r\n    #working{\r\n        width: 150px;\r\n    }\r\n    #weekend{\r\n        width: 150px;\r\n    }\r\n    #workingcount{\r\n        width: 25px;\r\n    }\r\n    #weekendcount{\r\n        width: 25px;\r\n    }\r\n    #holiday {\r\n        padding-left: 20px;\r\n    }\r\n    `;\r\nexport class LightWeight extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <div className=\"row\">\r\n                        <div id=\"days\" style={{ textAlign: \"center\" }}>Calculate the Business and Weekend days in a period</div>\r\n                        <div id=\"datetime\"></div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RangeNavigatorComponent id='rangenavigator' style={{ textAlign: \"center\" }} valueType='DateTime' intervalType='Months' labelFormat='MMM' height='52' navigatorStyleSettings={{\r\n            thumb: {\r\n                type: 'Rectangle'\r\n            },\r\n        }} load={this.load.bind(this)} width={Browser.isDevice ? '100%' : '80%'} value={[new Date('2018-06-01'), new Date('2018-07-01')]} dataSource={data} xName='x' yName='y' changed={this.changed.bind(this)}>\r\n                            <Inject services={[DateTime]}/>\r\n                        </RangeNavigatorComponent>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <table className=\"tableStyle\">\r\n                            <tbody><tr>\r\n                                <td id=\"working1\">\r\n                                    <table>\r\n                                        <tbody><tr>\r\n                                            <td id=\"working\">Total Business Days:</td>\r\n                                            <td id=\"workingcount\"></td>\r\n                                        </tr>\r\n                                        </tbody></table>\r\n                                </td>\r\n                                <td id=\"holiday\">\r\n                                    <table>\r\n                                        <tbody><tr>\r\n                                            <td id=\"weekend\">Total Weekend Days: </td>\r\n                                            <td id=\"weekendcount\"></td>\r\n                                        </tr>\r\n                                        </tbody></table>\r\n                                </td>\r\n                            </tr>\r\n                            </tbody></table>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    changed(args) {\r\n        let currentDate = new Date(+args.start);\r\n        let workingDaysCount = 0;\r\n        let holidaysDaysCount = 0;\r\n        while (currentDate <= new Date(+args.end)) {\r\n            if (currentDate.getDay() > 0 && currentDate.getDay() <= 5) {\r\n                workingDaysCount++;\r\n            }\r\n            else {\r\n                holidaysDaysCount++;\r\n            }\r\n            currentDate.setDate(currentDate.getDate() + 1);\r\n        }\r\n        document.getElementById('workingcount').innerHTML = ' ' + workingDaysCount;\r\n        document.getElementById('weekendcount').innerHTML = ' ' + holidaysDaysCount;\r\n    }\r\n    ;\r\n}\r\n\nrender(<LightWeight />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}