{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for MultiLevel Labels Range Navigator\r\n */\r\nimport * as React from \"react\";\r\nimport { Inject, DateTime, RangeTooltip, RangeNavigatorComponent } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nexport let data = [];\r\nexport let value = 0;\r\nexport let point = {};\r\nfor (let j = 1; j < 1090; j++) {\r\n    value += (Math.random() * 10 - 5);\r\n    value = value < 0 ? Math.abs(value) : value;\r\n    point = { x: new Date(2000, 0, j), y: value, z: value + 10 };\r\n    data.push(point);\r\n}\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px;\r\n    }\r\n    #days {\r\n        font-size: 15px;\r\n        font-style: normal;\r\n        font-family: \"Segoe UI\";\r\n        font-weight: 500;\r\n        text-anchor: middle;\r\n        transform: none;\r\n        opacity: 1;\r\n    }\r\n    `;\r\nexport class MultilevelLabels extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                <div className=\"row\" style={{ textAlign: \"center\" }}>\r\n                <div id=\"days\">Multi Level Labels</div>\r\n                </div>\r\n                <div className=\"row\">\r\n                 <RangeNavigatorComponent id='rangenavigator' style={{ textAlign: \"center\" }} labelPosition='Outside' valueType='DateTime' tooltip={{ enable: true, displayMode: 'Always' }} intervalType='Quarter' enableGrouping={true} animationDuration={500} groupBy='Years' load={this.load.bind(this)} dataSource={data} xName='x' yName='y' value={[new Date('2001-01-01'), new Date('2002-01-01')]} width={Browser.isDevice ? '100%' : '80%'}>\r\n                    <Inject services={[DateTime, RangeTooltip]}/>\r\n                    </RangeNavigatorComponent>\r\n                    </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n    load(args) {\r\n        let selectedTheme = location.hash.split('/')[1];\r\n        selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n        args.rangeNavigator.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).\r\n            replace(/-dark/i, \"Dark\");\r\n        args.rangeNavigator.dateTimeModule = new DateTime(args.rangeNavigator);\r\n    }\r\n    ;\r\n}\r\n\nrender(<MultilevelLabels />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}