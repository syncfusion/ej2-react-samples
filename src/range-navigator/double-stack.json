{"index.css":"/* css */","double-data.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.sl = [\n    { x: 1, y: 2 },\n    { x: 2, y: 3, isWicket: true },\n    { x: 3, y: 1 },\n    { x: 4, y: 7 },\n    { x: 5, y: 5 },\n    { x: 6, y: 24 },\n    { x: 7, y: 13 },\n    { x: 8, y: 4 },\n    { x: 9, y: 6 },\n    { x: 10, y: 4 },\n    { x: 11, y: 7 },\n    { x: 12, y: 5 },\n    { x: 13, y: 5 },\n    { x: 14, y: 10 },\n    { x: 15, y: 5 },\n    { x: 16, y: 5 },\n    { x: 17, y: 13 },\n    { x: 18, y: 4 },\n    { x: 19, y: 8 },\n    { x: 20, y: 2 },\n    { x: 21, y: 2 },\n    { x: 22, y: 2, isWicket: true },\n    { x: 23, y: 5 },\n    { x: 24, y: 7 },\n    { x: 25, y: 1 },\n    { x: 26, y: 4 },\n    { x: 27, y: 5 },\n    { x: 28, y: 5 },\n    { x: 29, y: 5 },\n    { x: 30, y: 17 },\n    { x: 31, y: 42, isWicket: true },\n    { x: 32, y: 7 },\n    { x: 33, y: 5 },\n    { x: 34, y: 2, isWicket: true },\n    { x: 35, y: 6 },\n    { x: 36, y: 16 },\n    { x: 37, y: 19 },\n    { x: 38, y: 6 },\n    { x: 39, y: 12 },\n    { x: 40, y: 11 },\n    { x: 41, y: 8 },\n    { x: 42, y: 12, isWicket: true },\n    { x: 43, y: 4, isWicket: true },\n    { x: 44, y: 8 },\n    { x: 45, y: 2, isWicket: true },\n    { x: 46, y: 2, isWicket: true }\n];\nexports.aus = [\n    { x: 1, y: 4 },\n    { x: 2, y: 4 },\n    { x: 3, y: 5 },\n    { x: 4, y: 6 },\n    { x: 5, y: 5, isWicket: true },\n    { x: 6, y: 8 },\n    { x: 7, y: 2 },\n    { x: 8, y: 3 },\n    { x: 9, y: 4, isWicket: true },\n    { x: 10, y: 8 },\n    { x: 11, y: 3 },\n    { x: 12, y: 4 },\n    { x: 13, y: 7 },\n    { x: 14, y: 2 },\n    { x: 15, y: 7 },\n    { x: 16, y: 4 },\n    { x: 17, y: 3 },\n    { x: 18, y: 3 },\n    { x: 19, y: 3 },\n    { x: 20, y: 1 },\n    { x: 21, y: 7 },\n    { x: 22, y: 2 },\n    { x: 23, y: 5 },\n    { x: 24, y: 7 },\n    { x: 25, y: 7 },\n    { x: 26, y: 7 },\n    { x: 27, y: 5 },\n    { x: 28, y: 9 },\n    { x: 29, y: 14 },\n    { x: 30, y: 10 },\n    { x: 31, y: 10 },\n    { x: 32, y: 7, isWicket: true },\n    { x: 33, y: 2, isWicket: true },\n    { x: 34, y: 7 },\n    { x: 35, y: 14 },\n    { x: 36, y: 3 },\n    { x: 37, y: 17 },\n    { x: 38, y: 16 },\n    { x: 39, y: 10 },\n    { x: 40, y: 8 },\n    { x: 41, y: 17 },\n    { x: 42, y: 10 },\n    { x: 43, y: 20 },\n    { x: 44, y: 15 },\n    { x: 45, y: 6 },\n    { x: 46, y: 16 },\n    { x: 47, y: 8, isWicket: true },\n    { x: 48, y: 4, isWicket: true },\n    { x: 49, y: 19, isWicket: true },\n    { x: 50, y: 8, isWicket: true }\n];\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Numeric Axis Range Navigator\r\n */\r\nimport * as React from \"react\";\r\nimport { Inject, ChartComponent, RangeTooltip, SplineSeries, Crosshair, SeriesCollectionDirective, SeriesDirective, Tooltip, RangeNavigatorComponent, RangenavigatorSeriesCollectionDirective, RangenavigatorSeriesDirective, getSeriesColor, ChartAnnotation } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nimport { sl, aus } from './double-data';\r\nexport let zoomFactor;\r\nexport let zoomPosition;\r\nexport let chartAnnotation = [];\r\nchartAnnotation.push({ content: '<div id=\"exchangeRate\"></div>', coordinateUnits: 'Pixel', region: 'Chart', x: '85%', y: '15%' });\r\nexport let selectedTheme = location.hash.split('/')[1];\r\nselectedTheme = selectedTheme ? selectedTheme : 'Material';\r\nexport let theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/-dark/i, \"Dark\");\r\nexport let backgroundColor = 'white';\r\ngetAnnotation(aus, getSeriesColor(theme)[0]);\r\ngetAnnotation(sl, getSeriesColor(theme)[1]);\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px;\r\n    }\r\n    #title{\r\n        font-size: 15px;\r\n        font-style: normal;\r\n        font-family: \"Segoe UI\";\r\n        font-weight: 500;\r\n        text-anchor: middle;\r\n        transform: none;\r\n        opacity: 1;\r\n    }\r\n    `;\r\nexport class NumericAxis extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <div className=\"row\" style={{ textAlign: \"center\" }}>\r\n                        <div id=\"title\">Score Comparision AUS vs SL</div>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <RangeNavigatorComponent id='double' ref={rangenavigator => this.rangenavigator1 = rangenavigator} style={{ textAlign: \"center\" }} labelPosition='Outside' tooltip={{ enable: true }} load={this.rangeLoad.bind(this)} changed={this.changed.bind(this)} width={Browser.isDevice ? '100%' : '80%'} tooltipRender={this.renderTooltip.bind(this)} value={[31, 50]}>\r\n                            <Inject services={[RangeTooltip]}/>\r\n                            <RangenavigatorSeriesCollectionDirective>\r\n                                <RangenavigatorSeriesDirective dataSource={aus} xName='x' yName='y'>\r\n                                </RangenavigatorSeriesDirective>\r\n                                <RangenavigatorSeriesDirective dataSource={sl} xName='x' yName='y'>\r\n                                </RangenavigatorSeriesDirective>\r\n                            </RangenavigatorSeriesCollectionDirective>\r\n                        </RangeNavigatorComponent>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <ChartComponent id='charts' ref={chart => this.chart1 = chart} style={{ textAlign: \"center\" }} primaryXAxis={{\r\n            title: 'Overs',\r\n            edgeLabelPlacement: 'Shift',\r\n            majorGridLines: { width: 0 },\r\n            labelFormat: 'n1'\r\n        }} primaryYAxis={{\r\n            title: 'Runs',\r\n            minimum: 0,\r\n            majorTickLines: { width: 0 },\r\n            lineStyle: { width: 0 }\r\n        }} width={Browser.isDevice ? '100%' : '80%'} height='350' theme={theme} annotations={chartAnnotation} load={this.chartLoad.bind(this)} loaded={this.chartLoaded.bind(this)} axisLabelRender={this.labelRender.bind(this)} chartArea={{ border: { width: 0 } }}>\r\n                            <Inject services={[SplineSeries, Crosshair, Tooltip, ChartAnnotation]}/>\r\n                            <SeriesCollectionDirective>\r\n                                <SeriesDirective dataSource={aus} xName='x' yName='y' name='AUS' type='Spline' width={2} animation={{ enable: false }}>\r\n                                </SeriesDirective>\r\n                                <SeriesDirective dataSource={sl} xName='x' yName='y' name='SL' type='Spline' width={2} animation={{ enable: false }}>\r\n                                </SeriesDirective>\r\n                            </SeriesCollectionDirective>\r\n                        </ChartComponent>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    changed(args) {\r\n        if (this.chart1) {\r\n            this.chart1.primaryXAxis.zoomFactor = args.zoomFactor;\r\n            this.chart1.primaryXAxis.zoomPosition = args.zoomPosition;\r\n            this.chart1.dataBind();\r\n        }\r\n        else {\r\n            zoomFactor = args.zoomFactor;\r\n            zoomPosition = args.zoomPosition;\r\n        }\r\n    }\r\n    ;\r\n    chartLoad(args) {\r\n        args.chart.primaryXAxis.zoomFactor = zoomFactor;\r\n        args.chart.primaryXAxis.zoomPosition = zoomPosition;\r\n    }\r\n    ;\r\n    labelRender(args) {\r\n        if (args.axis.orientation === 'Horizontal') {\r\n            let value = Math.abs(Number(args.text));\r\n            args.text = String(value);\r\n        }\r\n    }\r\n    chartLoaded(args) {\r\n        let series1 = args.chart.visibleSeries[0].interior;\r\n        let series2 = args.chart.visibleSeries[1].interior;\r\n        let html = '<table>';\r\n        html += '<tr><td><div style=\"width:10px; height: 10px; border: 2px solid ' + series1 + '; background: ' + series1 + ';\"></div></td><td style=\"padding-left:10px;\">' + ' Australia' + '</td>';\r\n        html += '<tr><td><div style=\"width:10px; height: 10px; border: 2px solid ' + series2 + '; background: ' + series2 + ';\"></div></td><td style=\"padding-left:10px;\">' + ' Sri Lanka' + '</td>';\r\n        html += '</table>';\r\n        if (this.chart1) {\r\n            this.chart1.setAnnotationValue(0, '<div id=\"exchangeRate\" style=\"line-height: 18px; font-size: 13px;background: #fff; opacity:0.9; color: #464e56; ' +\r\n                ' box-shadow:0 0 8px 0 rgba(70,78,86,.25); padding: 7px 10px; border-radius: 3px\">' +\r\n                html +\r\n                '</div>');\r\n        }\r\n    }\r\n    ;\r\n    renderTooltip(args) {\r\n        let text = parseFloat(args.text[0]);\r\n        text = Math.round(text);\r\n        let text1 = text.toString();\r\n        args.text[0] = text1;\r\n    }\r\n}\r\nfunction getAnnotation(args, color) {\r\n    for (let i = 0; i < args.length; i++) {\r\n        if (args[i].isWicket) {\r\n            chartAnnotation.push({\r\n                content: '<div id= \"wicket\" style=\"width: 20px; height:20px; border-radius: 5px;' +\r\n                    'background: ' + backgroundColor + '; border: 2px solid ' + color + '; color:' + color + '\">W</div>',\r\n                x: args[i].x,\r\n                y: args[i].y,\r\n                coordinateUnits: 'Point'\r\n            });\r\n        }\r\n    }\r\n}\r\n\nrender(<NumericAxis />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}