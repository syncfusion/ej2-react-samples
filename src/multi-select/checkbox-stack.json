{"index.css":"#multichecbox .property-panel-content {\r\n    overflow: initial;\r\n}\r\n#multichecbox .col-lg-9 {\r\n    min-height: 250px;\r\n}\r\n#multichecbox #multigroup {\r\n    margin: 0 auto;\r\n    width: 300px !important;\r\n    padding-top: 15px;\r\n}\r\n\r\n#multiselection .property-panel-content {\r\n    width: 300px;\r\n}\r\n#multichecbox .property-section{\r\n    left:0px;\r\n}\r\n","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { MultiSelectComponent, CheckBoxSelection, Inject } from '@syncfusion/ej2-react-dropdowns';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\n\r\nexport class CheckBox extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        //define the data with category\r\n        this.countries = [\r\n            { Name: 'Australia', Code: 'AU' },\r\n            { Name: 'Bermuda', Code: 'BM' },\r\n            { Name: 'Canada', Code: 'CA' },\r\n            { Name: 'Cameroon', Code: 'CM' },\r\n            { Name: 'Denmark', Code: 'DK' },\r\n            { Name: 'France', Code: 'FR' },\r\n            { Name: 'Finland', Code: 'FI' },\r\n            { Name: 'Germany', Code: 'DE' },\r\n            { Name: 'Greenland', Code: 'GL' },\r\n            { Name: 'Hong Kong', Code: 'HK' },\r\n            { Name: 'India', Code: 'IN' },\r\n            { Name: 'Italy', Code: 'IT' },\r\n            { Name: 'Japan', Code: 'JP' },\r\n            { Name: 'Mexico', Code: 'MX' },\r\n            { Name: 'Norway', Code: 'NO' },\r\n            { Name: 'Poland', Code: 'PL' },\r\n            { Name: 'Switzerland', Code: 'CH' },\r\n            { Name: 'United Kingdom', Code: 'GB' },\r\n            { Name: 'United States', Code: 'US' }\r\n        ];\r\n        // maps the appropriate column to fields property\r\n        this.checkFields = { text: 'Name', value: 'Code' };\r\n    }\r\n    // function to handle the CheckBox change event\r\n    onChange(args) {\r\n        // enable or disable the SelectAll in multiselect on CheckBox checked state\r\n        this.mulObj.showSelectAll = args.checked;\r\n    }\r\n    // function to handle the CheckBox change event\r\n    onChangeDrop(args) {\r\n        // enable or disable the Dropdown button in multiselect on CheckBox checked state\r\n        this.mulObj.showDropDownIcon = args.checked;\r\n    }\r\n    // function to handle the CheckBox change event\r\n    onChangeLimit(args) {\r\n        // enable or disable the selection limit in multiselect on CheckBox checked state\r\n        this.mulObj.enableSelectionOrder = args.checked;\r\n    }\r\n    render() {\r\n        return (<div id=\"multichecbox\" className='control-pane'>\r\n        <div className='control-section col-lg-8'>\r\n          <div id=\"multigroup\" className=\"control-styles\">\r\n            <h4>CheckBox</h4>\r\n            <MultiSelectComponent id=\"checkbox\" ref={(scope) => { this.mulObj = scope; }} dataSource={this.countries} fields={this.checkFields} placeholder=\"Select countries\" mode=\"CheckBox\" showSelectAll={true} showDropDownIcon={true} filterBarPlaceholder=\"Search countries\" popupHeight=\"350px\">\r\n              <Inject services={[CheckBoxSelection]}/>\r\n            </MultiSelectComponent>\r\n          </div>\r\n        </div>\r\n        <div className='col-lg-4 property-section'>\r\n          <PropertyPane title='Properties'>\r\n            <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\r\n              <tr>\r\n                <td>\r\n                  <div>\r\n                    <CheckBoxComponent checked={true} label='Show Select All' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChange.bind(this)}></CheckBoxComponent>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <div>\r\n                    <CheckBoxComponent checked={true} label='DropDown Button' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChangeDrop.bind(this)}></CheckBoxComponent>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n              <tr>\r\n                <td>\r\n                  <div>\r\n                    <CheckBoxComponent checked={true} label='Selection Reorder' ref={(scope) => { this.checkboxObj = scope; }} change={this.onChangeLimit.bind(this)}></CheckBoxComponent>\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            </table>\r\n          </PropertyPane>\r\n        </div>\r\n\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<CheckBox />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}