"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.MultiSelectSampleOrder = [
    { 'path': 'multi-select/default', 'component': 'Default', 'name': 'Default Functionalities', 'description': 'This example demonstrates the default functionalities of the React multiselect component with minimum configuration.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["mode", "placeholder"]}', 'sourceFiles': [{ 'displayName': 'default.tsx', 'path': 'src/multi-select/default.tsx' }, { 'displayName': 'default.jsx', 'path': 'src/multi-select/default.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/data-binding', 'component': 'Data', 'name': 'Data Binding', 'description': 'This example demonstrates how to bind with local data source and fetch data from remote data service in the React multiselect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["query", "dataSource", "fields", "sortOrder", "placeholder"]}', 'sourceFiles': [{ 'displayName': 'data-binding.tsx', 'path': 'src/multi-select/data-binding.tsx' }, { 'displayName': 'data-binding.jsx', 'path': 'src/multi-select/data-binding.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/grouping', 'component': 'Grouping', 'name': 'Grouping', 'description': 'This example demonstrates how to group based on the different categories with individual header and icon support using the React multiselect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["dataSource", "fields", "placeholder"]}', 'sourceFiles': [{ 'displayName': 'grouping.tsx', 'path': 'src/multi-select/grouping.tsx' }, { 'displayName': 'grouping.jsx', 'path': 'src/multi-select/grouping.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/template', 'component': 'Templates', 'name': 'Templates', 'description': 'This example demonstrates how to customize the appearance of each item in the React multiselect component pop-up list using the template.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["dataSource", "fields", "headerTemplate", "itemTemplate", "valueTemplate", "mode", "placeholder"]}', 'sourceFiles': [{ 'displayName': 'template.tsx', 'path': 'src/multi-select/template.tsx' }, { 'displayName': 'template.jsx', 'path': 'src/multi-select/template.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/filtering', 'component': 'Filtering', 'name': 'Filtering', 'description': 'This example demonstrates how the filtering functionalities works based on the typed characters in the React multiselect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["query", "dataSource", "fields", "placeholder", "allowFiltering", "filtering"]}', 'sourceFiles': [{ 'displayName': 'filtering.tsx', 'path': 'src/multi-select/filtering.tsx' }, { 'displayName': 'filtering.jsx', 'path': 'src/multi-select/filtering.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/custom-value', 'component': 'CustomTag', 'name': 'Custom Values', 'description': 'This example demonstrates the addition of a new value that is not present in the predefined list of the React multiselect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["dataSource", "fields", "placeholder", "mode", "allowCustomValue"]}', 'sourceFiles': [{ 'displayName': 'custom-value.tsx', 'path': 'src/multi-select/custom-value.tsx' }, { 'displayName': 'custom-value.jsx', 'path': 'src/multi-select/custom-value.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/chip-customization', 'component': 'ChipCustomization', 'name': 'Chip Customization', 'description': 'This example demonstrates how to customize the appearance of the selected chip element in the React multiselect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["dataSource", "fields", "placeholder", "mode", "tagging"]}', 'sourceFiles': [{ 'displayName': 'chip-customization.tsx', 'path': 'src/multi-select/chip-customization.tsx' }, { 'displayName': 'chip-customization.jsx', 'path': 'src/multi-select/chip-customization.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/checkbox', 'component': 'CheckBox', 'name': 'CheckBox', 'description': 'This example demonstrates how to select the multiple values through checkbox in the React multiselect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["dataSource", "fields", "placeholder"]}', 'sourceFiles': [{ 'displayName': 'checkbox.tsx', 'path': 'src/multi-select/checkbox.tsx' }, { 'displayName': 'checkbox.jsx', 'path': 'src/multi-select/checkbox.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/grouping-with-checkbox', 'component': 'CheckBoxGrouping', 'name': 'Grouping with CheckBox', 'description': 'This example demonstrates how to select all the grouped list item values through checkbox in the React MultiSelect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["dataSource", "fields", "placeholder", "enableGroupCheckBox"]}', 'sourceFiles': [{ 'displayName': 'grouping-with-checkbox.tsx', 'path': 'src/multi-select/grouping-with-checkbox.tsx' }, { 'displayName': 'grouping-with-checkbox.jsx', 'path': 'src/multi-select/grouping-with-checkbox.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/selection-limit', 'component': 'SelectionLimit', 'name': 'Selection Limit', 'description': 'This example demonstrates the maximum selection limit functionalities with checkbox of the React multiselect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["dataSource", "fields", "placeholder", "maximumSelectionLength"]}', 'sourceFiles': [{ 'displayName': 'selection-limit.tsx', 'path': 'src/multi-select/selection-limit.tsx' }, { 'displayName': 'selection-limit.jsx', 'path': 'src/multi-select/selection-limit.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] },
    { 'path': 'multi-select/diacritics-filtering', 'component': 'DiacriticsFiltering', 'name': 'Diacritics Filtering', 'description': 'This example demonstrates how to achieve the diacritics filter functionalities in the React multiselect component.', 'order': '01', 'category': 'MultiSelect Dropdown', 'api': '{"MultiSelect": ["dataSource", "ignoreAccent", "placeholder"]}', 'sourceFiles': [{ 'displayName': 'diacritics-filtering.tsx', 'path': 'src/multi-select/diacritics-filtering.tsx' }, { 'displayName': 'diacritics-filtering.jsx', 'path': 'src/multi-select/diacritics-filtering.jsx' }, { 'displayName': 'dataSource.json', 'path': 'src/multi-select/dataSource.json' }] }
];
