{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Waterfall series\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, DateTime, Logarithmic, Tooltip, WaterfallSeries, DataLabel, Category, Crosshair, Zoom } from '@syncfusion/ej2-react-charts';\r\nimport { SampleBase } from './sample-base';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nexport let data = [\r\n    { x: 'Income', y: 4711 }, { x: 'Sales', y: -1015 },\r\n    { x: 'Development', y: -688 },\r\n    { x: 'Revenue', y: 1030 }, { x: 'Balance' },\r\n    { x: 'Expense', y: -361 }, { x: 'Tax', y: -695 },\r\n    { x: 'Net Profit' }\r\n];\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }\r\n    #control-charts {\r\n        padding: 0px !important;\r\n    }\r\n\r\n    #charts_Series_0_Connector_ {\r\n        stroke-dasharray: 10px 10px;\r\n        stroke-linejoin: round; stroke-linecap: round;\r\n        -webkit-animation: dash 1s linear infinite;\r\n        animation: dash 1s linear infinite;\r\n    }\r\n    @-webkit-keyframes dash {\r\n        100% {\r\n            stroke-dashoffset: -20px;\r\n        }\r\n    }\r\n    @keyframes dash {\r\n        100% {\r\n            stroke-dashoffset: -20px;\r\n        }\r\n    }`;\r\nexport class Waterfall extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='charts' load={this.load.bind(this)} style={{ textAlign: \"center\" }} primaryXAxis={{\r\n            valueType: 'Category',\r\n            majorGridLines: { width: 0 },\r\n            plotOffset: 20\r\n        }} primaryYAxis={{\r\n            minimum: 0, maximum: 5000, interval: 1000,\r\n            majorGridLines: { width: 0 },\r\n            title: 'Expenditure'\r\n        }} tooltip={{ enable: true, shared: false }} textRender={this.textRender.bind(this)} axisLabelRender={this.axisLabelRender.bind(this)} width={Browser.isDevice ? '100%' : '80%'} chartArea={{ border: { width: 0 } }} legendSettings={{ visible: false }} title='Company Revenue and Profit' loaded={this.onChartLoad.bind(this)}>\r\n                        <Inject services={[WaterfallSeries, Category, Tooltip, DateTime, Zoom, Logarithmic, Crosshair, Legend, DataLabel]}/>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={data} xName='x' yName='y' type='Waterfall' intermediateSumIndexes={[4]} sumIndexes={[7]} marker={{ dataLabel: { visible: true, font: { color: '#ffffff' } } }} connector={{ color: '#5F6A6A', width: 2 }} columnWidth={0.9} negativeFillColor='#e56590'>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        let chart = document.getElementById('charts');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n    textRender(args) {\r\n        let value = Number(args.text) / 1000;\r\n        value = Math.round((value * 100)) / 100;\r\n        args.text = value.toString();\r\n    }\r\n    ;\r\n    axisLabelRender(args) {\r\n        if (args.axis.name === 'primaryYAxis') {\r\n            args.text = '$' + Number(args.text) / 1000 + 'B';\r\n        }\r\n    }\r\n    ;\r\n}\r\n\nrender(<Waterfall />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}