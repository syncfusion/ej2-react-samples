{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Spline series\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, AnnotationsDirective, AnnotationDirective, ChartAnnotation, Legend, Category, SplineSeries, Tooltip } from '@syncfusion/ej2-react-charts';\r\nimport { SampleBase } from './sample-base';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nexport let data1 = [\r\n    { x: 'Sun', y: 15 }, { x: 'Mon', y: 22 },\r\n    { x: 'Tue', y: 32 },\r\n    { x: 'Wed', y: 31 },\r\n    { x: 'Thu', y: 29 }, { x: 'Fri', y: 24 },\r\n    { x: 'Sat', y: 18 },\r\n];\r\nexport let data2 = [\r\n    { x: 'Sun', y: 10 }, { x: 'Mon', y: 18 },\r\n    { x: 'Tue', y: 28 },\r\n    { x: 'Wed', y: 28 },\r\n    { x: 'Thu', y: 26 }, { x: 'Fri', y: 20 },\r\n    { x: 'Sat', y: 15 }\r\n];\r\nexport let data3 = [\r\n    { x: 'Sun', y: 2 }, { x: 'Mon', y: 12 },\r\n    { x: 'Tue', y: 22 },\r\n    { x: 'Wed', y: 23 },\r\n    { x: 'Thu', y: 19 }, { x: 'Fri', y: 13 },\r\n    { x: 'Sat', y: 8 },\r\n];\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }\r\n    #charts_Series_0_Point_2_Symbol {\r\n        -webkit-animation: opac 1s ease-out infinite;\r\n        animation: opac 1s ease-out infinite;\r\n    }\r\n\r\n    #charts_Series_2_Point_0_Symbol {\r\n        -webkit-animation: opac 1s ease-out infinite;\r\n        animation: opac 1s ease-in-out infinite;\r\n    }\r\n\r\n    @keyframes opac {\r\n        0% {\r\n            stroke-opacity: 1;\r\n            stroke-width: 0px;\r\n        }\r\n        100% {\r\n            stroke-opacity: 0;\r\n            stroke-width: 10px;\r\n        }\r\n    }`;\r\nexport class Spline extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} ref={charts => this.chartInstance = charts} primaryXAxis={{\r\n            valueType: 'Category',\r\n            interval: 1, majorGridLines: { width: 0 },\r\n            labelIntersectAction: 'Rotate90'\r\n        }} width={Browser.isDevice ? '100%' : '60%'} chartArea={{ border: { width: 0 } }} load={this.load.bind(this)} primaryYAxis={{\r\n            labelFormat: '{value}Â°C',\r\n            lineStyle: { width: 0 },\r\n            majorTickLines: { width: 0 },\r\n            minorTickLines: { width: 0 }\r\n        }} tooltip={{ enable: true }} title='NC Weather Report - 2016' loaded={this.onChartLoad.bind(this)} animationComplete={this.animationComplete.bind(this)}>\r\n                        <Inject services={[SplineSeries, Legend, Category, Tooltip, ChartAnnotation]}/>\r\n                        <AnnotationsDirective>\r\n                            <AnnotationDirective content='<div id=\"chart_cloud\"><img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/cloud.png\" style={{width: \"41px\"; height: \"41px\"}} /></div>' x='Sun' y={2} coordinateUnits='Point' verticalAlignment='Top'>\r\n                            </AnnotationDirective>\r\n                            <AnnotationDirective content='<div id=\"chart_cloud\"><img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/sunny.png\"   style={{width: \"41px\"; height: \"41px\"}}/></div>' x='Tue' y={33} coordinateUnits='Point' verticalAlignment='Top'>\r\n                            </AnnotationDirective>\r\n                        </AnnotationsDirective>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={data1} xName='x' yName='y' width={2} name='Max Temp' type='Spline' marker={{ visible: true, width: 10, height: 10 }}>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={data2} xName='x' yName='y' width={2} name='Avg Temp' type='Spline' marker={{ visible: true, width: 10, height: 10 }}>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={data3} xName='x' yName='y' width={2} name='Min Temp' type='Spline' marker={{ visible: true, width: 10, height: 10 }}>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                    <div style={{ float: 'right', marginRight: '10px' }}>Source: &nbsp;\r\n                         <a href=\"https://www.worldweatheronline.com/mooresville-weather/north-carolina/us.aspx\" target=\"_blank\">www.worldweatheronline.com</a>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        let chart = document.getElementById('charts');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n    animationComplete(args) {\r\n        this.chartInstance.removeSvg();\r\n        this.chartInstance.animateSeries = false;\r\n        this.chartInstance['renderElements']();\r\n    }\r\n    ;\r\n}\r\n\nrender(<Spline />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}