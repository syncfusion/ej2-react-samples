{"index.css":"/* css */","theme-color.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Initialize the Theme colors\n */\nexports.materialColors = ['#00bdae', '#404041', '#357cd2', '#e56590', '#f8b883', '#70ad47', '#dd8abd', '#7f84e8', '#7bb4eb',\n    '#ea7a57', '#404041', '#00bdae'];\nexports.fabricColors = ['#4472c4', '#ed7d31', '#ffc000', '#70ad47', '#5b9bd5',\n    '#c1c1c1', '#6f6fe2', '#e269ae', '#9e480e', '#997300', '#4472c4', '#70ad47', '#ffc000', '#ed7d31'];\nexports.bootstrapColors = ['#a16ee5', '#f7ce69', '#55a5c2', '#7ddf1e', '#ff6ea6',\n    '#7953ac', '#b99b4f', '#407c92', '#5ea716', '#b91c52'];\nexports.highContrastColors = ['#79ECE4', '#E98272', '#DFE6B6', '#C6E773', '#BA98FF',\n    '#FA83C3', '#00C27A', '#43ACEF', '#D681EF', '#D8BC6E'];\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Bubble Series\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, BubbleSeries, Tooltip } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { fabricColors, bootstrapColors, materialColors, highContrastColors } from './theme-color';\r\nimport { SampleBase } from './sample-base';\r\nexport let pointRender = (args) => {\r\n    let selectedTheme = location.hash.split('/')[1];\r\n    selectedTheme = selectedTheme ? selectedTheme : 'material';\r\n    if (selectedTheme && selectedTheme.indexOf('fabric') > -1) {\r\n        args.fill = fabricColors[args.point.index % 10];\r\n    }\r\n    else if (selectedTheme === 'material') {\r\n        args.fill = materialColors[args.point.index % 10];\r\n    }\r\n    else if (selectedTheme === 'highcontrast') {\r\n        args.fill = highContrastColors[args.point.index % 10];\r\n    }\r\n    else {\r\n        args.fill = bootstrapColors[args.point.index % 10];\r\n    }\r\n};\r\nexport let data = [\r\n    { x: 92.2, y: 7.8, size: 1.347, text: 'China' },\r\n    { x: 74, y: 6.5, size: 1.241, text: 'India' },\r\n    { x: 90.4, y: 6.0, size: 0.238, text: 'Indonesia' },\r\n    { x: 99.4, y: 2.2, size: 0.312, text: 'US' },\r\n    { x: 88.6, y: 1.3, size: 0.197, text: 'Brazil' },\r\n    { x: 99, y: 0.7, size: 0.0818, text: 'Germany' },\r\n    { x: 72, y: 2.0, size: 0.0826, text: 'Egypt' },\r\n    { x: 99.6, y: 3.4, size: 0.143, text: 'Russia' },\r\n    { x: 99, y: 0.2, size: 0.128, text: 'Japan' },\r\n    { x: 86.1, y: 4.0, size: 0.115, text: 'Mexico' },\r\n    { x: 92.6, y: 6.6, size: 0.096, text: 'Philippines' },\r\n    { x: 61.3, y: 1.45, size: 0.162, text: 'Nigeria' },\r\n    { x: 82.2, y: 3.97, size: 0.7, text: 'Hong Kong' },\r\n    { x: 79.2, y: 3.9, size: 0.162, text: 'Netherland' },\r\n    { x: 72.5, y: 4.5, size: 0.7, text: 'Jordan' },\r\n    { x: 81, y: 3.5, size: 0.21, text: 'Australia' },\r\n    { x: 66.8, y: 3.9, size: 0.028, text: 'Mongolia' },\r\n    { x: 78.4, y: 2.9, size: 0.231, text: 'Taiwan' }\r\n];\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\n/**\r\n * Bubble sample\r\n */\r\nexport class Bubble extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{\r\n            title: 'Literacy Rate',\r\n            minimum: 60,\r\n            maximum: 100,\r\n            interval: 5\r\n        }} load={this.load.bind(this)} primaryYAxis={{\r\n            title: 'GDP Growth Rate',\r\n            minimum: 0,\r\n            maximum: 10,\r\n            interval: 2.5\r\n        }} width={Browser.isDevice ? '100%' : '60%'} title='World Countries Details' pointRender={pointRender} legendSettings={{ visible: false }} loaded={this.onChartLoad.bind(this)} tooltip={{\r\n            enable: true,\r\n            format: '${point.text}<br/>Literacy Rate : <b>${point.x}%</b>' +\r\n                '<br/>GDP Annual Growth Rate : <b>${point.y}</b><br/>Population : <b>${point.size} Billion</b>'\r\n        }}>\r\n                        <Inject services={[BubbleSeries, Tooltip]}/>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={data} type='Bubble' minRadius={3} maxRadius={Browser.isDevice ? 6 : 8} xName='x' yName='y' size='size' name='Pound' marker={{ dataLabel: { name: 'text' } }}>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        let chart = document.getElementById('charts');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<Bubble />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}