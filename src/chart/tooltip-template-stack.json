{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Line Series\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, LineSeries, Tooltip, Category } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nexport let data1 = [{ x: 2002, y: 1.61 }, { x: 2003, y: 2.34 }, { x: 2004, y: 2.16 }, { x: 2005, y: 2.10 },\r\n    { x: 2006, y: 1.81 }, { x: 2007, y: 2.05 }, { x: 2008, y: 2.50 }, { x: 2009, y: 2.22 },\r\n    { x: 2010, y: 2.21 }, { x: 2011, y: 2.00 }, { x: 2012, y: 2.27 }];\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n        padding: 0px !important;\r\n    }\r\n        .charts {\r\n            align :center\r\n        }`;\r\nexport class ChartTooltipTemplate extends SampleBase {\r\n    tooltipTemplate(props) {\r\n        return (<div id=\"wrap\">\r\n                <table style={{ width: '100%', border: '1px solid black' }} className=\"table-borderless\">\r\n                    <tr>\r\n                        <th rowSpan={2} style={{ backgroundColor: '#C1272D' }}>\r\n                            <img src='////npmci.syncfusion.com/development/react/demos/src/chart/images/grain.png'/>\r\n                        </th>\r\n                        <td style={{ height: '25px', width: '50px', backgroundColor: '#C1272D', fontSize: '14px', color: '#E7C554', fontWeight: 'bold', paddingLeft: '5px' }}>{props.y}</td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td style={{ height: '25px', width: '50px', backgroundColor: '#C1272D', fontSize: '18px', color: '#E7C554', fontWeight: 'bold', paddingLeft: '5px' }}>{props.x}</td>\r\n                    </tr>\r\n                </table>\r\n            </div>);\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='chartTooltip' style={{ textAlign: \"center\" }} backgroundImage='////npmci.syncfusion.com/development/react/demos/src/chart/images/wheat.png' primaryXAxis={{\r\n            labelStyle: { color: 'white' },\r\n            valueType: 'Category',\r\n            edgeLabelPlacement: 'Shift',\r\n            majorGridLines: { width: 0 },\r\n            majorTickLines: { width: 0 },\r\n            lineStyle: { color: '#EFEFEF' },\r\n        }} primaryYAxis={{\r\n            rangePadding: 'None',\r\n            labelStyle: { color: 'white' },\r\n            majorGridLines: { color: '#EFEFEF' },\r\n            majorTickLines: { width: 0 },\r\n            title: 'Billion Bushels',\r\n            titleStyle: { color: 'white' },\r\n            lineStyle: { width: 0 },\r\n        }} chartArea={{ border: { width: 0 } }} tooltip={{ enable: true,\r\n            template: this.tooltipTemplate.bind(this) }} width={Browser.isDevice ? '100%' : '80%'} title='USA Wheat Production' loaded={this.onChartLoad.bind(this)}>\r\n                        <Inject services={[LineSeries, Tooltip, Category]}/>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={data1} xName='x' yName='y' fill='#333333' width={2} marker={{\r\n            visible: true,\r\n            width: 10,\r\n            height: 10,\r\n            fill: '#C1272D',\r\n            border: { color: '#333333', width: 2 }\r\n        }} type='Line'>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        let chart = document.getElementById('chartTooltip');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<ChartTooltipTemplate />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}