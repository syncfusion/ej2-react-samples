{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective, indexFinder, Inject, AccumulationDataLabel, AccumulationTooltip, PieSeries, AccumulationAnnotation, } from '@syncfusion/ej2-react-charts';\r\nconst SAMPLE_CSS = `\r\n#category:hover {\r\n    cursor: pointer;\r\n}`;\r\nlet content = '<div id= \"white\" style=\"cursor:pointer;padding:3px;width:30px; height:30px;\"><img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/white.png\" id=\"back\" /><div>';\r\nexport class Drilldown extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.data = [\r\n            { x: 'SUV', y: 25 }, { x: 'Car', y: 37 }, { x: 'Pickup', y: 15 },\r\n            { x: 'Minivan', y: 23 }\r\n        ];\r\n        this.suvs = [{ x: 'Toyota', y: 8 }, { x: 'Ford', y: 12 }, { x: 'GM', y: 17 }, { x: 'Renault', y: 6 }, { x: 'Fiat', y: 3 },\r\n            { x: 'Hyundai', y: 16 }, { x: 'Honda', y: 8 }, { x: 'Maruthi', y: 10 }, { x: 'BMW', y: 20 }];\r\n        this.cars = [{ x: 'Toyota', y: 7 }, { x: 'Chrysler', y: 12 }, { x: 'Nissan', y: 9 }, { x: 'Ford', y: 15 },\r\n            { x: 'Tata', y: 10 },\r\n            { x: 'Mahindra', y: 7 }, { x: 'Renault', y: 8 }, { x: 'Skoda', y: 5 }, { x: 'Volkswagen', y: 15 }, { x: 'Fiat', y: 3 }];\r\n        this.pickups = [{ x: 'Nissan', y: 9 }, { x: 'Chrysler', y: 4 }, { x: 'Ford', y: 7 }, { x: 'Toyota', y: 20 },\r\n            { x: 'Suzuki', y: 13 }, { x: 'Lada', y: 12 }, { x: 'Bentley', y: 6 }, { x: 'Volvo', y: 10 }, { x: 'Audi', y: 19 }];\r\n        this.minivans = [{ x: 'Hummer', y: 11 }, { x: 'Ford', y: 5 }, { x: 'GM', y: 12 }, { x: 'Chrysler', y: 3 },\r\n            { x: 'Jaguar', y: 9 },\r\n            { x: 'Fiat', y: 8 }, { x: 'Honda', y: 15 }, { x: 'Hyundai', y: 4 }, { x: 'Scion', y: 11 }, { x: 'Toyota', y: 17 }];\r\n        this.dataLabel = {\r\n            visible: true, position: 'Inside', connectorStyle: { type: 'Curve', length: '5%' }, font: { size: '14px', color: 'white' }\r\n        };\r\n        this.startAngle = 0;\r\n        //public explodeIndex: number = 2;\r\n        this.endAngle = 360;\r\n        this.title = 'Automobile Sales by Category';\r\n        this.isparent = true;\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <div id=\"link\">\r\n                        <a id=\"category\" onClick={this.onClick.bind(this)} style={{ visibility: 'hidden', display: 'inline-block' }}>\r\n                            Sales by Category\r\n\t\t</a>\r\n                        <p style={{ visibility: 'hidden', display: 'inline-block' }} id=\"symbol\">&nbsp;&gt;&gt;&nbsp;</p>\r\n                        <p id=\"text\" style={{ display: 'inline-block' }}></p>\r\n                    </div>\r\n                    <AccumulationChartComponent id='pie-chart' ref={pie => this.pie = pie} title='Automobile Sales by Category' enableSmartLabels={false} legendSettings={{ visible: false }} tooltip={{ enable: false, format: '${point.x} <br> ${point.y} %' }} chartMouseClick={this.onChartMouseClick.bind(this)} textRender={this.onTextRender.bind(this)} load={this.load.bind(this)} loaded={this.onChartLoad.bind(this)}>\r\n                        <Inject services={[AccumulationDataLabel, AccumulationTooltip, PieSeries, AccumulationAnnotation]}/>\r\n                        <AccumulationSeriesCollectionDirective>\r\n                            <AccumulationSeriesDirective dataSource={this.data} xName='x' yName='y' dataLabel={this.dataLabel} radius='70%' explode={false}>\r\n                            </AccumulationSeriesDirective>\r\n                        </AccumulationSeriesCollectionDirective>\r\n                    </AccumulationChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onTextRender(args) {\r\n        args.text = args.point.x + ' ' + args.point.y + ' %';\r\n    }\r\n    onChartMouseClick(args) {\r\n        let index = indexFinder(args.target);\r\n        if (this.isparent && document.getElementById('pie-chart_Series_' + index.series + '_Point_' + index.point)) {\r\n            this.isparent = false;\r\n            switch (index.point) {\r\n                case 0:\r\n                    this.pie.series[0].dataSource = this.suvs;\r\n                    this.pie.title = 'Automobile Sales in the SUV Segment';\r\n                    document.getElementById('text').innerHTML = 'SUV';\r\n                    break;\r\n                case 1:\r\n                    this.pie.series[0].dataSource = this.cars;\r\n                    this.pie.title = 'Automobile Sales in the Car Segment';\r\n                    document.getElementById('text').innerHTML = 'Car';\r\n                    break;\r\n                case 2:\r\n                    this.pie.series[0].dataSource = this.pickups;\r\n                    this.pie.title = 'Automobile Sales in the Pickup Segment';\r\n                    document.getElementById('text').innerHTML = 'Pickup';\r\n                    break;\r\n                case 3:\r\n                    this.pie.series[0].dataSource = this.minivans;\r\n                    this.pie.title = 'Automobile Sales in the Minivan Segment';\r\n                    document.getElementById('text').innerHTML = 'Minivan';\r\n                    break;\r\n            }\r\n            this.pie.annotations = [{\r\n                    content: '<div id=\"back\" style=\"cursor:pointer; padding: 3px; width: 30px; height: 30px;\">' +\r\n                        '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/back.png\" id=\"imgback\" />', region: 'Series', x: '50%', y: '50%'\r\n                }];\r\n            this.pie.series[0].innerRadius = '30%';\r\n            this.pie.series[0].explode = false;\r\n            this.pie.series[0].dataLabel.position = 'Outside';\r\n            this.pie.series[0].dataLabel.font.color = 'black';\r\n            this.pie.legendSettings.visible = true;\r\n            this.pie.visibleSeries[0].explodeIndex = null;\r\n            this.pie.enableSmartLabels = true;\r\n            this.pie.refresh();\r\n            document.getElementById('category').style.visibility = 'visible';\r\n            document.getElementById('symbol').style.visibility = 'visible';\r\n            document.getElementById('text').style.visibility = 'visible';\r\n        }\r\n        if (args.target.indexOf('back') > -1) {\r\n            this.hide(document.getElementById(args.target));\r\n        }\r\n    }\r\n    onClick(e) {\r\n        this.hide(e.target);\r\n    }\r\n    hide(target) {\r\n        this.pie.series[0].dataSource = this.data;\r\n        this.pie.series[0].innerRadius = '0%';\r\n        this.isparent = true;\r\n        this.pie.series[0].explode = false;\r\n        this.pie.annotations = [];\r\n        this.pie.annotationModule['annotations'] = [];\r\n        this.pie.series[0].dataLabel = this.dataLabel;\r\n        this.pie.title = this.title;\r\n        this.pie.legendSettings.visible = false;\r\n        //this.pie.visibleSeries[0].explodeIndex = this.explodeIndex;\r\n        this.pie.enableSmartLabels = false;\r\n        this.pie.refresh();\r\n        target.style.visibility = 'hidden';\r\n        document.getElementById('category').style.visibility = 'hidden';\r\n        document.getElementById('symbol').style.visibility = 'hidden';\r\n        document.getElementById('text').style.visibility = 'hidden';\r\n    }\r\n    onChartLoad(args) {\r\n        document.getElementById('pie-chart').setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<Drilldown />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}