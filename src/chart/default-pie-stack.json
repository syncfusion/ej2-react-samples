{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective, Inject, AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel } from '@syncfusion/ej2-react-charts';\r\nexport let data1 = [\r\n    { 'x': 'Chrome', y: 37, text: '37%' }, { 'x': 'UC Browser', y: 17, text: '17%' },\r\n    { 'x': 'iPhone', y: 19, text: '19%' },\r\n    { 'x': 'Others', y: 4, text: '4%' }, { 'x': 'Opera', y: 11, text: '11%' },\r\n    { 'x': 'Android', y: 12, text: '12%' }\r\n];\r\nexport class Pie extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div className='control-section row'>\r\n          <div className='col-lg-9'>\r\n            <AccumulationChartComponent id='pie-chart' ref={pie => this.pie = pie} title='Mobile Browser Statistics' load={this.load.bind(this)} legendSettings={{ visible: false }} enableSmartLabels={true} enableAnimation={false} center={{ x: '50%', y: '50%' }} tooltip={{ enable: true, format: '${point.x} : <b>${point.y}%</b>' }} loaded={this.onChartLoad.bind(this)}>\r\n              <Inject services={[AccumulationLegend, PieSeries, AccumulationTooltip, AccumulationDataLabel]}/>\r\n              <AccumulationSeriesCollectionDirective>\r\n                <AccumulationSeriesDirective dataSource={data1} name='Browser' xName='x' yName='y' explode={true} explodeOffset='10%' explodeIndex={0} dataLabel={{\r\n            visible: true,\r\n            position: 'Inside', name: 'text',\r\n            font: {\r\n                fontWeight: '600'\r\n            }\r\n        }} radius='70%'>\r\n                </AccumulationSeriesDirective>\r\n              </AccumulationSeriesCollectionDirective>\r\n            </AccumulationChartComponent>\r\n          </div>\r\n          <div className='col-lg-3 property-section'>\r\n            <PropertyPane title='Properties'>\r\n              <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Pie Angle:\r\n                        <p id=\"anglevalue\" style={{ fontWeight: 'normal' }}>0</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '70%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"range-min\" onChange={this.pieangle.bind(this)} ref={s => this.slider = s} id=\"pieangle\" defaultValue=\"0\" min=\"0\" max=\"360\" style={{ width: '90%' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Outer Radius:\r\n                                <p id=\"radius\" style={{ fontWeight: 'normal' }}>0.8</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '70%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"range-min\" onChange={this.pieradius.bind(this)} ref={s => this.slider = s} id=\"pieradius\" defaultValue=\"80\" min=\"0\" max=\"80\" style={{ marginLeft: '-5px' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Explode Radius:\r\n                                <p id=\"exploderadius\" style={{ fontWeight: 'normal' }}>0.1</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '70%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"range-min\" onChange={this.pieexploderadius.bind(this)} ref={s => this.slider = s} id=\"pieexploderadius\" defaultValue=\"10\" min=\"0\" max=\"40\" style={{ marginLeft: '-5px' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Explode Index:\r\n                                <p id=\"explodeindex\" style={{ fontWeight: 'normal' }}>5</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '70%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"range-min\" onChange={this.pieexplodeindex.bind(this)} ref={s => this.slider = s} id=\"pieexplodeindex\" defaultValue=\"5\" min=\"0\" max=\"6\" style={{ marginLeft: '-5px' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Center X\r\n                                <p id=\"xvalue\" style={{ fontWeight: 'normal' }}>50%</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '70%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"range-min\" onChange={this.piecenterx.bind(this)} ref={s => this.slider = s} id=\"x\" defaultValue=\"50\" min=\"0\" max=\"100\" style={{ marginLeft: '-5px' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Center Y\r\n                                <p id=\"yvalue\" style={{ fontWeight: 'normal' }}>50%</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '70%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"range-min\" onChange={this.piecentery.bind(this)} ref={s => this.slider = s} id=\"y\" defaultValue=\"50\" min=\"0\" max=\"100\" style={{ marginLeft: '-5px' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </PropertyPane>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n    pieangle(e) {\r\n        let angle = document.getElementById('pieangle').value;\r\n        this.pie.series[0].startAngle = parseFloat(angle);\r\n        this.pie.series[0].endAngle = parseFloat(angle);\r\n        this.pie.series[0].animation.enable = false;\r\n        document.getElementById('anglevalue').innerHTML = angle;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    pieradius(e) {\r\n        let radius = document.getElementById('pieradius').value;\r\n        this.pie.series[0].radius = radius + '%';\r\n        document.getElementById('radius').innerHTML = (parseInt(radius, 10) / 100).toFixed(2);\r\n        this.pie.series[0].animation.enable = false;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    pieexploderadius(e) {\r\n        let radius = document.getElementById('pieexploderadius').value;\r\n        this.pie.visibleSeries[0].explodeOffset = radius + '%';\r\n        document.getElementById('exploderadius').innerHTML = (parseInt(radius, 10) / 100).toFixed(2);\r\n        this.pie.series[0].animation.enable = false;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    pieexplodeindex(e) {\r\n        let index = +document.getElementById('pieexplodeindex').value;\r\n        this.pie.visibleSeries[0].explodeIndex = index;\r\n        document.getElementById('explodeindex').innerHTML = index.toString();\r\n        this.pie.series[0].animation.enable = false;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    piecenterx(e) {\r\n        let x = document.getElementById('x').value;\r\n        this.pie.center.x = x + '%';\r\n        document.getElementById('xvalue').innerHTML = x + '%';\r\n        this.pie.series[0].animation.enable = false;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    piecentery(e) {\r\n        let y = document.getElementById('y').value;\r\n        this.pie.center.y = y + '%';\r\n        document.getElementById('yvalue').innerHTML = y + '%';\r\n        this.pie.series[0].animation.enable = false;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    onChartLoad(args) {\r\n        document.getElementById('pie-chart').setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<Pie />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}