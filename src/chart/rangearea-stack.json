{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Range Area Series\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, DateTime, SeriesDirective, Inject, Category, RangeAreaSeries, Zoom } from '@syncfusion/ej2-react-charts';\r\nimport { SampleBase } from './sample-base';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nlet series1 = [];\r\nlet value = 35;\r\nlet point1;\r\nfor (let i = 1; i < 100; i++) {\r\n    if (Math.random() > .5) {\r\n        value += Math.random();\r\n    }\r\n    else {\r\n        value -= Math.random();\r\n    }\r\n    point1 = { x: new Date(2017, 1, 1 + i), high: value, low: value - 10 };\r\n    series1.push(point1);\r\n}\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n\t}`;\r\nexport class RangeArea extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='charts' ref={chart => this.chartInstance = chart} style={{ textAlign: \"center\" }} load={this.load.bind(this)} seriesRender={this.seriesRender.bind(this)} primaryXAxis={{\r\n            valueType: 'DateTime',\r\n            edgeLabelPlacement: 'Shift',\r\n            majorGridLines: { width: 0 }\r\n        }} legendSettings={{ visible: false }} zoomSettings={{\r\n            enableSelectionZooming: true,\r\n            mode: 'X'\r\n        }} primaryYAxis={{\r\n            labelFormat: '{value}ËšC',\r\n            lineStyle: { width: 0 },\r\n            majorTickLines: { width: 0 }\r\n        }} chartArea={{ border: { width: 0 } }} width={Browser.isDevice ? '100%' : '80%'} title='Temperature Variation' loaded={this.onChartLoad.bind(this)}>\r\n                        <Inject services={[RangeAreaSeries, Category, DateTime, Zoom]}/>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={series1} border={{\r\n            width: 2\r\n        }} xName='x' high='high' opacity={0.4} marker={{\r\n            visible: false,\r\n            height: 8, width: 8, opacity: 1,\r\n            dataLabel: { visible: false, position: 'Outer' }\r\n        }} low='low' animation={{ enable: true }} name='India' type='RangeArea'>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        let chart = document.getElementById('charts');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n    seriesRender(args) {\r\n        let theme = args.series.chart.theme;\r\n        let color;\r\n        if (theme === 'Material') {\r\n            color = '#004c46';\r\n        }\r\n        else if (theme === 'Bootstrap') {\r\n            color = '#402c5c';\r\n        }\r\n        else {\r\n            color = '#1b2e4e';\r\n        }\r\n        args.series.border.color = color;\r\n    }\r\n}\r\n\nrender(<RangeArea />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}