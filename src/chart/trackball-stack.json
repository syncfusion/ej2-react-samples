{"index.css":"/* css */","trackball-data.js":"\"use strict\";\nObject.defineProperty(exports, \"__esModule\", { value: true });\n/**\n * Sample for Trackball in chart\n */\nexports.john = [{ x: new Date(2000, 2, 11), y: 15 }, { x: new Date(2000, 9, 14), y: 20 },\n    { x: new Date(2001, 2, 11), y: 25 }, { x: new Date(2001, 9, 16), y: 21 },\n    { x: new Date(2002, 2, 7), y: 13 }, { x: new Date(2002, 9, 7), y: 18 },\n    { x: new Date(2003, 2, 11), y: 24 }, { x: new Date(2003, 9, 14), y: 23 },\n    { x: new Date(2004, 2, 6), y: 19 }, { x: new Date(2004, 9, 6), y: 31 },\n    { x: new Date(2005, 2, 11), y: 39 }, { x: new Date(2005, 9, 11), y: 50 },\n    { x: new Date(2006, 2, 11), y: 24 }];\nexports.andrew = [{ x: new Date(2000, 2, 11), y: 39 }, { x: new Date(2000, 9, 14), y: 30 },\n    { x: new Date(2001, 2, 11), y: 28 }, { x: new Date(2001, 9, 16), y: 35 },\n    { x: new Date(2002, 2, 7), y: 39 }, { x: new Date(2002, 9, 7), y: 41 },\n    { x: new Date(2003, 2, 11), y: 45 }, { x: new Date(2003, 9, 14), y: 48 },\n    { x: new Date(2004, 2, 6), y: 54 }, { x: new Date(2004, 9, 6), y: 55 },\n    { x: new Date(2005, 2, 11), y: 57 }, { x: new Date(2005, 9, 11), y: 60 },\n    { x: new Date(2006, 2, 11), y: 60 }];\nexports.thomas = [{ x: new Date(2000, 2, 11), y: 60 }, { x: new Date(2000, 9, 14), y: 55 },\n    { x: new Date(2001, 2, 11), y: 48 }, { x: new Date(2001, 9, 16), y: 57 },\n    { x: new Date(2002, 2, 7), y: 62 }, { x: new Date(2002, 9, 7), y: 64 },\n    { x: new Date(2003, 2, 11), y: 57 }, { x: new Date(2003, 9, 14), y: 53 },\n    { x: new Date(2004, 2, 6), y: 63 }, { x: new Date(2004, 9, 6), y: 50 },\n    { x: new Date(2005, 2, 11), y: 66 }, { x: new Date(2005, 9, 11), y: 65 },\n    { x: new Date(2006, 2, 11), y: 79 }];\nexports.mark = [{ x: new Date(2000, 2, 11), y: 75 }, { x: new Date(2000, 9, 14), y: 75 },\n    { x: new Date(2001, 2, 11), y: 68 }, { x: new Date(2001, 9, 16), y: 75 },\n    { x: new Date(2002, 2, 7), y: 71 }, { x: new Date(2002, 9, 7), y: 69 },\n    { x: new Date(2003, 2, 11), y: 81 }, { x: new Date(2003, 9, 14), y: 84 },\n    { x: new Date(2004, 2, 6), y: 85 }, { x: new Date(2004, 9, 6), y: 87 },\n    { x: new Date(2005, 2, 11), y: 75 }, { x: new Date(2005, 9, 11), y: 70 },\n    { x: new Date(2006, 2, 11), y: 85 }];\nexports.william = [{ x: new Date(2000, 2, 11), y: 85 }, { x: new Date(2000, 9, 14), y: 83 },\n    { x: new Date(2001, 2, 11), y: 85 }, { x: new Date(2001, 9, 16), y: 87 },\n    { x: new Date(2002, 2, 7), y: 82 }, { x: new Date(2002, 9, 7), y: 74 },\n    { x: new Date(2003, 2, 11), y: 73 }, { x: new Date(2003, 9, 14), y: 75 },\n    { x: new Date(2004, 2, 6), y: 73 }, { x: new Date(2004, 9, 6), y: 60 },\n    { x: new Date(2005, 2, 11), y: 48 }, { x: new Date(2005, 9, 11), y: 55 },\n    { x: new Date(2006, 2, 11), y: 40 }];\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Trackball in chart\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, LineSeries, DateTime, Tooltip, Crosshair, Legend } from '@syncfusion/ej2-react-charts';\r\nimport { john, andrew, thomas } from './trackball-data';\r\nimport { SampleBase } from './sample-base';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nexport class TrackballChart extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{\r\n            minimum: new Date(2000, 1, 1), maximum: new Date(2006, 2, 11),\r\n            valueType: 'DateTime',\r\n            skeleton: 'y',\r\n            lineStyle: { width: 0 },\r\n            majorGridLines: { width: 0 },\r\n            edgeLabelPlacement: 'Shift'\r\n        }} width={Browser.isDevice ? '100%' : '60%'} chartArea={{ border: { width: 0 } }} load={this.load.bind(this)} primaryYAxis={{\r\n            title: 'Revenue',\r\n            labelFormat: '{value}M',\r\n            majorTickLines: { width: 0 },\r\n            minimum: 10, maximum: 80,\r\n            lineStyle: { width: 0 },\r\n        }} title='Average Sales per Person' loaded={this.onChartLoad.bind(this)} tooltip={{ enable: true, shared: true }} crosshair={{ enable: true, lineType: 'Vertical' }}>\r\n                        <Inject services={[LineSeries, DateTime, Tooltip, Crosshair, Legend]}/>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={john} xName='x' yName='y' width={2} name='John' type='Line' marker={{ visible: true }}>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={andrew} xName='x' yName='y' width={2} name='Andrew' type='Line' marker={{ visible: true }}>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={thomas} xName='x' yName='y' width={2} name='Thomas' type='Line' marker={{ visible: true }}>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        let chart = document.getElementById('charts');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<TrackballChart />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}