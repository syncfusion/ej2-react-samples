{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Area series with empty points\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Tooltip, AnnotationsDirective, AnnotationDirective, DateTime, MultiColoredLineSeries, ChartAnnotation, SegmentsDirective, SegmentDirective } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nexport let dataValues = [];\r\n[\r\n    380, 410, 310, 540, 510, 330, 490, 470, 472, 460, 550, 420, 380, 430, 385, 520, 580, 420, 350, 505,\r\n    535, 410, 204, 400, 415, 408, 415, 350, 375, 500, 390, 450, 440, 350, 400, 365, 490, 400, 520, 510,\r\n    395, 380, 404, 400, 500, 390, 610, 380, 390, 420, 440, 570, 600, 380, 410, 405, 480, 320, 420, 440,\r\n    320, 280, 320, 400, 390, 460, 470, 490, 420, 480, 410, 420, 580, 410, 380, 480, 360, 650, 680, 720,\r\n    580, 480, 520, 440, 420, 430, 380, 520, 410, 540, 400, 390, 460, 470, 490, 420, 480, 470, 490, 330,\r\n    520, 480, 580, 590, 600, 310, 480, 500, 400, 508, 480, 460, 700, 705, 480, 410, 480,\r\n].map((value, index) => {\r\n    dataValues.push({ XValue: new Date(1900 + index, 0, 1), YValue: value });\r\n});\r\nlet content = \"<div style='width:80px; padding: 5px;'><table style='width: 100%'>\" +\r\n    \"<tr> <td><div style='width: 10px; height: 10px; background:blue;border-radius: 15px;'></div>\" +\r\n    \"</td> <td style='padding-left: 5px;'>High</td></tr><tr><td>\" +\r\n    \"<div style='width: 10px; height: 10px; background:green;;border-radius: 15px;'></div>\" +\r\n    \"</td><td style='padding-left: 5px;'>Medium </td></tr><tr><td>\" +\r\n    \"<div style='width: 10px; height: 10px; background:red;;border-radius: 15px;'></div>\" +\r\n    \"</td><td style='padding-left: 5px;'>Low</td></tr></table></div>\";\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\n/**\r\n * Area empty sample\r\n */\r\nexport class LineZone extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{\r\n            valueType: 'DateTime',\r\n            labelFormat: 'y',\r\n            intervalType: 'Years',\r\n            edgeLabelPlacement: 'Shift',\r\n            majorGridLines: { width: 0 }\r\n        }} primaryYAxis={{\r\n            labelFormat: '{value}mm',\r\n            rangePadding: 'None',\r\n            minimum: 200,\r\n            maximum: 800,\r\n            interval: 100,\r\n            lineStyle: { width: 0 },\r\n            majorTickLines: { width: 0 },\r\n            minorTickLines: { width: 0 }\r\n        }} tooltip={{ enable: true, shared: true, enableAnimation: false }} legendSettings={{ visible: false }} chartArea={{ border: { width: 0 } }} load={this.load.bind(this)} width={Browser.isDevice ? '100%' : '60%'} title=\"Annual Mean Rainfall for Australia\" loaded={this.onChartLoad.bind(this)}>\r\n                        <Inject services={[MultiColoredLineSeries, ChartAnnotation, DateTime, Tooltip]}/>\r\n                        <AnnotationsDirective>\r\n                            <AnnotationDirective content={content} region='Series' x='90%' y='12%'></AnnotationDirective>\r\n                        </AnnotationsDirective>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={dataValues} xName='XValue' yName='YValue' name='Australia' type='MultiColoredLine' segmentAxis='Y'>\r\n                                <SegmentsDirective>\r\n                                    <SegmentDirective value={450} color='red'></SegmentDirective>\r\n                                    <SegmentDirective value={500} color='green'></SegmentDirective>\r\n                                    <SegmentDirective color='blue'></SegmentDirective>\r\n                                </SegmentsDirective>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        let chart = document.getElementById('charts');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<LineZone />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}