{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective, AccumulationDataLabel, AccumulationTooltip, PieSeries, Inject, } from '@syncfusion/ej2-react-charts';\r\nexport let data1 = [\r\n    { x: 'Australia', y: 53, text: 'AUS: 14%' },\r\n    { x: 'China', y: 56, text: 'CHN: 15%' },\r\n    { x: 'India', y: 61, text: 'IND: 16%' },\r\n    { x: 'Japan', y: 13, text: 'JPN: 3%' },\r\n    { x: 'South Africa', y: 79, text: 'ZAF: 21%' },\r\n    { x: 'United Kingdom', y: 68, text: 'UK: 19%' },\r\n    { x: 'United States', y: 48, text: 'USA: 12%' }\r\n];\r\nexport class SemiPie extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div className='control-section row'>\r\n          <div className='col-lg-9'>\r\n            <AccumulationChartComponent id='pie-chart' ref={pie => this.pie = pie} title='Agricultural Land Percentage' tooltip={{ enable: true, format: '${point.x} : <b>${point.y}%</b>' }} legendSettings={{ visible: false }} load={this.load.bind(this)} loaded={this.onChartLoad.bind(this)}>\r\n              <Inject services={[AccumulationDataLabel, AccumulationTooltip, PieSeries]}/>\r\n              <AccumulationSeriesCollectionDirective>\r\n                <AccumulationSeriesDirective name='Agricultural' dataSource={data1} xName='x' yName='y' startAngle={270} endAngle={90} radius='90%' explode={true} innerRadius='40%' dataLabel={{\r\n            visible: true, position: 'Outside',\r\n            connectorStyle: { length: '10%' }, name: 'text',\r\n            font: { size: '14px' }\r\n        }}>\r\n                </AccumulationSeriesDirective>\r\n              </AccumulationSeriesCollectionDirective>\r\n            </AccumulationChartComponent>\r\n          </div>\r\n          <div className='col-lg-3 property-section'>\r\n            <PropertyPane title='Properties'>\r\n              <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '60%' }}>\r\n                    <div>Start Angle:\r\n                          <p id=\"startangle\" style={{ fontWeight: 'normal' }}>270</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '40%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"range-min\" ref={slider => this.slider = slider} id=\"range-min\" defaultValue=\"270\" min=\"0\" max=\"360\" onChange={this.startangle.bind(this)} style={{ marginLeft: '-5px' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '60%' }}>\r\n                    <div>End Angle:\r\n                          <p id=\"endangle\" style={{ fontWeight: 'normal' }}>90</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '40%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"range-min\" ref={slider => this.slider = slider} id=\"range-max\" defaultValue=\"90\" min=\"0\" max=\"360\" onChange={this.endangle.bind(this)} style={{ marginLeft: '-5px' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr style={{ height: '50px' }}>\r\n                  <td style={{ width: '60%' }}>\r\n                    <div>Inner Radius:\r\n                          <p id=\"innerradius\" style={{ fontWeight: 'normal' }}>0.40</p>\r\n                    </div>\r\n                  </td>\r\n                  <td style={{ width: '40%' }}>\r\n                    <div data-role=\"rangeslider\">\r\n                      <input type=\"range\" name=\"innerRadius\" ref={slider => this.slider = slider} id=\"inner-radius\" defaultValue=\"40\" min=\"0\" max=\"50\" onChange={this.onChange.bind(this)} style={{ marginLeft: '-5px' }}/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </PropertyPane>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n    startangle(e) {\r\n        let rangeMin = document.getElementById('range-min').value;\r\n        this.pie.series[0].startAngle = parseFloat(rangeMin);\r\n        document.getElementById('startangle').innerHTML = rangeMin;\r\n        this.pie.series[0].animation.enable = false;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    endangle(e) {\r\n        let rangeMax = document.getElementById('range-max').value;\r\n        this.pie.series[0].endAngle = parseFloat(rangeMax);\r\n        document.getElementById('endangle').innerHTML = rangeMax;\r\n        this.pie.series[0].animation.enable = false;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    onChange(e) {\r\n        let innerRadius = document.getElementById('inner-radius').value;\r\n        this.pie.series[0].innerRadius = innerRadius + '%';\r\n        document.getElementById('innerradius').innerHTML = (parseInt(innerRadius, 10) / 100).toFixed(2);\r\n        this.pie.series[0].animation.enable = false;\r\n        this.pie.removeSvg();\r\n        this.pie.refreshSeries();\r\n        this.pie.refreshChart();\r\n    }\r\n    ;\r\n    onChartLoad(args) {\r\n        document.getElementById('pie-chart').setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<SemiPie />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}