{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { AccumulationChartComponent, AccumulationSeriesCollectionDirective, AccumulationSeriesDirective, Inject, AccumulationLegend, AccumulationDataLabel, AccumulationTooltip, PyramidSeries, AccumulationSelection } from '@syncfusion/ej2-react-charts';\r\nexport let data1 = [{ x: 'Sweet Treats', y: 120, text: '120 cal' },\r\n    { x: 'Milk, Youghnut, Cheese', y: 435, text: '435 cal' },\r\n    { x: 'Vegetables', y: 470, text: '470 cal' },\r\n    { x: 'Meat, Poultry, Fish', y: 475, text: '475 cal' },\r\n    { x: 'Fruits', y: 520, text: '520 cal' },\r\n    { x: 'Bread, Rice, Pasta', y: 930, text: '930 cal' }];\r\nexport class Pyramid extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div className='control-section'>\r\n          <AccumulationChartComponent id='pyramid-chart' ref={pyramid => this.pyramid = pyramid} title='Food Comparison Chart' legendSettings={{\r\n            visible: false,\r\n        }} load={this.load.bind(this)} tooltip={{ enable: true, format: '${point.x} : <b>${point.y} cal</b>' }} loaded={this.onChartLoad.bind(this)} resized={this.chartResized.bind(this)}>\r\n            <Inject services={[AccumulationDataLabel, AccumulationTooltip, PyramidSeries, AccumulationLegend, AccumulationSelection]}/>\r\n            <AccumulationSeriesCollectionDirective>\r\n              <AccumulationSeriesDirective name='Food' dataSource={data1} xName='x' yName='y' type='Pyramid' width='45%' height='80%' neckWidth='15%' gapRatio={0.03} explode={true} emptyPointSettings={{ mode: 'Drop', fill: 'red' }} dataLabel={{\r\n            visible: true, position: 'Inside',\r\n            name: 'text',\r\n        }}>\r\n              </AccumulationSeriesDirective>\r\n            </AccumulationSeriesCollectionDirective>\r\n          </AccumulationChartComponent>\r\n        </div>\r\n      </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        document.getElementById('pyramid-chart').setAttribute('title', '');\r\n    }\r\n    ;\r\n    chartResized(args) {\r\n        let bounds = document.getElementById('pyramid-chart').getBoundingClientRect();\r\n        if (bounds.width < bounds.height) {\r\n            args.accumulation.series[0].width = '80%';\r\n            args.accumulation.series[0].height = '70%';\r\n        }\r\n        else {\r\n            args.accumulation.series[0].width = '60%';\r\n            args.accumulation.series[0].height = '80%';\r\n        }\r\n    }\r\n}\r\n\nrender(<Pyramid />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}