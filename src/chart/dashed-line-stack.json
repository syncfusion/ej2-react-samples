{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Line Series with dashed line\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, LineSeries, Crosshair, DateTime, Legend, Tooltip } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nexport let data1 = [\r\n    { x: new Date(2005, 0, 1), y: 12 }, { x: new Date(2006, 0, 1), y: 10.6 },\r\n    { x: new Date(2007, 0, 1), y: 15.6 }, { x: new Date(2008, 0, 1), y: 38.6 },\r\n    { x: new Date(2009, 0, 1), y: 27.4 }, { x: new Date(2010, 0, 1), y: 23.5 },\r\n    { x: new Date(2011, 0, 1), y: 16.6 }\r\n];\r\nexport let data2 = [\r\n    { x: new Date(2005, 0, 1), y: 9.5 }, { x: new Date(2006, 0, 1), y: 19.9 },\r\n    { x: new Date(2007, 0, 1), y: 25.2 }, { x: new Date(2008, 0, 1), y: 36 },\r\n    { x: new Date(2009, 0, 1), y: 16.6 }, { x: new Date(2010, 0, 1), y: 14.2 }, { x: new Date(2011, 0, 1), y: 10.3 }\r\n];\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }\r\n    #charts_Series_1,\r\n    #charts_Series_0 {\r\n        stroke-dasharray: 10px 10px;\r\n        stroke-linejoin: round; stroke-linecap: round;\r\n        -webkit-animation: dash 1s linear infinite;\r\n        animation: dash 1s linear infinite;\r\n    }\r\n\r\n    #charts_Series_0_Point_3_Symbol {\r\n        -webkit-animation: opac 1s ease-out infinite;\r\n        animation: opac 1s ease-out infinite;\r\n    }\r\n\r\n    @-webkit-keyframes dash {\r\n        100% {\r\n            stroke-dashoffset: -20px;\r\n        }\r\n    }\r\n\r\n    @keyframes dash {\r\n        100% {\r\n            stroke-dashoffset: -20px;\r\n        }\r\n    }\r\n\r\n    @keyframes opac {\r\n        0% {\r\n            stroke-opacity: 1;\r\n            stroke-width: 0px;\r\n        }\r\n        100% {\r\n            stroke-opacity: 0;\r\n            stroke-width: 10px;\r\n        }\r\n    }`;\r\nexport class DashedLine extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{\r\n            valueType: 'DateTime',\r\n            labelFormat: 'y',\r\n            intervalType: 'Years',\r\n            edgeLabelPlacement: 'Shift',\r\n            majorGridLines: { width: 0 }\r\n        }} load={this.load.bind(this)} primaryYAxis={{\r\n            labelFormat: '{value}%',\r\n            rangePadding: 'None',\r\n            lineStyle: { width: 0 },\r\n            minimum: 0,\r\n            maximum: 40,\r\n            interval: 10,\r\n            majorTickLines: { width: 0 },\r\n            minorTickLines: { width: 0 }\r\n        }} chartArea={{ border: { width: 0 } }} tooltip={{ enable: true, shared: true }} crosshair={{\r\n            enable: true,\r\n            line: {\r\n                color: 'rgba(204,214,235,0.25)',\r\n                width: Browser.isDevice ? 50 : 20,\r\n            },\r\n            lineType: 'Vertical'\r\n        }} width={Browser.isDevice ? '100%' : '60%'} title='Fruits Production Statistics' loaded={this.onChartLoad.bind(this)}>\r\n                        <Inject services={[LineSeries, DateTime, Legend, Tooltip, Crosshair]}/>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={data1} xName='x' yName='y' name='Banana' dashArray='5' width={2} marker={{ visible: true, width: 10, height: 10 }} type='Line'>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={data2} xName='x' yName='y' name='Apple' width={2} marker={{ visible: true, width: 10, height: 10, shape: 'Diamond' }} dashArray='10' type='Line'>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        let chart = document.getElementById('charts');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<DashedLine />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}