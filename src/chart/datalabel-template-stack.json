{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample fro DataLabel template\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, LineSeries, DataLabel, Legend, Category } from '@syncfusion/ej2-react-charts';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nlet data1 = [\r\n    { x: 2010, y: 1014 }, { x: 2011, y: 1040 },\r\n    { x: 2012, y: 1065 }, { x: 2013, y: 1110 },\r\n    { x: 2014, y: 1130 }, { x: 2015, y: 1153 },\r\n    { x: 2016, y: 1175 }\r\n];\r\nlet data2 = [\r\n    { x: 2010, y: 990 }, { x: 2011, y: 1010 },\r\n    { x: 2012, y: 1030 }, { x: 2013, y: 1070 },\r\n    { x: 2014, y: 1105 }, { x: 2015, y: 1138 },\r\n    { x: 2016, y: 1155 }\r\n];\r\nlet theme;\r\nlet materialMan = '<div style=\"background-color:#00bdae;border-radius: 3px; width: 68px\">' +\r\n    '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/male.png\" style=\"width: 24px; height: 24px; padding: 2px\" />' +\r\n    '<div style=\"color:white; font-family:Roboto; font-style: medium; fontp-size:14px; float: right;'\r\n    + 'padding: 2px;line-height: 20px;text-align: center; padding-right: 6px;\"><span>' +\r\n    '${point.y}M </span></div></div>';\r\nlet materialWomen = '<div style=\"background-color:#404041;border-radius: 3px; width: 68px\">' +\r\n    '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/male.png\" style=\"width: 24px; height: 24px; padding: 2px\" />' +\r\n    '<div style=\"color:white; font-family:Roboto; font-style: medium; fontp-size:14px; float: right;'\r\n    + 'padding: 2px;line-height: 20px;text-align: center;padding-right: 6px;\"><span>' +\r\n    '${point.y}M </span></div></div>';\r\nlet fabricMan = '<div style=\"background-color:#4472c4;border-radius: 3px;width: 68px\">' +\r\n    '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/male.png\" style=\"width: 24px; height: 24px; padding: 2px\" />' +\r\n    '<div style=\"color:white; font-family:Roboto; font-style: medium; fontp-size:14px; float: right;'\r\n    + 'padding: 2px;line-height: 20px;text-align: center;padding-right: 6px\"><span>' +\r\n    '${point.y}M </span></div></div>';\r\nlet fabricWomen = '<div style=\"background-color:#ed7d31;border-radius: 3px;width: 68px\">' +\r\n    '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/male.png\" style=\"width: 24px; height: 24px; padding: 2px\" />' +\r\n    '<div style=\"color:white; font-family:Roboto; font-style: medium; fontp-size:14px; float: right;'\r\n    + 'padding: 2px;line-height: 20px;text-align: center;padding-right: 6px\"><span>' +\r\n    '${point.y}M </span></div></div>';\r\nlet bootstrapMan = '<div style=\"background-color:#a16ee5;border-radius: 3px;width: 68px\">' +\r\n    '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/male.png\" style=\"width: 24px; height: 24px; padding: 2px\" />' +\r\n    '<div style=\"color:white; font-family:Roboto; font-style: medium; fontp-size:14px; float: right;'\r\n    + 'padding: 2px;line-height: 20px;text-align: center;padding-right: 6px\"><span>' +\r\n    '${point.y}M </span></div></div>';\r\nlet bootstrapWomen = '<div style=\"background-color:#f7ce69;border-radius: 3px;width: 68px\">' +\r\n    '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/male.png\" style=\"width: 24px; height: 24px; padding: 2px\" />' +\r\n    '<div style=\"color:white; font-family:Roboto; font-style: medium; fontp-size:14px; float: right;'\r\n    + 'padding: 2px;line-height: 20px;text-align: center;padding-right: 6px\"><span>' +\r\n    '${point.y}M </span></div></div>';\r\nlet highcontrastMan = '<div style=\"background-color:#79ECE4;border-radius: 3px;\">' +\r\n    '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/male.png\" style=\"width: 24px; height: 24px; padding: 2px\" />' +\r\n    '<div style=\"color:white; font-family:Roboto; font-style: medium; fontp-size:14px; float: right;'\r\n    + 'padding: 2px;line-height: 20px;text-align: center;padding-right: 6px;\"><span>' +\r\n    '${point.y}M </span></div></div>';\r\nlet highcontrastWomen = '<div style=\"background-color:#E98272;border-radius: 3px;\">' +\r\n    '<img src=\"////npmci.syncfusion.com/development/react/demos/src/chart/images/male.png\" style=\"width: 24px; height: 24px; padding: 2px\" />' +\r\n    '<div style=\"color:white; font-family:Roboto; font-style: medium; fontp-size:14px; float: right;'\r\n    + 'padding: 2px;line-height: 20px;text-align: center;padding-right: 6px\"><span>' +\r\n    '${point.y}M </span></div></div>';\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n\t}`;\r\nexport class DataLabelTemplate extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <ChartComponent id='charts' style={{ textAlign: \"center\" }} primaryXAxis={{\r\n            minimum: 2010, maximum: 2016,\r\n            interval: Browser.isDevice ? 2 : 1,\r\n            edgeLabelPlacement: 'Shift',\r\n            labelStyle: {\r\n                fontFamily: 'Roboto',\r\n                fontStyle: 'medium',\r\n                size: '14px'\r\n            },\r\n            majorGridLines: { width: 0 },\r\n            lineStyle: { color: '#eaeaea', width: 1 }\r\n        }} primaryYAxis={{\r\n            minimum: 900, maximum: 1300,\r\n            labelFormat: '{value}M',\r\n            title: Browser.isDevice ? '' : 'Population',\r\n            labelStyle: {\r\n                fontFamily: 'Roboto',\r\n                fontStyle: 'medium', size: '14px'\r\n            },\r\n            interval: 80,\r\n            majorGridLines: {\r\n                color: '#eaeaea', width: 1\r\n            },\r\n            lineStyle: {\r\n                color: '#eaeaea', width: 1\r\n            }\r\n        }} titleStyle={{\r\n            fontFamily: 'Roboto',\r\n            fontStyle: 'medium', size: '14px'\r\n        }} chartArea={{ border: { width: 0 } }} width={Browser.isDevice ? '100%' : '60%'} title='Population of India Statistics' subTitle='(2010 - 2016)' subTitleStyle={{\r\n            textAlignment: 'Far'\r\n        }} load={this.loadPre.bind(this)} loaded={this.loaded.bind(this)} textRender={this.textRender.bind(this)}>\r\n                        <Inject services={[LineSeries, DataLabel, Category, Legend]}/>\r\n                        <SeriesCollectionDirective>\r\n                            <SeriesDirective dataSource={data1} xName='x' yName='y' name='Male' type='Line' marker={{\r\n            visible: true,\r\n            shape: 'Circle',\r\n            dataLabel: {\r\n                visible: true,\r\n                position: 'Top',\r\n                margin: { right: 15 },\r\n                template: materialMan\r\n            }\r\n        }} width={2}>\r\n                            </SeriesDirective>\r\n                            <SeriesDirective dataSource={data2} xName='x' yName='y' name='Female' type='Line' marker={{\r\n            visible: true,\r\n            shape: 'Rectangle',\r\n            dataLabel: {\r\n                visible: true,\r\n                position: 'Bottom',\r\n                margin: { right: 15 },\r\n                template: materialWomen\r\n            }\r\n        }} width={2}>\r\n                            </SeriesDirective>\r\n                        </SeriesCollectionDirective>\r\n                    </ChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n    textRender(args) {\r\n        if (theme === 'Material') {\r\n            args.template = args.series.name === 'Male' ? materialMan : materialWomen;\r\n        }\r\n        else if (theme === 'Fabric') {\r\n            args.template = args.series.name === 'Male' ? fabricMan : fabricWomen;\r\n        }\r\n        else {\r\n            args.template = args.series.name === 'Male' ? bootstrapMan : bootstrapWomen;\r\n        }\r\n    }\r\n    ;\r\n    loaded(args) {\r\n        let chart = document.getElementById('charts');\r\n        chart.setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<DataLabelTemplate />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}