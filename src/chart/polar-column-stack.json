{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Polar Series with drawType Column\r\n */\r\nimport * as React from \"react\";\r\nimport { ChartComponent, SeriesCollectionDirective, SeriesDirective, Inject, Legend, Category, PolarSeries, RadarSeries, Tooltip } from '@syncfusion/ej2-react-charts';\r\nimport { PropertyPane } from './property-pane';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { Browser } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nexport let data1 = [\r\n    //{text: 'China', \t  x: 'CHN', \t  \ty: 1246.3, y1: 1341, y2: 448.3},\r\n    //{text: 'India', \t\tx: 'IND', \t\ty: 893.3, y1: 1237, y2: 41.95},\r\n    { text: 'Japan', x: 'JPN', y: 137.9, y1: 127.6, y2: 108.8 },\r\n    //{text: 'USA', \t\t\tx: 'USA', \t\t\ty: 345.2, y1: 313.9, y2: 287.4},\r\n    { text: 'Indonesia', x: 'Indonesia', y: 85.0, y1: 246.9, y2: 45.5 },\r\n    //{text: 'Brazil', \t\tx: 'IDN', \t\ty: 272.6, y1: 137.2, y2: 110.2 },\r\n    { text: 'Russia', x: 'RUS', y: 237.1, y1: 143.5, y2: 41.2 },\r\n    { text: 'Vietnam', x: 'VNM', y: 127.7, y1: 88.8, y2: 18.0 },\r\n    { text: 'Pakistan', x: 'PAK', y: 126.1, y1: 179.2, y2: null },\r\n    { text: 'Nigeria', x: 'NGA', y: 175.0, y1: 168.8, y2: 12.7 },\r\n    { text: 'Germany', x: 'DEU', y: 113.6, y1: 81.9, y2: 46.0 },\r\n    { text: 'Bangladesh', x: 'BGS', y: 116.0, y1: 154.7, y2: 34.6 },\r\n    { text: 'Philippines', x: 'PHL', y: 109.5, y1: 96.7, y2: 16.6 },\r\n    { text: 'Mexico', x: 'MEX', y: 102.7, y1: 120.8, y2: 19.8 }\r\n];\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n\t}`;\r\nexport class PolarColumn extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.droplist = [\r\n            { value: 'Polar' },\r\n            { value: 'Radar' }\r\n        ];\r\n    }\r\n    change() {\r\n        this.chartInstance.series[0].type = this.dropElement.value;\r\n        this.chartInstance.series[1].type = this.dropElement.value;\r\n        this.chartInstance.series[2].type = this.dropElement.value;\r\n        this.chartInstance.refresh();\r\n    }\r\n    ;\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section row'>\r\n                    <div className='col-md-8'>\r\n                        <ChartComponent id='charts' ref={chart => this.chartInstance = chart} primaryXAxis={{\r\n            valueType: 'Category',\r\n            labelPlacement: 'OnTicks',\r\n            coefficient: Browser.isDevice ? 80 : 100,\r\n            interval: 1\r\n        }} primaryYAxis={{\r\n            labelFormat: '{value}M'\r\n        }} load={this.load.bind(this)} title=\"Top 10 Mobile Markets by Number of Subscriptions\" loaded={this.onChartLoad.bind(this)} tooltip={{ enable: true, format: '${point.text} : <b>${point.y}%</b>' }}>\r\n                            <Inject services={[Legend, Category, PolarSeries, RadarSeries, Tooltip]}/>\r\n                            <SeriesCollectionDirective>\r\n                                <SeriesDirective dataSource={data1} xName='x' yName='y' name='Mobile Subscriptions' type='Polar' drawType='Column' border={{ color: 'white', width: 1 }} marker={{ dataLabel: { name: 'text' } }}>\r\n                                </SeriesDirective>\r\n                                <SeriesDirective dataSource={data1} xName='x' yName='y1' name='Population in Millions' type='Polar' drawType='Column' border={{ color: 'white', width: 1 }} marker={{ dataLabel: { name: 'text' } }}>\r\n                                </SeriesDirective>\r\n                                <SeriesDirective dataSource={data1} xName='x' yName='y2' name='3G/4G Subscriptions' type='Polar' drawType='Column' border={{ color: 'white', width: 1 }} marker={{ dataLabel: { name: 'text' } }}>\r\n                                </SeriesDirective>\r\n                            </SeriesCollectionDirective>\r\n                        </ChartComponent>\r\n                    </div>\r\n                    <div className='col-md-4 property-section'>\r\n                        <PropertyPane title='Properties'>\r\n                            <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '60%' }}>\r\n                                        <div>Series Type:</div>\r\n                                    </td>\r\n                                    <td style={{ width: '40%' }}>\r\n                                        <div>\r\n                                            <DropDownListComponent width={120} id=\"selmode\" change={this.change.bind(this)} ref={d => this.dropElement = d} dataSource={this.droplist} fields={{ text: 'value', value: 'value' }} value=\"Polar\"/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    onChartLoad(args) {\r\n        document.getElementById('charts').setAttribute('title', '');\r\n    }\r\n    ;\r\n}\r\n\nrender(<PolarColumn />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}