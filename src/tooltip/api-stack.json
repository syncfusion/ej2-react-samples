{"index.css":".userselect {\r\n  -webkit-user-select: none;\r\n  /* Safari 3.1+ */\r\n  -moz-user-select: none;\r\n  /* Firefox 2+ */\r\n  -ms-user-select: none;\r\n  /* IE 10+ */\r\n  user-select: none;\r\n  /* Standard syntax */\r\n}\r\n\r\n#property {\r\n  padding-top: 200px;\r\n}\r\n\r\n#defaultTooltip {\r\n  width: 130px;\r\n  margin: 100px auto;\r\n}\r\n\r\n#value {\r\n  height: 34px;\r\n  width: 136px;\r\n  padding-left: 10px;\r\n}\r\n\r\n.highcontrast #value {\r\n  border: 1px solid;\r\n  border-width: 1px;\r\n  color: #fff;\r\n  background: #000;\r\n}\r\n","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Loading API sample\r\n */\r\nimport { ButtonComponent, CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\r\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\r\nimport { NumericTextBoxComponent } from \"@syncfusion/ej2-react-inputs\";\r\nimport { TooltipComponent } from \"@syncfusion/ej2-react-popups\";\r\nimport * as React from \"react\";\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class ApiTooltip extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.data = [\"Click\", \"Hover\", \"Auto\"];\r\n    }\r\n    onClick(args) {\r\n        if (!args.target.classList.contains(\"e-control\") && !args.target.classList.contains(\"e-btn\")) {\r\n            if (!this.tooltip.isSticky && document.getElementsByClassName(\"e-tooltip-wrap\").length > 0) {\r\n                this.tooltip.close();\r\n            }\r\n        }\r\n    }\r\n    onScroll() {\r\n        if (document.getElementsByClassName(\"e-tooltip-wrap\").length > 0) {\r\n            this.tooltip.close();\r\n        }\r\n    }\r\n    created() {\r\n        if (document.getElementById(\"right-pane\")) {\r\n            document.getElementById(\"right-pane\").addEventListener(\"click\", this.onClick.bind(this));\r\n            document.getElementById(\"right-pane\").addEventListener(\"scroll\", this.onScroll.bind(this));\r\n        }\r\n    }\r\n    onModeChange(args) {\r\n        this.tooltip.close();\r\n        this.tooltip.opensOn = args.value;\r\n    }\r\n    onHeightChange(args) {\r\n        this.tooltip.close();\r\n        this.tooltip.height = args.value;\r\n        this.tooltip.refresh(this.tooltip.element);\r\n    }\r\n    onWidthChange(args) {\r\n        this.tooltip.close();\r\n        this.tooltip.width = args.value;\r\n        this.tooltip.refresh(this.tooltip.element);\r\n    }\r\n    handleKeyPress(args) {\r\n        this.tooltip.close();\r\n        this.tooltip.content = args.currentTarget.value;\r\n    }\r\n    checkboxChange(args) {\r\n        this.tooltip.close();\r\n        this.tooltip.isSticky = args.checked;\r\n    }\r\n    render() {\r\n        return (<div className=\"control-pane\">\r\n                <div className=\"control-section\">\r\n                    <div className=\"col-lg-8 control-section\">\r\n                        <TooltipComponent created={this.created.bind(this)} id=\"defaultTooltip\" ref={t => (this.tooltip = t)} opensOn=\"Click\" content=\"Tooltip content\">\r\n                            <ButtonComponent>Show Tooltip</ButtonComponent>\r\n                        </TooltipComponent>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-4 property-section\">\r\n                        <PropertyPane title=\"Properties\">\r\n                            <table id=\"property\" title=\"Properties\">\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\">Content</div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                            <div>\r\n                                                <input id=\"value\" ref={t => (this.text = t)} onKeyUp={this.handleKeyPress.bind(this)} type=\"text\" className=\"e-input\" placeholder=\"Tooltip content\"/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\">Height</div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                            <div>\r\n                                                <NumericTextBoxComponent id=\"height\" ref={t => (this.height = t)} value={45} change={this.onHeightChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\">Width</div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                            <div>\r\n                                                <NumericTextBoxComponent id=\"width\" ref={t => (this.width = t)} className=\"e-input\" value={100} change={this.onWidthChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\">Open Mode</div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                            <div>\r\n                                                <DropDownListComponent dataSource={this.data} ref={t => (this.ddl = t)} placeholder=\"Select mode\" change={this.onModeChange.bind(this)} id=\"ddlelement\"/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\">Sticky Mode</div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                            <div>\r\n                                                <CheckBoxComponent id=\"sticky\" ref={t => (this.sticky = t)} change={this.checkboxChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<ApiTooltip />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}