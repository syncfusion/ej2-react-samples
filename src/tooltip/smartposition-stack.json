{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Tooltip smart position sample\r\n */\r\nimport * as React from 'react';\r\nimport { TooltipComponent } from '@syncfusion/ej2-react-popups';\r\nimport { Draggable } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nconst SAMPLE_CSS = `\r\n#targetContainer {\r\n    border: 1px solid #dddddd;\r\n    margin: 15px;\r\n    min-height: 350px;\r\n}\r\n#demoSmart {\r\n    background-image: url('////npmci.syncfusion.com/development/react/demos/src/tooltip/images/smartposition.png');\r\n    background-size: 100px 100px;\r\n    height: 100px;\r\n    position: absolute;\r\n    left: calc( 50% - 50px);\r\n    top: calc( 50% - 50px);\r\n    width: 100px;\r\n}`;\r\nexport class DraggableTooltip extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        //Set tooltip animation\r\n        this.tooltipAnimation = {\r\n            open: { effect: 'None' },\r\n            close: { effect: 'None' }\r\n        };\r\n    }\r\n    rendereComplete() {\r\n        //Handle tooltip smart positioning.\r\n        let ele = document.getElementById('demoSmart');\r\n        let drag = new Draggable(ele, {\r\n            clone: false,\r\n            dragArea: '#targetContainer',\r\n            drag: (args) => {\r\n                if (args.element.getAttribute('data-tooltip-id') === null) {\r\n                    this.tooltipInstance.open(args.element);\r\n                }\r\n                else {\r\n                    this.tooltipInstance.refresh(args.element);\r\n                }\r\n            },\r\n            dragStart: (args) => {\r\n                if (args.element.getAttribute('data-tooltip-id') === null) {\r\n                    this.tooltipInstance.open(args.element);\r\n                }\r\n            },\r\n            dragStop: (args) => {\r\n                this.tooltipInstance.close();\r\n            }\r\n        });\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n\r\n                    \r\n                    <TooltipComponent id='targetContainer' ref={t => this.tooltipInstance = t} content='Drag me anywhere, to start walking with me !!!' offsetX={-15} target='#demoSmart' animation={this.tooltipAnimation}>\r\n                        <div id='demoSmart'></div>\r\n                    </TooltipComponent>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<DraggableTooltip />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}