{"index.css":".tab-control-section  .e-content .e-item {\r\n    font-size: 12px;\r\n    padding: 10px;\r\n    text-align: justify;\r\n}\r\n.tab-control-section  .e-headertext {\r\n    font-weight: 500;\r\n}\r\n.e-bigger .tab-control-section .e-tab .e-list-item {\r\n    border-bottom: 1px solid gainsboro;\r\n}\r\n.tab-control-section  .e-tab .e-list-item {\r\n    height: 63px;\r\n    border-bottom: 1px solid gainsboro;\r\n}\r\n.tab-control-section  .e-tab .e-list-item:last-child {\r\n    border-bottom: 1px solid gainsboro;\r\n}\r\n.e-bigger .tab-control-section  .e-tab .e-list-item {\r\n    height: 63px;\r\n}\r\n.tab-control-section .template-container {\r\n    height: 100%;\r\n    padding-top: 7px;\r\n}\r\n.tab-control-section .left {\r\n    display: inline-block;\r\n    vertical-align: top;\r\n}\r\n.tab-control-section .empImg {\r\n    height: 48px;\r\n    width: 48px;\r\n}\r\n.tab-control-section .name, .role {\r\n    line-height: normal;\r\n}\r\n.tab-control-section .name {\r\n    font-weight: 500;\r\n}\r\n.tab-control-section .role {\r\n    color: grey;\r\n    font-weight: 100;\r\n}\r\n.tab-control-section .info-div {\r\n    padding: 7px 0 0 15px;\r\n}\r\n.tab-control-section .content-title {\r\n    height: 50px;\r\n    display: table;\r\n    margin: 0 auto;\r\n}\r\n.tab-control-section .cnt-text {\r\n    vertical-align: middle;\r\n    display: table-cell;\r\n    font-size: 18px;\r\n    font-weight: 600;\r\n}\r\n.tab-control-section .e-tab .e-listview .e-text {\r\n    display: block;\r\n    text-align: center;\r\n}\r\n\r\n/* custom code start*/\r\n.tab-control-section .property-panel-content {\r\n    padding: 10px;\r\n}\r\n@media only screen and (min-width: 1824px) {\r\n    .tab-control-section .col-lg-8.adaptive {\r\n        width: 40%;\r\n    }\r\n    .e-bigger .tab-control-section .col-lg-8.adaptive {\r\n        width: 45%;\r\n    }\r\n}\r\n\r\n/* custom code end*/\r\n\r\n#amount {\r\n    text-align: right;\r\n    font-size: 15px;\r\n    padding: 15px 0px;\r\n}\r\n\r\n#passenger-table th {\r\n    text-align: center;\r\n    font-size: 14px;\r\n    font-weight: 400;\r\n    border: 1px solid gainsboro;\r\n}\r\n\r\n#passenger-table td,\r\n#passenger-table th {\r\n    padding: 10px;\r\n}\r\n\r\n#passenger-table td {\r\n    border: 1px solid gainsboro;\r\n}\r\n\r\n.name-header {\r\n    width: 200px;\r\n}\r\n\r\n.age-header {\r\n    width: 80px;\r\n}\r\n\r\n.gender-header {\r\n    width: 120px;\r\n}\r\n\r\n.type-header {\r\n    width: 150px;\r\n}\r\n\r\n.btn-container {\r\n    text-align: center;\r\n}\r\n\r\n.search-item {\r\n    padding-right: 50px;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n.item-title {\r\n    font-weight: 500;\r\n    padding-top: 10px;\r\n}\r\n\r\n@media (max-width: 450px) {\r\n    .e-sample-resize-container {\r\n        height: 450px;\r\n    }\r\n    .responsive-align {\r\n        width: 75%;\r\n        margin: 0 auto;\r\n    }\r\n    .search-item {\r\n        padding: 0 0 20px 0;\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n#err1,\r\n#err2,\r\n#err3 {\r\n    font-weight: bold;\r\n    color: red;\r\n    display: block;\r\n    margin-top: 15px;\r\n}\r\n\r\n.wizard-title {\r\n    font-size: 15px;\r\n}\r\n\r\n#PassengersList {\r\n    overflow: auto;\r\n}\r\n#passenger-table {\r\n    min-width: 500px;\r\n    width: 100%;\r\n}\r\n.tab-control-section .e-listview:not(.e-list-template) .e-list-item {\r\n    height: 63px;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { PropertyPane } from './property-pane';\r\nimport { TabComponent, TabItemDirective, TabItemsDirective } from '@syncfusion/ej2-react-navigations';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { ListViewComponent } from '@syncfusion/ej2-react-lists';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class Orientation extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        // Mapping ListView component dataSource property\r\n        this.romeEmployees = [\r\n            { id: '1', name: 'Anne Dodsworth', role: 'Product Manager' },\r\n            { id: '2', name: 'Laura Callahan', role: 'Team Lead' },\r\n            { id: '3', name: 'Andrew Fuller', role: 'Developer' }\r\n        ];\r\n        // Mapping ListView component dataSource property\r\n        this.parisEmployees = [\r\n            { id: '4', name: 'Robert King', role: 'Team Lead' },\r\n            { id: '5', name: 'Michael Suyama', role: 'Developer' },\r\n            { id: '6', name: 'Margaret Peacock', role: 'Developer' }\r\n        ];\r\n        // Mapping ListView component dataSource property\r\n        this.londonEmployees = [\r\n            { id: '7', name: 'Janet Leverling', role: 'CEO' },\r\n            { id: '8', name: 'Steven Buchanan', role: 'HR' },\r\n            { id: '9', name: 'Nancy Davolio', role: 'Product Manager' }\r\n        ];\r\n        // Mapping DropDownList dataSource property\r\n        this.oData = [\r\n            { 'value': 'top', 'text': 'Top' }, { 'value': 'bottom', 'text': 'Bottom' },\r\n            { 'value': 'left', 'text': 'Left' }, { 'value': 'right', 'text': 'Right' }\r\n        ];\r\n        // Mapping DropDownList fields property\r\n        this.fields = { text: 'text', value: 'value' };\r\n        //Map the appropriate columns to fields property\r\n        this.listfields = { text: 'name', id: 'id' };\r\n        // Mapping DropDownList value property\r\n        this.orientVal = 'top';\r\n        // Mapping DropDownList dataSource property\r\n        this.hData = [\r\n            { 'value': 'default', 'text': 'Default' }, { 'value': 'fill', 'text': 'Fill' }, { 'value': 'accent', 'text': 'Accent' }\r\n        ];\r\n        // Mapping DropDownList value property\r\n        this.hdrVal = 'default';\r\n    }\r\n    // Change event funtion for DropDownList component   \r\n    changeOrientationMode(e) {\r\n        let placement = document.getElementById('orientation').value;\r\n        this.tabObj.headerPlacement = placement;\r\n        this.tabObj.dataBind();\r\n    }\r\n    // Change event funtion for DropDownList component   \r\n    changeHeaderStyles(e) {\r\n        this.removeStyleClass();\r\n        let name = document.getElementById('headerStyles').value;\r\n        if (name === 'Fill') {\r\n            this.tabObj.element.classList.add('e-fill');\r\n        }\r\n        else if (name === 'Accent') {\r\n            this.tabObj.element.classList.add('e-background');\r\n            this.tabObj.element.classList.add('e-accent');\r\n        }\r\n    }\r\n    removeStyleClass() {\r\n        this.tabObj.element.classList.remove('e-fill');\r\n        this.tabObj.element.classList.remove('e-background');\r\n        this.tabObj.element.classList.remove('e-accent');\r\n    }\r\n    templateString(data) {\r\n        return (<div className=\"template-container\">\r\n                <div className=\"left\"><img className='empImg' src={`////npmci.syncfusion.com/development/react/demos/src/tab/Employees/${data.id}.png`} alt='${data.id}'/>\r\n                 <div className=\"left info-div\">\r\n                  <div className=\"name\"> {data.name}</div>\r\n                  <div className=\"role\"> {data.role}</div>                   \r\n                 </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    render() {\r\n        function template1() {\r\n            return (<ListViewComponent id=\"rome\" dataSource={this.romeEmployees} template={this.templateString}>\r\n                </ListViewComponent>);\r\n        }\r\n        function template2() {\r\n            return (<ListViewComponent id=\"paris\" dataSource={this.parisEmployees} template={this.templateString}>\r\n                </ListViewComponent>);\r\n        }\r\n        function template3() {\r\n            return (<ListViewComponent id=\"london\" dataSource={this.londonEmployees} template={this.templateString}>\r\n                </ListViewComponent>);\r\n        }\r\n        // Mapping Tab items Header property\r\n        let headertext;\r\n        headertext = [{ text: \"Rome\" }, { text: \"Paris\" }, { text: \"London\" }];\r\n        return (<div className='control-pane'>\r\n                <div className='control-section tab-control-section row'>\r\n                    <div className='col-lg-8'>\r\n                                       \r\n                        <TabComponent ref={(tab) => { this.tabObj = tab; }} showCloseButton={true} heightAdjustMode='None' height={320}>\r\n                        <TabItemsDirective>\r\n                        <TabItemDirective header={headertext[0]} content={template1.bind(this)}/>\r\n                        <TabItemDirective header={headertext[1]} content={template2.bind(this)}/>\r\n                        <TabItemDirective header={headertext[2]} content={template3.bind(this)}/>\r\n                        </TabItemsDirective>\r\n                        </TabComponent>\r\n                    </div>\r\n                    <div className='col-lg-4 property-section'>\r\n                        <PropertyPane title='Properties'>\r\n                            <table id='property' title='Properties' className='property-panel-table'>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style={{ width: '50%' }}>\r\n                                            <div>Header Placement</div>\r\n                                        </td>\r\n                                        <td style={{ width: '50%' }}>\r\n                                            <div>\r\n                                                \r\n                                                <DropDownListComponent id='orientation' dataSource={this.oData} fields={this.fields} value={this.orientVal} width={'90%'} change={this.changeOrientationMode.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: '50%' }}>\r\n                                            <div>Header Styles</div>\r\n                                        </td>\r\n                                        <td style={{ width: '50%' }}>\r\n                                            <div>\r\n                                                \r\n                                                <DropDownListComponent id='headerStyles' dataSource={this.hData} fields={this.fields} value={this.hdrVal} width={'90%'} change={this.changeHeaderStyles.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Orientation />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}