{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { FormValidator } from '@syncfusion/ej2-inputs';\r\nexport class Default extends SampleBase {\r\n    rendereComplete() {\r\n        // Initialize the custom function\r\n        let customFunction = (args) => {\r\n            return args.value.length <= 5;\r\n        };\r\n        this.formValidator = {\r\n            // Defines the validation rules\r\n            rules: {\r\n                Required: { required: true },\r\n                Email: { required: true, email: true },\r\n                Url: { required: true, url: true },\r\n                Date: { required: true, date: true },\r\n                DateISO: { required: true, dateIso: true },\r\n                Number: { required: true, number: true },\r\n                Digits: { required: true, digits: true },\r\n                MaxLength: { required: true, maxLength: 5 },\r\n                MinLength: { required: true, minLength: 5 },\r\n                RangeLength: { required: true, rangeLength: [5, 10] },\r\n                Range: { required: true, range: [5, 10] },\r\n                Max: { required: true, max: 5 },\r\n                Min: { required: true, min: 5 },\r\n                Regex: { required: true, regex: ['^[A-z]+$', 'Allowed only alphabets'] },\r\n                Custom: { required: true, custom: [customFunction, 'Allowed char length is 5'] }\r\n            },\r\n            // Initialize the custom placement\r\n            customPlacement: (inputElement, errorElement) => {\r\n                inputElement.parentElement.appendChild(errorElement);\r\n            },\r\n        };\r\n        // Initialize the form-validator\r\n        let formObj;\r\n        formObj = new FormValidator('#htmlFormId', this.formValidator);\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div className='col-lg-12 control-section'>\r\n          <div className='content-wrapper' style={{ marginBottom: '25px' }}>\r\n            <form id='htmlFormId' className='htmlForm-horizontal'>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='required' name='Required' required data-msg-containerid='requiredError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='required'>Required</label>\r\n                </div>\r\n                <div id='requiredError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='email' name='Email' required data-msg-containerid='emailError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='email'>Email</label>\r\n                </div>\r\n                <div id='emailError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='url' name='Url' required data-msg-containerid='urlError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='url'>URL</label>\r\n                </div>\r\n                <div id='urlError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='date' name='Date' required data-msg-containerid='dateError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='date'>Date</label>\r\n                </div>\r\n                <div id='dateError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='dateIso' name='DateISO' required data-msg-containerid='dateisoError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='dateIso'>Date ISO (YYYY-MM-DD)</label>\r\n                </div>\r\n                <div id='dateisoError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='number' name='Number' required data-msg-containerid='numberError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='number'>Integer or Decimal</label>\r\n                </div>\r\n                <div id='numberError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='digits' name='Digits' required data-msg-containerid='digitError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='digits'>Positive Integer</label>\r\n                </div>\r\n                <div id='digitError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='maxlen' name='MaxLength' required data-msg-containerid='maxlenError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='maxlen'>Maximum 5 characters</label>\r\n                </div>\r\n                <div id='maxlenError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='minlen' name='MinLength' required data-msg-containerid='minlenError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='minlen'>Minimum 5 characters</label>\r\n                </div>\r\n                <div id='minlenError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='rangelen' name='RangeLength' required data-msg-containerid='rangelenError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='rangelen'>Characters length between 5 to 10</label>\r\n                </div>\r\n                <div id='rangelenError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='range' name='Range' required data-msg-containerid='rangeError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='range'>Value between 5 to 10</label>\r\n                </div>\r\n                <div id='rangeError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='max' name='Max' required data-msg-containerid='maxError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='max'>Max (maximum value 5)</label>\r\n                </div>\r\n                <div id='maxError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='min' name='Min' required data-msg-containerid='minError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='min'>Min (minimum value 5)</label>\r\n                </div>\r\n                <div id='minError'></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='regex' name='Regex' required data-msg-containerid='regexError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='regex'>Regex (accepts alphabets only)</label>\r\n                </div>\r\n                <div id=\"regexError\"></div>\r\n              </div>\r\n              <div className='form-group'>\r\n                <div className='e-float-input'>\r\n                  <input type='text' id='custom' name='Custom' required data-msg-containerid='customError'/>\r\n                  <span className='e-float-line'></span>\r\n                  <label className='e-float-text' htmlFor='custom'>Custom Function (maximum 5 characters)</label>\r\n                </div>\r\n                <div id='customError'></div>\r\n              </div>\r\n              <div className='row'>\r\n                <div style={{ float: 'left', margin: '0 10% 0 30%' }}>\r\n                  <button id='validateSubmit' className='e-btn' style={{ height: '35px' }} type='submit'>Submit</button>\r\n                </div>\r\n                <div>\r\n                  <button id='resetbtn' className='e-btn' style={{ height: '35px' }} type='reset'>Reset</button>\r\n                </div>\r\n              </div>\r\n            </form>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<Default />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}