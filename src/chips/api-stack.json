{"index.css":"#chip-api-wrapper .janet {\r\n    background-image: url('////npmci.syncfusion.com/development/react/demos/src/chips/images/janet.png');\r\n}\r\n\r\n#chips-api-property .property-panel-section .property-panel-content table#property tr {\r\n    height: 50px;\r\n}\r\n\r\n#chip-api-wrapper {\r\n    display: flex;\r\n    justify-content: center;\r\n    align-items: center;\r\n    margin-top: 100px;\r\n}\r\n\r\n#chip .e-chip-avatar.e-icon {\r\n    font-family: 'e-user-icon';\r\n}\r\n\r\n#chip .e-chip-avatar.e-icon:before {\r\n    content: \"\\e700\";\r\n}\r\n\r\n@font-face {\r\n    font-family: 'e-user-icon';\r\n    src: url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj0gSRgAAAEoAAAAVmNtYXDnEOdaAAABjAAAADhnbHlmiAnWagAAAcwAAADwaGVhZBD04psAAADQAAAANmhoZWEHiwNuAAAArAAAACRobXR4C9AAAAAAAYAAAAAMbG9jYQAwAHgAAAHEAAAACG1heHABDwA1AAABCAAAACBuYW1lby+ImAAAArwAAAIxcG9zdGUbI4AAAATwAAAAOwABAAADUv9qAFoEAAAAAAAD3QABAAAAAAAAAAAAAAAAAAAAAwABAAAAAQAAWW9ja18PPPUACwPoAAAAANb8zuYAAAAA1vzO5gAAAAAD3QPqAAAACAACAAAAAAAAAAEAAAADACkAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQPwAZAABQAAAnoCvAAAAIwCegK8AAAB4AAxAQIAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAQNS/2oAWgPqAJYAAAABAAAAAAAABAAAAAPoAAAD6AAAAAAAAgAAAAMAAAAUAAMAAQAAABQABAAkAAAABAAEAAEAAOcB//8AAOcA//8AAAABAAQAAAABAAIAAAAAADAAeAACAAAAAAO+A+oADQAZAAA3FBYXIT4BNS4BJyEOARMeARc+ATcuAScOAS4YFwMzFxgDq4H+zYGr4QOCY2KCAwOCYmGCnCtOISFOK3qiAwOiAe1igwICg2JjggICggAAAAACAAAAAAPdA+oAFAAoAAABDgEHIicjDgEHLgEnLgEnPgE3HgEFFBYfARYfATcXFhc2JDcmJCcGBAOkBfK3KioXEFcpBBEMRUsBBfK3tvL8cVRLDggBBsQKLDDPARMFBf7tz87+7QI+ndEEBwI/Izh2DS+RVZ3RBATRnWCmN3BIETecAgcBBPK1tfIEBPIAAAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBDb250YWN0c1JlZ3VsYXJDb250YWN0c0NvbnRhY3RzVmVyc2lvbiAxLjBDb250YWN0c0ZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAQwBvAG4AdABhAGMAdABzAFIAZQBnAHUAbABhAHIAQwBvAG4AdABhAGMAdABzAEMAbwBuAHQAYQBjAHQAcwBWAGUAcgBzAGkAbwBuACAAMQAuADAAQwBvAG4AdABhAGMAdABzAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMBAgEDAQQABHVzZXIKY2hhdC0wMS13ZgAAAA==) format('truetype');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","data.json":"{\r\n  \"ddlData\": [{\r\n      \"id\": \"1\",\r\n      \"text\": \"Default\"\r\n    },\r\n    {\r\n      \"id\": \"2\",\r\n      \"text\": \"Primary\"\r\n    },\r\n    {\r\n      \"id\": \"3\",\r\n      \"text\": \"Success\"\r\n    },\r\n    {\r\n      \"id\": \"4\",\r\n      \"text\": \"Danger\"\r\n    },\r\n    {\r\n      \"id\": \"5\",\r\n      \"text\": \"Warning\"\r\n    },\r\n    {\r\n      \"id\": \"6\",\r\n      \"text\": \"Info\"\r\n    }\r\n  ],\r\n  \"avatarData\": [{\r\n      \"id\": \"1\",\r\n      \"text\": \"None\"\r\n    },\r\n    {\r\n      \"id\": \"2\",\r\n      \"text\": \"Icon\"\r\n    },\r\n    {\r\n      \"id\": \"3\",\r\n      \"text\": \"Image\"\r\n    },\r\n    {\r\n      \"id\": \"4\",\r\n      \"text\": \"Letter\"\r\n    }\r\n  ]\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport { CheckBoxComponent, ChipListComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\n\r\nimport * as data from './data.json';\r\nimport { PropertyPane } from './property-pane';\r\nexport class Api extends SampleBase {\r\n    constructor() {\r\n        super();\r\n        this.data = data;\r\n        this.colorCss = '';\r\n        this.outlineCss = '';\r\n        this.state = {\r\n            cssClass: '',\r\n            avatarIconCss: '',\r\n            avatarText: '',\r\n            trailingIconCss: '',\r\n            leadingIconCss: ''\r\n        };\r\n    }\r\n    // checkbox change handler for chip leading icon\r\n    iconHandler(e) {\r\n        this.setState({ leadingIconCss: e.checked ? 'janet' : '' });\r\n    }\r\n    // drop-down list change handler for chip color\r\n    colorChange(e) {\r\n        this.setState({ cssClass: `e-${e.value.toLowerCase()} ${this.outlineCss.trim()}` });\r\n        this.colorCss = `e-${e.value.toLowerCase()}`;\r\n    }\r\n    // checkbox change handler for chip outline\r\n    variantHandler(e) {\r\n        this.outlineCss = e.checked ? 'e-outline' : '';\r\n        this.setState({ cssClass: `${this.colorCss} ${this.outlineCss}`.trim() });\r\n    }\r\n    // drop-down list change handler for chip avatar\r\n    avatarHandler(e) {\r\n        this.setState({ avatarIconCss: (e.value.toLowerCase() === 'icon') ? 'e-icon' : (e.value.toLowerCase() === 'image') ? 'janet' : '', avatarText: (e.value.toLowerCase() === 'letter' ? 'JL' : '') });\r\n    }\r\n    // checkbox change handler for chip trailing icon\r\n    deleteIconHandler(e) {\r\n        this.setState({ trailingIconCss: e.checked ? 'e-dlt-btn' : '' });\r\n    }\r\n    render() {\r\n        return (<div>\r\n                <div className=\"col-lg-8 control-section\">\r\n                    <div id=\"chip-api-wrapper\">\r\n                        \r\n                        <ChipListComponent id=\"chip\" text=\"Janet Leverling\" cssClass={this.state.cssClass} avatarIconCss={this.state.avatarIconCss} trailingIconCss={this.state.trailingIconCss} avatarText={this.state.avatarText} leadingIconCss={this.state.leadingIconCss}>\r\n                        </ChipListComponent>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 property-section\" id=\"chips-api-property\">\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\">\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Color</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", \"paddingRight\": \"10px\" }}>\r\n                                        <div>\r\n                                            \r\n                                            <DropDownListComponent id=\"chip-color\" dataSource={this.data.ddlData} placeholder=\"Select a color\" change={this.colorChange.bind(this)}></DropDownListComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Leading icon</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                            \r\n                                            <CheckBoxComponent id=\"chip-leadingicon\" change={this.iconHandler.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Avatar</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div>\r\n                                            \r\n                                            <DropDownListComponent id=\"chip-avatar\" dataSource={this.data.avatarData} placeholder=\"Select an avatar\" change={this.avatarHandler.bind(this)}></DropDownListComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Trailing icon</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                            \r\n                                            <CheckBoxComponent id=\"chip-trailingicon\" change={this.deleteIconHandler.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: \"50%\" }}>\r\n                                        <div className=\"userselect\">Outline</div>\r\n                                    </td>\r\n                                    <td style={{ width: \"50%\", paddingRight: \"10px\" }}>\r\n                                        <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                            \r\n                                            <CheckBoxComponent id=\"chip-outline\" change={this.variantHandler.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Api />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}