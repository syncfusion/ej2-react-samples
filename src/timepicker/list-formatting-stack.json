{"index.css":".timepicker-control-section {\r\n    max-width: 300px;\r\n    margin: 0 auto;\r\n    padding: 2% 0;\r\n}\r\n\r\n.control-pane.default .control-section\r\n{\r\n    height: 100%;\r\n}\r\n\r\n.e-bigger .control-pane.default .control-section {\r\n    margin-top: 60px;\r\n}\r\n\r\n/*list formatting samples styles*/\r\n\r\n.e-timepicker.e-popup li span {\r\n    color: #b7b1b1;\r\n}\r\n\r\n.e-custom-style.e-timepicker.e-popup li.e-disabled span {\r\n    height: 25px;\r\n    width: 25px;\r\n    font-size: 15px;\r\n}\r\n\r\n/*list formatting samples styles*/\r\n\r\n.e-custom-style.e-timepicker.e-popup li.e-disabled span {\r\n    color: #b7b1b1;\r\n}\r\n\r\n.e-custom-style.e-timepicker.e-popup li span {\r\n    color: #727070;\r\n}\r\n\r\nbody.bootstrap4 .e-custom-style.e-timepicker.e-popup li span {\r\n    color: #6c757d;\r\n}\r\n\r\nbody.bootstrap4 .e-custom-style.e-timepicker.e-popup li.e-disabled span {\r\n    color: #adb5bd;\r\n}\r\n\r\n\r\n.highcontrast .e-custom-style.e-timepicker.e-popup li.e-hover span:hover,\r\n.highcontrast .e-custom-style.e-timepicker.e-popup li.e-active.e-hover span {\r\n    color: #fff;\r\n}\r\nbody.bootstrap4 .e-custom-style.e-timepicker.e-popup li.e-hover span:hover,\r\nbody.bootstrap4 .e-custom-style.e-timepicker.e-popup li.e-active.e-hover span {\r\n    color: #6c757d;\r\n}\r\n\r\n.highcontrast .e-custom-style.e-timepicker.e-popup li.e-active span {\r\n    color: #000;\r\n}\r\n\r\nbody.bootstrap4 .e-custom-style.e-timepicker.e-popup li.e-active span {\r\n    color: #fff;\r\n}\r\n\r\n/* end of custom generated icons styles */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { TimePickerComponent } from '@syncfusion/ej2-react-calendars';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class Formatting extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.value = new Date();\r\n    }\r\n    // scrollTo value will be assigned only if the timepicker value is not null or undefined and is a valid value.\r\n    onOpen(args) {\r\n        if (this.timeObj.value && !isNaN(+this.timeObj.value))\r\n            //assign the current value as the scrollTo value\r\n            this.timeObj.scrollTo = this.timeObj.value;\r\n    }\r\n    //item render event handler\r\n    itemRenderHandler(args) {\r\n        // inner element declaration for text\r\n        let span = document.createElement('span');\r\n        if (args.value.getHours() === 0 && args.value.getMinutes() === 0 && args.value.getSeconds() === 0) {\r\n            //assign the initial value to the variable\r\n            this.startTime = args.value;\r\n        }\r\n        //get the minutes details\r\n        let minutes = (+args.value - +this.startTime) / 60000;\r\n        //get the hours details\r\n        let hours = parseInt('' + (minutes / 60), 10);\r\n        let mins = (minutes % 60) / 6;\r\n        //displayed text formation for each LI element.\r\n        let minText;\r\n        if (minutes === 0 || minutes === 30) {\r\n            minText = minutes + ' mins';\r\n        }\r\n        else {\r\n            minText = (mins > 0) ? ('.' + mins) : '';\r\n        }\r\n        span.innerHTML = ' (' + ((hours > 0) ? (hours + minText + ' hrs') : ('' + ' mins')) + ')';\r\n        //disable the specific time from the selection\r\n        if ((minutes / 60) % 3 === 0) {\r\n            //disable the time values by addeding the e-disabled class.\r\n            args.element.classList.add('e-disabled');\r\n        }\r\n        //append the custom SPAN element into LI element\r\n        args.element.appendChild(span);\r\n    }\r\n    render() {\r\n        return (<div className='control-pane default'>\r\n                <div className='control-section'>\r\n                    <div className='timepicker-control-section'>\r\n                        <TimePickerComponent cssClass='e-custom-style' value={this.value} ref={Timepicker => this.timeObj = Timepicker} open={this.onOpen.bind(this)} itemRender={this.itemRenderHandler.bind(this)}></TimePickerComponent>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Formatting />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}