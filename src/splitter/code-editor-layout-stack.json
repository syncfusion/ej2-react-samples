{"index.css":".code-editor #code-text {\n    margin-left: 5px;\n}\n.code-editor .code-preview {\n    margin-top: 15px;\n    font-size: 12px;\n}\n.code-editor {\n    margin: 20px auto;\n    max-width: 600px;\n}\n.code-editor.control-section{            \n    min-height: 370px;\n    margin-bottom: 15px;\n    margin-top: 10px;    \n}\n\n.code-editor .h3 {\n    font-size: 14px;\n    margin: 4px;\n}\n\n.code-editor .splitter-editor-content {\n    padding: 12px;\n}\n.code-editor .splitter-image {\n    margin: 0 auto;\n    display: flex;\n    height: 115px;\n    margin-top: 10px;\n}\n\n#codeEditor {\n    border: none;\n}\n\ndiv.e-pane-vertical > div:first-child {\n    height: 100%;\n}","index.html":"<!DOCTYPE html>\n<html>\n<head>\n    <title>Syncfusion React Sample</title>\n    <meta charset=\"utf-8\" />\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\n    <meta name=\"author\" content=\"Syncfusion\" />\n    <link href=\"https://cdn.syncfusion.com/ej2/21.1.35/{{theme}}.css\" rel=\"stylesheet\">\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\n</head>\n\n<body class=\"{{theme}}\">\n    <div id='sample'>\n</body>\n</html>\n","index.js":"import { createRoot } from 'react-dom/client';\nimport './index.css';\nimport * as React from 'react';\nimport { SampleBase } from './sample-base';\nimport { SplitterComponent, PanesDirective, PaneDirective } from '@syncfusion/ej2-react-layouts';\n\n/**\n *  Sample for code editor layout\n */\nconst imgStyle = {\n    width: \"20%\",\n    margin: \"0 auto\"\n};\nconst paneImg = {\n    margin: \"auto auto 5px\"\n};\nconst lastPaneStyle = {\n    padding: \"auto auto 20px\"\n};\nexport class CodeEditor extends SampleBase {\n    splitterInstance;\n    innerSplitterInstance;\n    paneSize = \"53%\";\n    minimumSize = \"30%\";\n    bottomPaneContent() {\n        return (<div className=\"splitter-editor-content\">\n                <h3 className=\"h3\">Preview of sample</h3>\n                <div className=\"splitter-image\">\n                    <img className=\"img1\" src=\"https://ej2.syncfusion.com/demos/https://ej2.syncfusion.com/react/demos/src/listview/images/albert.png\" style={imgStyle}/>\n                </div>\n            </div>);\n    }\n    ;\n    firstPaneContent() {\n        return (<div className=\"splitter-editor-content\">\n                <h3 className=\"h3\">HTML</h3>\n                <div className=\"code-preview\">\n                    &lt;<span>!DOCTYPE html&gt;</span>\n                    <div>&lt;<span>html&gt;</span></div>\n                    <div>&lt;<span>body &gt;</span></div>\n                    &lt;<span>div</span> id=\"custom-image\"&gt;\n        <div style={paneImg}>&lt;<span>img</span> src=\"https://ej2.syncfusion.com/react/demos/src/albert.png\"&gt;</div>\n                    <div>&lt;<span>div</span>&gt;</div>\n                    <div>&lt;<span>/body&gt;</span></div>\n                    <div>&lt;<span>/html&gt;</span></div>\n                </div>\n            </div>);\n    }\n    ;\n    secondPaneContent() {\n        return (<div className=\"splitter-editor-content\">\n                <h3 className=\"h3\">CSS</h3>\n                <div className=\"code-preview\">\n                    <span>img &#123; </span>\n                    <div id=\"code-text\">margin:<span>0 auto;</span></div>\n                    <div id=\"code-text\">display:<span>flex;</span></div>\n                    <div id=\"code-text\">height:<span>70px;</span></div>\n                    <span> &#125; </span>\n                </div>\n            </div>);\n    }\n    ;\n    thirdPaneContent() {\n        return (<div className=\"splitter-editor-content\">\n            <h3 className=\"h3\">JavaScript</h3>\n                <div className=\"code-preview\">\n                    <span>var</span> image = document.getElementById(\"custom-image\");\n                    <div>image.addEventListener(\"click\", function() &#123; </div>\n                    <div style={lastPaneStyle}> Code block for click action </div>\n                    <span> &#125; </span>\n                </div>\n            </div>);\n    }\n    ;\n    innerSplitterElement() {\n        return (<SplitterComponent id=\"codeEditor\" ref={(splitter) => { this.innerSplitterInstance = splitter; }}>\n            <PanesDirective>\n                <PaneDirective size='29%' min='23%' content={this.firstPaneContent}/>\n                <PaneDirective size='20%' min='15%' content={this.secondPaneContent}/>\n                <PaneDirective size='35%' min='35%' content={this.thirdPaneContent}/>\n            </PanesDirective>\n            </SplitterComponent>);\n    }\n    ;\n    render() {\n        return (<div id=\"target\" className=\"control-section code-editor\">\n                <SplitterComponent id=\"splitter2\" height=\"400px\" orientation=\"Vertical\" ref={(splitter) => { this.splitterInstance = splitter; }}>\n                    <PanesDirective>\n                        <PaneDirective content={this.innerSplitterElement.bind(this)}>\n                        </PaneDirective>\n                        <PaneDirective size={this.paneSize} min={this.minimumSize} content={this.bottomPaneContent}>\n                        </PaneDirective>\n                    </PanesDirective>\n                </SplitterComponent>\n            </div>);\n    }\n}\n\nconst root = createRoot(document.getElementById('sample'));\nroot.render(<CodeEditor />);","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n                this.rendereComplete();\n            });\n        }\n    }\n    export function updateSampleSection(){}\n    ","dependencies":"{\"@syncfusion/ej2-base\":\"*\",\"@syncfusion/ej2-layouts\":\"*\",\"@syncfusion/ej2-react-base\":\"*\",\"@syncfusion/ej2-react-layouts\":\"*\"}"}