{"index.css":".code-editor #code-text {\r\n    margin-left: 5px;\r\n}\r\n.code-editor .code-preview {\r\n    margin-top: 15px;\r\n    font-size: 12px;\r\n}\r\n.code-editor {\r\n    margin: 20px auto;\r\n    max-width: 600px;\r\n}\r\n.code-editor.control-section{            \r\n    min-height: 370px;\r\n    margin-bottom: 15px;\r\n    margin-top: 10px;    \r\n}\r\n\r\n.code-editor .h3 {\r\n    font-size: 14px;\r\n    margin: 4px;\r\n}\r\n\r\n.code-editor .splitter-editor-content {\r\n    padding: 12px;\r\n}\r\n.code-editor .splitter-image {\r\n    margin: 0 auto;\r\n    display: flex;\r\n    height: 115px;\r\n    margin-top: 10px;\r\n}\r\n\r\n#codeEditor {\r\n    border: none;\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { SplitterComponent, PanesDirective, PaneDirective } from '@syncfusion/ej2-react-layouts';\r\n\r\n/**\r\n *  Sample for code editor layout\r\n */\r\nconst imgStyle = {\r\n    width: \"20%\",\r\n    margin: \"0 auto\"\r\n};\r\nconst paneImg = {\r\n    margin: \"auto auto 5px\"\r\n};\r\nconst lastPaneStyle = {\r\n    padding: \"auto auto 20px\"\r\n};\r\nexport class CodeEditor extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.paneSize = \"53%\";\r\n        this.minimumSize = \"30%\";\r\n    }\r\n    bottomPaneContent() {\r\n        return (<div className=\"splitter-editor-content\">\r\n                <h3 className=\"h3\">Preview of sample</h3>\r\n                <div className=\"splitter-image\">\r\n                    <img className=\"img1\" src=\"https://ej2.syncfusion.com/demos/////npmci.syncfusion.com/development/react/demos/src/listview/images/albert.png\" style={imgStyle}/>\r\n                </div>\r\n            </div>);\r\n    }\r\n    ;\r\n    firstPaneContent() {\r\n        return (<div className=\"splitter-editor-content\">\r\n                <h3 className=\"h3\">HTML</h3>\r\n                <div className=\"code-preview\">\r\n                    &lt;<span>!DOCTYPE html></span>\r\n                    <div>&lt;<span>html></span></div>\r\n                    <div>&lt;<span>body></span></div>\r\n                    &lt;<span>div</span> id=\"custom-image\">\r\n        <div style={paneImg}>&lt;<span>img</span> src=\"////npmci.syncfusion.com/development/react/demos/src/albert.png\"></div>\r\n                    <div>&lt;<span>div</span>&gt;</div>\r\n                    <div>&lt;<span>/body></span></div>\r\n                    <div>&lt;<span>/html></span></div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    ;\r\n    secondPaneContent() {\r\n        return (<div className=\"splitter-editor-content\">\r\n                <h3 className=\"h3\">CSS</h3>\r\n                <div className=\"code-preview\">\r\n                    <span>img &#123; </span>\r\n                    <div id=\"code-text\">margin:<span>0 auto;</span></div>\r\n                    <div id=\"code-text\">display:<span>flex;</span></div>\r\n                    <div id=\"code-text\">height:<span>70px;</span></div>\r\n                    <span> &#125; </span>\r\n                </div>\r\n            </div>);\r\n    }\r\n    ;\r\n    thirdPaneContent() {\r\n        return (<div className=\"splitter-editor-content\">\r\n            <h3 className=\"h3\">JavaScript</h3>\r\n            <div className=\"code-preview\">\r\n                <span>var</span> image = document.getElementById(\"custom-image\");\r\n                <div>image.addEventListener(\"click\", function() &#123; </div>\r\n                    <div style={lastPaneStyle}> // Code block for click action</div>\r\n        // Code block for click action</div>\r\n                <span> &#125; </span>\r\n            </div>\r\n            </div>);\r\n    }\r\n    ;\r\n    innerSplitterElement() {\r\n        return (<SplitterComponent id=\"codeEditor\" ref={(splitter) => { this.innerSplitterInstance = splitter; }}>\r\n            <PanesDirective>\r\n                <PaneDirective size='29%' min='23%' content={this.firstPaneContent}/>\r\n                <PaneDirective size='20%' min='15%' content={this.secondPaneContent}/>\r\n                <PaneDirective size='35%' min='35%' content={this.thirdPaneContent}/>\r\n            </PanesDirective>\r\n            </SplitterComponent>);\r\n    }\r\n    ;\r\n    render() {\r\n        return (<div id=\"target\" className=\"control-section code-editor\">\r\n                <SplitterComponent id=\"splitter2\" height=\"400px\" orientation=\"Vertical\" ref={(splitter) => { this.splitterInstance = splitter; }}>\r\n                    <PanesDirective>\r\n                        <PaneDirective content={this.innerSplitterElement.bind(this)}>\r\n                        </PaneDirective>\r\n                        <PaneDirective size={this.paneSize} min={this.minimumSize} content={this.bottomPaneContent}>\r\n                        </PaneDirective>\r\n                    </PanesDirective>\r\n                </SplitterComponent>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<CodeEditor />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}