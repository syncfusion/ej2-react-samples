{"index.css":".outlook-style #discard {\r\n    margin-left: 7px;\r\n}\r\n.outlook-style table {\r\n    width: 100%;\r\n}\r\n.outlook-style {\r\n    margin: 20px auto;\r\n    max-width: 820px;\r\n}\r\n.outlook-style td {\r\n    padding: 2px;\r\n}\r\n.outlook-style.control-section{            \r\n    min-height: 370px;  \r\n}\r\n.outlook-style .e-treeview .e-list-text {\r\n    width: 100%;\r\n}\r\n.outlook-style #groupedList-split.e-listview .e-list-group-item {\r\n    height: 0;\r\n}\r\n.outlook-style #splitter1 .settings.e-list-wrapper.e-list-multi-line.e-list-avatar {\r\n    padding: 15px;\r\n}\r\n.outlook-style #buttonSection {\r\n    padding: 7px;\r\n}\r\n.outlook-style #createpostholder {\r\n    padding-left: 3px;\r\n    padding-right: 4px;\r\n}\r\n\r\n#splitter-tree .e-text-content .countcontainer {\r\n    float: right;\r\n    margin-right: 10px;\r\n}\r\n\r\n#splitter-tree .treeviewdiv .textcontent {\r\n    display: inline-block;\r\n}\r\n\r\n#splitter-tree .treeviewdiv {\r\n    display: inline-block;\r\n    width: 100%;\r\n}\r\n\r\n#splitter1 #splitter-tree ul.e-list-parent.e-ul {\r\n\tpadding: 0 0 0 16px;\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { SplitterComponent, PanesDirective, PaneDirective } from '@syncfusion/ej2-react-layouts';\r\nimport { TreeViewComponent } from '@syncfusion/ej2-react-navigations';\r\nimport { ListViewComponent } from '@syncfusion/ej2-react-lists';\r\nimport { TextBoxComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { RichTextEditorComponent, Inject, Link, Image, HtmlEditor, Toolbar, QuickToolbar } from '@syncfusion/ej2-react-richtexteditor';\r\n\r\n/**\r\n *  Sample for outlook style using splitter\r\n */\r\nexport class OutlookLayout extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.dataSource = [\r\n            { Name: 'Selma Tally', content: 'Apology marketing email', content2: 'Hello Ananya Singleton', id: '1', order: 0 },\r\n            { Name: 'Illa Russo', content: 'Annual conference', content2: 'Hi jeani Moresa', id: '4', order: 0 },\r\n            { Name: 'Camden Macmellon', content: 'Reference request- Camden hester', content2: 'Hello Kerry Best', order: 0 },\r\n            { Name: 'Garth Owen', content: 'Application for job Title', content2: 'Hello Illa Russo', id: '2', order: 0 },\r\n            { Name: 'Ursula Patterson', content: 'Programmaer Position Applicant', content2: 'Hello Kerry best', id: '2', order: 0 }\r\n        ];\r\n        this.data = this.dataSource;\r\n        this.paneSize1 = \"28%\";\r\n        this.minimumSize1 = \"27%\";\r\n        this.paneSize2 = \"33%\";\r\n        this.minimumSize2 = \"23%\";\r\n        this.paneSize3 = \"37%\";\r\n        this.minimumSize3 = \"30%\";\r\n        //Set customized list template\r\n        this.listTemplate = '<div class=\"settings e-list-wrapper e-list-multi-line e-list-avatar\">' +\r\n            '<span class=\"e-list-item-header\">${Name}</span>' +\r\n            '<span class=\"e-list-content\">${content}</span>' +\r\n            '</div>';\r\n        //Set customized group-header template\r\n        this.grouptemplate = '<div class=\"e-list-wrapper\"><span class=\"e-list-item-content\"></span></div>';\r\n        //Map the appropriate columns to fields property\r\n        this.listFields = { text: 'Name', groupBy: 'order' };\r\n        this.mailBox = [\r\n            { id: 1, name: 'Favorites', hasChild: true },\r\n            { id: 2, pid: 1, name: 'Sales Reports', count: '4' },\r\n            { id: 3, pid: 1, name: 'Sent Items' },\r\n            { id: 4, pid: 1, name: 'Marketing Reports ', count: '6' },\r\n            { id: 5, name: 'Andrew Fuller', hasChild: true, expanded: true },\r\n            { id: 6, pid: 5, name: 'Inbox', selected: true, count: '20' },\r\n            { id: 7, pid: 5, name: 'Drafts', count: '5' },\r\n            { id: 15, pid: 5, name: 'Archive' },\r\n            { id: 8, pid: 5, name: 'Deleted Items' },\r\n            { id: 9, pid: 5, name: 'Sent Items' },\r\n            { id: 10, pid: 5, name: 'Sales Reports', count: '4' },\r\n            { id: 11, pid: 5, name: 'Marketing Reports', count: '6' },\r\n            { id: 12, pid: 5, name: 'Outbox' },\r\n            { id: 13, pid: 5, name: 'Junk Email' },\r\n            { id: 14, pid: 5, name: 'RSS Feed' },\r\n            { id: 15, pid: 5, name: 'Trash' }\r\n        ];\r\n        this.treeFields = { dataSource: this.mailBox, id: 'id', parentID: 'pid', text: 'name', hasChildren: 'hasChild' };\r\n    }\r\n    nodeTemplate(data) {\r\n        return (<div>\r\n            <div className=\"treeviewdiv\">\r\n                <div className=\"textcontent\">\r\n                    <span className=\"treeName\">{data.name}</span>\r\n                </div>\r\n                {data.count &&\r\n            <div className=\"countcontainer\">\r\n                        <span className=\"treeCount e-badge e-badge-primary\">{data.count}</span>\r\n                    </div>}\r\n            </div>\r\n        </div>);\r\n    }\r\n    ;\r\n    content1() {\r\n        return (<div className='splitter-content'>\r\n                <TreeViewComponent id='splitter-tree' fields={this.treeFields} nodeTemplate={this.nodeTemplate}/>\r\n            </div>);\r\n    }\r\n    ;\r\n    content2() {\r\n        return (<div className='splitter-content'>\r\n                <ListViewComponent id='groupedList-split' fields={this.listFields} className='splitter-list' dataSource={this.dataSource} cssClass={'e-list-template'} groupTemplate={this.grouptemplate} template={this.listTemplate} ref={(listview) => { this.listViewObj = listview; }}/>\r\n            </div>);\r\n    }\r\n    ;\r\n    content3() {\r\n        return (<div>\r\n                <div className='splitter-content'>\r\n                    <div style={{ width: '100%', padding: '15px' }}>\r\n                        <table>\r\n                            <tr>\r\n                                <td><button className='e-btn e-flat e-outline'>To...</button></td>\r\n                                <td id='firstname-target'>\r\n                                    <TextBoxComponent id=\"firstname\"/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><button className='e-btn e-flat e-outline'>Cc...</button></td>\r\n                                <td id='lastname-target'>\r\n                                    <TextBoxComponent id=\"lastname\"/>\r\n                                </td>\r\n                            </tr>\r\n                            <tr>\r\n                                <td><div id='subject-text'>Subject</div></td>\r\n                                <td id='subject-target'>\r\n                                    <TextBoxComponent id=\"subject\"/>\r\n                                </td>\r\n                            </tr>\r\n                        </table>\r\n                    </div>\r\n                    <div className='forum'>\r\n                        <div id='createpostholder'>\r\n                            <RichTextEditorComponent id=\"outlookRTE\" ref={(richtexteditor) => { this.rteObj = richtexteditor; }} height=\"262px\">\r\n                                <Inject services={[HtmlEditor, Toolbar, Image, Link, QuickToolbar]}/>\r\n                            </RichTextEditorComponent>\r\n                            <div id='buttonSection'>\r\n                                <button className='e-btn e-primary' id='send'>Send</button>\r\n                                <button className='e-btn' id='discard'>Discard</button>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n    ;\r\n    onSplitterResize() {\r\n        this.rteObj.refreshUI();\r\n    }\r\n    render() {\r\n        return (<div id=\"target\" className=\"control-section outlook-style\">\r\n                <SplitterComponent id=\"splitter1\" height=\"493px\" width=\"100%\" ref={(splitter) => { this.splitterInstance = splitter; }} resizing={this.onSplitterResize.bind(this)}>\r\n                    <PanesDirective>\r\n                        <PaneDirective size={this.paneSize1} min={this.minimumSize1} content={this.content1.bind(this)}>\r\n                        </PaneDirective>\r\n                        <PaneDirective size={this.paneSize2} min={this.minimumSize2} content={this.content2.bind(this)}>\r\n                        </PaneDirective>\r\n                        <PaneDirective size={this.paneSize3} min={this.minimumSize3} content={this.content3.bind(this)}>\r\n                        </PaneDirective>\r\n                    </PanesDirective>\r\n                </SplitterComponent>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<OutlookLayout />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}