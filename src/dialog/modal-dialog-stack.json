{"index.css":".control-pane .modal-dialog-target {\r\n    min-height: 350px;\r\n}\r\n.property-panel-table.table-width {\r\n    width: 100%;\r\n}\r\n.table-td {\r\n    width: 60%;\r\n}\r\n.dialog-td-font {\r\n    font-size: 13px;\r\n}\r\n.dlgbtn.dlgbtn-position {\r\n    position: absolute;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class Modal extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hideDialog: true\r\n        };\r\n        this.buttonRef = element => {\r\n            this.buttonEle = element;\r\n        };\r\n        this.animationSettings = { effect: 'None' };\r\n        this.buttons = [{\r\n                // Click the footer buttons to hide the Dialog\r\n                click: () => {\r\n                    this.dialogInstance.hide();\r\n                },\r\n                // Accessing button component properties by buttonModel property\r\n                buttonModel: {\r\n                    //Enables the primary button\r\n                    isPrimary: true,\r\n                    content: 'OK'\r\n                }\r\n            }];\r\n    }\r\n    // function to handle the CheckBox change event\r\n    onChange(args) {\r\n        if (args.checked) {\r\n            this.dialogInstance.overlayClick = () => {\r\n                this.setState({ hideDialog: false });\r\n            };\r\n        }\r\n        else {\r\n            this.dialogInstance.overlayClick = () => {\r\n                this.setState({ hideDialog: true });\r\n            };\r\n        }\r\n    }\r\n    // To Open dialog\r\n    buttonClick() {\r\n        this.setState({ hideDialog: true });\r\n    }\r\n    dialogClose() {\r\n        this.setState({ hideDialog: false });\r\n        this.buttonEle.style.display = 'inline-block';\r\n    }\r\n    dialogOpen() {\r\n        this.buttonEle.style.display = 'none';\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className='control-section modal-dialog-target'>\r\n                    <div id='target' className='col-lg-8'>\r\n                        <button className=\"e-control e-btn dlgbtn dlgbtn-position\" ref={this.buttonRef} onClick={this.buttonClick.bind(this)}>Open</button>\r\n                        \r\n                        <DialogComponent id=\"modalDialog\" isModal={true} buttons={this.buttons} header='Software Update' width='335px' content='Your current software version is up to date.' ref={dialog => this.dialogInstance = dialog} target='#target' visible={this.state.hideDialog} open={this.dialogOpen.bind(this)} close={this.dialogClose.bind(this)} animationSettings={this.animationSettings}></DialogComponent>\r\n                    </div>\r\n                    <div className='col-lg-4 property-section'>\r\n                        <PropertyPane title='Properties'>\r\n                            <table id='property' title='Properties' className='property-panel-table table-width'>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td className='table-td'>\r\n                                            <div className='dialog-td-font'>Close on overlay click</div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <CheckBoxComponent checked={false} ref={(scope) => { this.checkboxObj = scope; }} change={this.onChange.bind(this)}></CheckBoxComponent>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Modal />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}