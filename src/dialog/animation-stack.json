{"index.css":".text {\r\n    text-transform: capitalize;\r\n}\r\n        \r\n#customization {\r\n    display: table;\r\n    margin: 0 auto;\r\n}\r\n\r\n.animate {\r\n    display: table-cell;\r\n    padding: 10px;\r\n}\r\n\r\n.control-pane .dialog-target {\r\n    min-height: 350px;\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class Animation extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hideDialog: true\r\n        };\r\n        this.dlgButton = [{\r\n                click: this.dialogButtonClick.bind(this),\r\n                buttonModel: { content: 'Hide', isPrimary: true }\r\n            }];\r\n        this.buttonClick = this.buttonClick.bind(this);\r\n        this.animationSettings = { effect: 'Zoom' };\r\n    }\r\n    dialogButtonClick() {\r\n        this.setState({ hideDialog: false });\r\n    }\r\n    dialogClose() {\r\n        this.setState({ hideDialog: false });\r\n    }\r\n    buttonClick(args) {\r\n        let dialog = this.defaultDialogInstance;\r\n        let effects = args.target.id;\r\n        let txt = args.target.parentElement.innerText;\r\n        txt = (txt === 'Zoom In/Out') ? 'Zoom In or Out' : txt;\r\n        dialog.content = 'The dialog is configured with animation effect. It is opened or closed with \"' + txt + '\" animation.';\r\n        dialog.animationSettings = { effect: effects, duration: 400 };\r\n        this.setState({ hideDialog: true });\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div id='target' className='col-lg-12 control-section dialog-target'>\r\n                    <div id='customization'>\r\n                        <div className='animate'>\r\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='Zoom'>Zoom</button>\r\n                        </div>\r\n                        <div className='animate'>\r\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='FlipXDown'>FlipX Down</button>\r\n                        </div>\r\n                        <div className='animate'>\r\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='FlipXUp'>FlipX Up</button>\r\n                        </div>\r\n                        <div className='animate'>\r\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='FlipYLeft'>FlipY Left</button>\r\n                        </div>\r\n                        <div className='animate'>\r\n                            <button className='e-control e-btn e-outline e-primary' onClick={this.buttonClick.bind(this)} id='FlipYRight'>FlipY Right</button>\r\n                        </div>\r\n                    </div>\r\n                    <DialogComponent id='AnimationDialog' isModal={true} header='Animation Dialog' showCloseIcon={true} animationSettings={this.animationSettings} width='285px' ref={defaultDialog => this.defaultDialogInstance = defaultDialog} target='#target' buttons={this.dlgButton} visible={this.state.hideDialog} beforeClose={this.dialogClose.bind(this)}>\r\n                        <span>The dialog is configured with animation effect. It is opened or closed with \"Zoom In or Out\" animation.</span>\r\n                    </DialogComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Animation />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}