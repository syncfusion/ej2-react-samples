{"index.css":"\r\nhtml,\r\nbody,    \r\n#container {\r\n    height: 100%;\r\n    overflow: hidden;\r\n    width: 100%;\r\n}\r\n\r\n#defaultDialog table,\r\n#defaultDialog th,\r\n#defaultDialog td {\r\n    border: 1px solid #D8D8D8;\r\n    border-collapse: collapse;\r\n}\r\n\r\n#container {\r\n    height: 365px;\r\n}\r\n\r\n#defaultDialog.e-dialog .e-footer-content {\r\n    padding: 0px 1px 4px ! important;\r\n}\r\n\r\n.tableStyle {\r\n  margin: 17px;\r\n  width: 304px;\r\n}\r\n\r\n.e-dialog .e-dlgcontent{\r\n    padding: 10px 16px 10px;\r\n}     \r\n\r\n.e-radio +label .e-label {\r\n  line-height: 18px;\r\n}\r\n\r\n#poschange td {\r\n  padding: 6px;\r\n}\r\n\r\n#poschange {\r\n    width: 405px;\r\n}\r\n\r\ndiv#target.control-section.dialog-position {\r\n    overflow: visible;\r\n    margin-bottom: 20px;\r\n    margin-top: 10px;\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\r\nimport { RadioButtonComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class Positioning extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            hideDialog: true\r\n        };\r\n        this.buttonRef = element => {\r\n            this.buttonEle = element;\r\n        };\r\n        this.position = { X: 'center', Y: 'center' };\r\n        this.footerTemplate = '<span id=\"posvalue\" style=\"float:left;margin-left:8px;padding:10px;\">Position: { X: \"Center\", Y: \"Center\" }</span>';\r\n    }\r\n    buttonClick(args) {\r\n        this.setState({ hideDialog: true });\r\n    }\r\n    //Bind the overlayClick event\r\n    changePosition(event) {\r\n        this.defaultDialogInstance.position = { X: event.currentTarget.value.split(\" \")[0], Y: event.currentTarget.value.split(\" \")[1] };\r\n        document.getElementById('posvalue').innerHTML = 'Position: {X: \"' + event.currentTarget.value.split(\" \")[0] + '\", Y: \"' + event.currentTarget.value.split(\" \")[1] + '\"}';\r\n        let txt = event.target.parentElement.querySelector('.e-label').innerText.split(\" \");\r\n        document.getElementById('posvalue').innerHTML = 'Position: { X: \"' + txt[0] + '\", Y: \"' + txt[1] + '\" }';\r\n    }\r\n    dialogClose() {\r\n        this.setState({ hideDialog: false });\r\n        this.buttonEle.style.display = 'inline-block';\r\n    }\r\n    dialogOpen() {\r\n        this.setState({ hideDialog: true });\r\n        this.buttonEle.style.display = 'none';\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div id='target' className='col-lg-12 control-section dialog-position'>\r\n          <button className='e-control e-btn dlgbtn' ref={this.buttonRef} onClick={this.buttonClick.bind(this)} id='dialogBtn'>Open Dialog</button>\r\n          <DialogComponent id='positionDialog' header='Choose a Dialog Position' visible={this.state.hideDialog} showCloseIcon={true} position={this.position} footerTemplate={this.footerTemplate} width='452px' ref={positionDialog => this.defaultDialogInstance = positionDialog} target='#target' open={this.dialogOpen.bind(this)} close={this.dialogClose.bind(this)} closeOnEscape={false}>\r\n            <table id='poschange'>\r\n              <tbody>\r\n                <tr>\r\n                  <td><RadioButtonComponent id='radio1' label='Left Top' value='left top' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                  <td><RadioButtonComponent id='radio2' label='Center Top' value='center top' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                  <td><RadioButtonComponent id='radio3' label='Right Top' value='right top' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><RadioButtonComponent id='radio4' label='Left Center' value='left center' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                  <td><RadioButtonComponent id='radio5' checked={true} label='Center Center' value='center center' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                  <td><RadioButtonComponent id='radio6' label='Right Center' value='right center' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                </tr>\r\n                <tr>\r\n                  <td><RadioButtonComponent id='radio7' label='Left Bottom' value='left bottom' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                  <td><RadioButtonComponent id='radio8' label='Center Bottom' value='center bottom' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                  <td><RadioButtonComponent id='radio9' label='Right Bottom' value='right bottom' name='xy' onClick={this.changePosition.bind(this)}></RadioButtonComponent></td>\r\n                </tr>\r\n              </tbody>\r\n            </table>\r\n          </DialogComponent>\r\n        </div>\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<Positioning />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}