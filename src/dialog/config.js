"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DialogSampleOrder = [
    { 'path': 'dialog/default', 'component': 'DefaultFunctionalities', 'description': 'The example demonstrates the default rendering of the React dialog, which supports modal and non-modal (modeless), built-in buttons, and more.', 'name': 'Default Functionalities', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "closeOnEscape", "width", "open", "close", "visible", "show", "hide" ]}' },
    { 'path': 'dialog/custom-dialog', 'component': 'Basic', 'description': 'This example demonstrates how to create custom dialogs such as alert dialogs, confirmation dialogs, and prompt dialogs using the React dialog component.', 'name': 'Custom Dialogs', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "closeOnEscape", "width", "open", "close", "visible", "show", "hide"]}' },
    { 'path': 'dialog/modal-dialog', 'component': 'Modal', 'description': 'This example demonstrates the modal pop-up behavior of the React dialog component, which helps display critical information such as errors and warnings.', 'name': 'Modal', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "isModal", "width", "open", "close", "show", "hide", "overlayClick"]}' },
    { 'path': 'dialog/template', 'component': 'Template', 'description': 'This example demonstrates how to customize user interface elements like the header, footer, and content of the React dialog component using a template.', 'name': 'Template', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "isModal", "width", "open", "close", "show", "hide"]}' },
    { 'path': 'dialog/dialog-contents-via-ajax', 'description': 'The example demonstrates how to load the content of the React dialog component from external sources such as a file or website using Ajax library.', 'component': 'AjaxContent', 'name': 'Ajax Content', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "width", "open", "close", "show"]}' },
    { 'path': 'dialog/draggable', 'description': 'This example shows how to enable drag-and-drop actions in the React dialog component to help reposition the dialog efficiently.', 'component': 'Draggable', 'name': 'Draggable', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "width", "open", "close", "closeOnEscape"]}' },
    { 'path': 'dialog/resizable', 'description': 'This example shows how to create resizable modal in the React dialog to change the size of a dialog efficiently and view its content more comfortably.', 'component': 'Resizable', 'name': 'Resizable', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "animationSettings", "width", "open", "close", "closeOnEscape", "enableResize"]}' },
    { 'path': 'dialog/position', 'description': 'This example demonstrates how to display the React dialog component at various built-in and custom positions.', 'component': 'Positioning', 'name': 'Positioning', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "width", "open", "close", "closeOnEscape", "position"]}' },
    { 'path': 'dialog/animation', 'description': 'This example demonstrates how to open or close the React dialog with various animation effects, and how to customize the animation duration and delay.', 'component': 'Animation', 'name': 'Animation', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "width", "open", "close", "closeOnEscape"]}' },
    { 'path': 'dialog/multiple-dialogs', 'description': 'This example shows how to display multiple dialogs sequentially and open multiple dialogs simultaneously for both modal and modeless React dialogs.', 'component': 'MultipleDialogs', 'name': 'Multiple Dialogs', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "width", "open", "close", "closeOnEscape"]}' },
    { 'path': 'dialog/components-dialog', 'description': 'This example demonstrates how to render other React Syncfusion components inside the dialog component.', 'component': 'ComponentsDialog', 'name': 'Components inside Dialog', 'type': 'new', 'order': '01', 'category': 'Dialog', 'api': '{"Dialog": [ "header", "content", "target", "showCloseIcon", "buttons", "animationSettings", "open", "close"]}' }
];
