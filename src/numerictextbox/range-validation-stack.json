{"index.css":" .control-section .content-wrapper.sample-numeric {\r\n        width: 30%;\r\n        margin: 0 auto;\r\n        min-width: 185px;\r\n    }\r\n\r\n.format-wrapper .e-float-input.e-numeric.e-input-group { \r\n    margin-bottom: 40px; \r\n}\r\n\r\n.sample-numeric .control-label {\r\n    padding: 24px 0px 10px 0px;\r\n    font-size: 12px;\r\n    opacity: 1;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\n\r\nexport class Range extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div className='control-section'>\r\n          <div className=' col-lg-8'>\r\n            <div className=\"content-wrapper format-wrapper sample-numeric\">\r\n              <div className=\"control-label\">Numeric TextBox\r\n              </div>\r\n              \r\n              <NumericTextBoxComponent min={10} max={100} value={15} ref={numeric => this.numericInstance = numeric}>\r\n              </NumericTextBoxComponent>\r\n            </div>\r\n          </div>\r\n          <div className='col-lg-4 property-section'>\r\n            <PropertyPane title='Properties'>\r\n              <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\r\n                <tr>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Min Value </div>\r\n                  </td>\r\n                  <td style={{ width: '70%', paddingRight: '10px' }}>\r\n                    <div>\r\n                      <input id=\"min\" type=\"number\" inputMode=\"numeric\" className=\"form-control\"/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Max Value </div>\r\n                  </td>\r\n                  <td style={{ width: '70%', paddingRight: '10px' }}>\r\n                    <div>\r\n                      <input id=\"max\" type=\"number\" inputMode=\"numeric\" className=\"form-control\"/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td style={{ width: '30%' }}>\r\n                    <div>Increment Step </div>\r\n                  </td>\r\n                  <td style={{ width: '70%', paddingRight: '10px' }}>\r\n                    <div>\r\n                      <input id=\"step\" type=\"number\" inputMode=\"numeric\" max={100} min={0} className=\"form-control\"/>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td></td>\r\n                  <td>\r\n                    <div>\r\n                      <button id=\"buttonApply\" className=\"e-btn-small btn btn-primary\" style={{ marginBottom: '10px' }} onClick={this.applyRange.bind(this)}>Apply</button>\r\n                    </div>\r\n                  </td>\r\n                </tr>\r\n              </table>\r\n            </PropertyPane>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>);\r\n    }\r\n    rendereComplete() {\r\n        /**custom render complete function */\r\n        document.getElementById('min').value = '10';\r\n        document.getElementById('max').value = '100';\r\n        document.getElementById('step').value = '1';\r\n    }\r\n    applyRange() {\r\n        let min = parseFloat(document.getElementById('min').value);\r\n        let max = parseFloat(document.getElementById('max').value);\r\n        let step = parseFloat(document.getElementById('step').value);\r\n        this.numericInstance.min = min;\r\n        this.numericInstance.max = max;\r\n        this.numericInstance.step = step;\r\n    }\r\n}\r\n\nrender(<Range />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}