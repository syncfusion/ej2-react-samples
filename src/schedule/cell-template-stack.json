{"index.css":".cell-template.e-schedule .e-month-view .e-work-cells {\r\n  position: relative;\r\n}\r\n\r\n.cell-template.e-schedule .templatewrap {\r\n  text-align: center;\r\n  position: absolute;\r\n  width: 100%;\r\n}\r\n\r\n.cell-template.e-schedule .templatewrap img {\r\n  width: 30px;\r\n  height: 30px;\r\n}\r\n\r\n.cell-template.e-schedule .caption {\r\n  overflow: hidden;\r\n  text-overflow: ellipsis;\r\n  vertical-align: middle;\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { ScheduleComponent, ViewsDirective, ViewDirective, Month, Inject, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\r\n\r\nimport { SampleBase } from './sample-base';\r\n/**\r\n * Schedule cell template sample\r\n */\r\nexport class CellTemplate extends SampleBase {\r\n    getCellContent(date) {\r\n        if (date.getMonth() === 10 && date.getDate() === 23) {\r\n            return '<img src= \"////npmci.syncfusion.com/development/react/demos/src/schedule/images/thanksgiving-day.svg\" /><div className=\"caption\">Thanksgiving day</div>';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 9) {\r\n            return '<img src=\"////npmci.syncfusion.com/development/react/demos/src/schedule/images/get-together.svg\" /><div className=\"caption\">Party time</div>';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 13) {\r\n            return '<img src=\"////npmci.syncfusion.com/development/react/demos/src/schedule/images/get-together.svg\" /><div className=\"caption\">Party time</div>';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 22) {\r\n            return '<img src=\"////npmci.syncfusion.com/development/react/demos/src/schedule/images/birthday.svg\" /><div className=\"caption\">Happy birthday</div>';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 24) {\r\n            return '<img src=\"////npmci.syncfusion.com/development/react/demos/src/schedule/images/christmas-eve.svg\" /><div className=\"caption\">Christmas Eve</div>';\r\n        }\r\n        else if (date.getMonth() === 11 && date.getDate() === 25) {\r\n            return '<img src=\"////npmci.syncfusion.com/development/react/demos/src/schedule/images/christmas.svg\" /><div className=\"caption\">Christmas Day</div>';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 1) {\r\n            return '<img src=\"////npmci.syncfusion.com/development/react/demos/src/schedule/images/newyear.svg\" /><div className=\"caption\">New Year\\'s Day</div>';\r\n        }\r\n        else if (date.getMonth() === 0 && date.getDate() === 14) {\r\n            return '<img src=\"////npmci.syncfusion.com/development/react/demos/src/schedule/images/get-together.svg\" /><div className=\"caption\">Get together</div>';\r\n        }\r\n        return '';\r\n    }\r\n    cellTemplate(props) {\r\n        if (props.type === \"monthCells\") {\r\n            return (<div className=\"templatewrap\" dangerouslySetInnerHTML={{ __html: this.getCellContent(props.date) }}></div>);\r\n        }\r\n        return;\r\n    }\r\n    render() {\r\n        return (<div className='schedule-control-section'>\r\n        <div className='col-lg-12 control-section'>\r\n          <div className='control-wrapper'>\r\n            <ScheduleComponent cssClass='cell-template' width='100%' height='650px' selectedDate={new Date(2017, 11, 15)} cellTemplate={this.cellTemplate.bind(this)}>\r\n              <ViewsDirective>\r\n                <ViewDirective option='Month'/>\r\n              </ViewsDirective>\r\n              <Inject services={[Month, Resize, DragAndDrop]}/>\r\n            </ScheduleComponent>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<CellTemplate />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}