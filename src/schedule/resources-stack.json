{"index.css":".e-tooltip-wrap.e-schedule-event-tooltip .airline-flex-row {\r\n    display: flex;\r\n    padding: 0 5px;\r\n    line-height: 20px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .airline-flex-col {\r\n    flex: 0 0 50%;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .text-right {\r\n    text-align: right;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .margin-right {\r\n    margin-left: -21px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .text-size {\r\n    font-size: 14px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .border-right {\r\n    border-right: 1px solid #fff;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .airline-fare {\r\n    padding-left: 8px;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-appointment .template-wrap {\r\n    color: black;\r\n    width: 100%;\r\n}\r\n\r\n.schedule-resources.highcontrast .e-schedule .e-appointment .template-wrap,\r\n    .schedule-resources.highcontrast .e-schedule .best-price:not(.e-work-cells) {\r\n        color: #fff;\r\n    }\r\n\r\n    .schedule-resources.e-schedule .e-work-cells.best-price {\r\n        background-color: #FFFBDF;\r\n    }\r\n\r\n    .schedule-resources.e-schedule .best-price:not(.e-work-cells) {\r\n        color: #1A961A;\r\n        float: right;\r\n        margin-top: -22px;\r\n        margin-right: 3px;\r\n        width: auto;\r\n        font-size: 12px;\r\n    }\r\n\r\n    .schedule-resources.highcontrast .e-schedule .best-price:not(.e-work-cells) {\r\n        color: #33DB33;\r\n    }\r\n\r\n\r\n    .schedule-resources.highcontrast .e-schedule .e-work-cells.best-price {\r\n        background-color: #393939;\r\n    }\r\n\r\n    .schedule-resources .e-schedule.e-device .best-price:not(.e-work-cells) {\r\n        display: none;\r\n    }\r\n\r\n.schedule-demo-heading {\r\n    font-size: 16px;\r\n    padding-bottom: 15px;\r\n    text-align: center;\r\n    font-weight: 500\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip {\r\n    width: 217px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .airline {\r\n    width: 40%;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-header {\r\n    display: flex;\r\n    padding: 8px 0px 8px 0px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-details {\r\n    display: flex;\r\n    padding: 8px 5px 8px 5px;\r\n}\r\n\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-timings,\r\n.e-tooltip-wrap.e-schedule-event-tooltip .event-tooltip .airline-timings-title {\r\n    display: flex;\r\n    padding: 5px;\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-header {\r\n    border-bottom: 1px solid #e0e0e0;\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-logo,\r\n.schedule-resources.e-schedule .template-wrap .airline-logo {\r\n    background-size: cover;\r\n    background-repeat: no-repeat;\r\n    margin-top: -3px;\r\n    width: 25px;\r\n    height: 25px;\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-1,\r\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-1 {\r\n    background-image: url('////npmci.syncfusion.com/development/react/demos/src/schedule/images/airways-1.svg');\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-2,\r\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-2 {\r\n    background-image: url('////npmci.syncfusion.com/development/react/demos/src/schedule/images/airways-2.svg');\r\n}\r\n\r\n.e-schedule-event-tooltip .event-tooltip .airline-logo.airways-3,\r\n.schedule-resources.e-schedule .template-wrap .airline-logo.airways-3 {\r\n    background-image: url('////npmci.syncfusion.com/development/react/demos/src/schedule/images/airways-3.svg');\r\n}\r\n\r\n.schedule-resources.e-schedule .fare-detail {\r\n    color: #00837B;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n    height: 25px;\r\n    padding-left: 5px;\r\n}\r\n\r\n.schedule-resources.highcontrast .e-schedule .fare-detail {\r\n    color: #1B96BB;\r\n}\r\n\r\n.schedule-resources.e-schedule.e-device .fare-detail {\r\n    font-size: 11px;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-toolbar-item.e-date-range {\r\n    margin-left: 8px;\r\n    pointer-events: none;\r\n}\r\n\r\n.schedule-resources.e-schedule .airway-name {\r\n    font-size: 12px;\r\n    overflow: hidden;\r\n    padding-left: 5px;\r\n    text-overflow: ellipsis;\r\n}\r\n\r\n.schedule-resources.e-schedule.e-device .airway-name {\r\n    display: none;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-month-view .e-appointment {\r\n    height: 45px;\r\n    background: none;\r\n    border-width: 0;\r\n    top: 10px !important;\r\n}\r\n\r\n.schedule-resources.e-schedule.e-device .e-month-view .e-appointment {\r\n    height: 45px;\r\n}\r\n\r\n.e-bigger .schedule-resources.e-schedule .e-month-view .e-appointment {\r\n    height: 40px;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-month-view .e-appointment .e-appointment-details {\r\n    height: inherit;\r\n}\r\n\r\n.schedule-resources.e-schedule .e-month-view .e-more-indicator {\r\n    display: none\r\n}\r\n\r\n.schedule-resources.e-schedule .e-month-view .e-appointment.e-appointment-border,\r\n.schedule-resources.e-schedule .e-month-view .e-appointment:focus {\r\n    border-width: 0;\r\n}\r\n\r\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip {\r\n    opacity: 1;\r\n}\r\n\r\n.highcontrast .e-tooltip-wrap.e-popup.e-schedule-event-tooltip {\r\n    border-color: #e0e0e0;\r\n    background-color: #fff;\r\n}\r\n\r\n.highcontrast .e-tooltip-wrap.e-popup.e-schedule-event-tooltip .e-tip-content {\r\n    color: #000;\r\n}\r\n\r\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-name {\r\n    font-weight: 500;\r\n    font-size: 16px;\r\n    padding-left: 10px;\r\n    padding-top: 3px;\r\n\r\n}\r\n\r\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-title {\r\n    font-weight: 500;\r\n    font-size: 14px;\r\n}\r\n\r\n.e-tooltip-wrap.e-popup.e-schedule-event-tooltip .event-tooltip .airline-logo {\r\n    padding: 5px;\r\n    margin-left: 5px;\r\n    background-size: 25px;\r\n    height: 25px;\r\n    width: 25px;\r\n    margin-top: 0px;\r\n}\r\n\r\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-1 .e-frame {\r\n    background-color: #EA7A57;\r\n    border-color: transparent;\r\n}\r\n\r\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-2 .e-frame {\r\n    background-color: #357CD2;\r\n    border-color: transparent;\r\n}\r\n\r\n.property-panel-content .e-checkbox-wrapper.e-resource.e-airways-3 .e-frame {\r\n    background-color: #7FA900;\r\n    border-color: transparent;\r\n}\r\n\r\n@media (max-width: 550px) {\r\n    .schedule-demo-heading {\r\n        font-size: 14px;\r\n    }\r\n}\r\n","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { Month, Inject, ScheduleComponent, ViewsDirective, ViewDirective, ResourcesDirective, ResourceDirective } from '@syncfusion/ej2-react-schedule';\r\n\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { extend, Internationalization, createElement, closest, remove, addClass, removeClass } from '@syncfusion/ej2-base';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\n/**\r\n * schedule resources fare-calendar sample\r\n */\r\nexport class Resources extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.dManager = [];\r\n        this.initalLoad = true;\r\n        this.instance = new Internationalization();\r\n        this.resourceData = [\r\n            { text: 'Airways 1', id: 1 },\r\n            { text: 'Airways 2', id: 2 },\r\n            { text: 'Airways 3', id: 3 }\r\n        ];\r\n    }\r\n    getAirwaysName(value) {\r\n        return (value === 1) ? 'Airways 1' : (value === 2) ? 'Airways 2' : 'Airways 3';\r\n    }\r\n    getAirwaysImage(value) {\r\n        return (value === 1) ? 'airways-1' : (value === 2) ? 'airways-2' : 'airways-3';\r\n    }\r\n    getFormattedTime(date) {\r\n        return this.instance.formatDate(date, { skeleton: 'Hm' });\r\n    }\r\n    onActionBegin(args) {\r\n        if (args.requestType === 'toolbarItemRendering') {\r\n            args.items[2].align = 'Center';\r\n            args.items[2].suffixIcon = '';\r\n            args.items = args.items.splice(2, 1);\r\n        }\r\n    }\r\n    onDataBinding() {\r\n        if (this.initalLoad) {\r\n            this.scheduleObj.eventSettings.dataSource = this.generateEvents(this.scheduleObj);\r\n            this.initalLoad = false;\r\n        }\r\n    }\r\n    onDataBound() {\r\n        let eventCollections = this.scheduleObj.getCurrentViewEvents();\r\n        eventCollections.sort((a, b) => (a.Fare - b.Fare));\r\n        let indexDate = new Date(eventCollections[0].StartTime.getTime());\r\n        indexDate.setHours(0, 0, 0, 0);\r\n        let index = this.scheduleObj.getIndexOfDate(this.scheduleObj.activeView.renderDates, indexDate);\r\n        let target = this.scheduleObj.element.querySelectorAll('.e-work-cells')[index];\r\n        addClass([target], 'best-price');\r\n        target.appendChild(createElement('div', { className: 'best-price', innerHTML: 'Best Price' }));\r\n    }\r\n    onPopupOpen(args) {\r\n        args.cancel = true;\r\n    }\r\n    onChange(args) {\r\n        let tdElement = this.scheduleObj.element.querySelector('.best-price:not(.e-work-cells)');\r\n        if (tdElement) {\r\n            removeClass([closest(tdElement, 'td')], 'best-price');\r\n            remove(tdElement);\r\n        }\r\n        let scheduleData = extend([], this.dManager, null, true);\r\n        let selectedResource = [];\r\n        let resourceCollection = [].slice.call(document.querySelectorAll('.e-resource'));\r\n        resourceCollection.forEach((element, index) => {\r\n            if (element.getAttribute('aria-checked') === 'true') {\r\n                selectedResource.push(index);\r\n            }\r\n        });\r\n        let filteredData = [];\r\n        let resources = this.scheduleObj.resourceBase.resourceCollection.slice(-1)[0].dataSource;\r\n        for (let resource of selectedResource) {\r\n            let data = scheduleData.filter((event) => resources[resource].id === event.AirlineId);\r\n            filteredData = filteredData.concat(data);\r\n        }\r\n        filteredData = this.filterByFare(filteredData, this.scheduleObj);\r\n        this.scheduleObj.eventSettings.dataSource = filteredData;\r\n        this.scheduleObj.dataBind();\r\n    }\r\n    filterByFare(appointments, scheduleObj) {\r\n        let fieldMapping = scheduleObj.eventFields;\r\n        appointments.sort((object1, object2) => {\r\n            let d1 = +object1[fieldMapping.startTime];\r\n            let d2 = +object2[fieldMapping.startTime];\r\n            let d3 = +object1[fieldMapping.endTime];\r\n            let d4 = +object2[fieldMapping.endTime];\r\n            return ((d1 - d2) || ((d4 - d2) - (d3 - d1)));\r\n        });\r\n        let renderDate = scheduleObj.activeView.getRenderDates();\r\n        let finalData = [];\r\n        for (let date of renderDate) {\r\n            if (scheduleObj.selectedDate.getMonth() === date.getMonth()) {\r\n                let strTime = new Date(+date);\r\n                let endTime = new Date(new Date(strTime.getTime()).setHours(23, 59, 59, 59));\r\n                let perDayData = scheduleObj.eventBase.filterEvents(strTime, endTime, appointments);\r\n                if (perDayData.length > 0) {\r\n                    perDayData.sort((a, b) => (a.Fare - b.Fare));\r\n                    finalData.push(perDayData[0]);\r\n                }\r\n            }\r\n        }\r\n        return finalData;\r\n    }\r\n    template(props) {\r\n        return (<div className=\"template-wrap\">\r\n            <div className=\"fare-detail\">${props.Fare}</div>\r\n            <div className=\"airline-name\" style={{ display: 'flex', paddingLeft: '5px' }}>\r\n                <div className={\"airline-logo \" + this.getAirwaysImage(props.AirlineId)}></div>\r\n                <div className=\"airway-name\">{this.getAirwaysName(props.AirlineId)}</div>\r\n            </div></div>);\r\n    }\r\n    toolTipTemplate(props) {\r\n        return (<div className=\"event-tooltip\">\r\n            <div className=\"airline-header\">\r\n                <div className={\"airline-logo \" + this.getAirwaysImage(props.AirlineId)}></div>\r\n                <div className=\"airline-name\">{this.getAirwaysName(props.AirlineId)}</div>\r\n            </div>\r\n            <div className=\"airline-details text-size\">\r\n                <div className=\"airline-title\">Fare Details:</div>\r\n                <div className=\"airline-fare\">${props.Fare} per person</div>\r\n            </div>\r\n            <div className=\"airline-flex-row text-size\">\r\n                <div className=\"airline-flex-col airline-title border-right\">Arrival</div>\r\n                <div className=\"airline-flex-col airline-title text-right\">Depature</div>\r\n            </div>\r\n            <div className=\"airline-flex-row text-size\">\r\n                <div className=\"airline-flex-col border-right\">{this.getFormattedTime(props.StartTime)}</div>\r\n                <div className=\"airline-flex-col margin-right text-right\">{this.getFormattedTime(props.EndTime)}</div>\r\n            </div></div>);\r\n    }\r\n    render() {\r\n        return (<div className='schedule-control-section'>\r\n                <div className='col-lg-9 control-section'>\r\n                    <div className='control-wrapper'>\r\n                        <div className='schedule-demo-heading'>\r\n                            Cheapest one way fares from Barcelona to Los Angeles\r\n                    </div>\r\n                        <ScheduleComponent ref={schedule => this.scheduleObj = schedule} cssClass='schedule-resources' width='100%' height='650px' readonly={true} selectedDate={new Date(2018, 3, 1)} eventSettings={{\r\n            template: this.template.bind(this), enableTooltip: true,\r\n            tooltipTemplate: this.toolTipTemplate.bind(this)\r\n        }} actionBegin={this.onActionBegin.bind(this)} dataBinding={this.onDataBinding.bind(this)} popupOpen={this.onPopupOpen.bind(this)} dataBound={this.onDataBound.bind(this)}>\r\n                            <ResourcesDirective>\r\n                                <ResourceDirective field='AirlineId' title='Airline' name='Airlines' allowMultiple={true} dataSource={this.resourceData} textField='text' idField='id'>\r\n                                </ResourceDirective>\r\n                            </ResourcesDirective>\r\n                            <ViewsDirective>\r\n                                <ViewDirective option='Month'/>\r\n                            </ViewsDirective>\r\n                            <Inject services={[Month]}/>\r\n                        </ScheduleComponent>\r\n                    </div>\r\n                </div>\r\n                <div className='col-lg-3 property-section'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id='property' title='Properties' className='property-panel-table' style={{ width: '100%' }}>\r\n                            <tbody>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '100%' }}>\r\n                                        <div className='airways-1'>\r\n                                            <CheckBoxComponent id='airways-1' cssClass='e-resource e-airways-1' checked={true} label='Airways 1' change={this.onChange.bind(this)}>\r\n                                            </CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '100%' }}>\r\n                                        <div className='airways-2'>\r\n                                            <CheckBoxComponent id='airways-2' cssClass='e-resource e-airways-2' checked={true} label='Airways 2' change={this.onChange.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr style={{ height: '50px' }}>\r\n                                    <td style={{ width: '100%' }}>\r\n                                        <div className='airways-3'>\r\n                                            <CheckBoxComponent id='airways-3' cssClass='e-resource e-airways-3' checked={true} label='Airways 3' change={this.onChange.bind(this)}>\r\n                                            </CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Resources />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}