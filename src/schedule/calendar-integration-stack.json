{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { ScheduleComponent, ViewsDirective, Inject, Day, WorkWeek, Month, Week, Agenda, ViewDirective } from '@syncfusion/ej2-react-schedule';\r\nimport { SampleBase } from './sample-base';\r\nimport { DataManager, WebApiAdaptor } from '@syncfusion/ej2-data';\r\n/**\r\n * schedule google calendar integration sample\r\n */\r\nexport class CalendarIntegration extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.calendarId = '5105trob9dasha31vuqek6qgp0@group.calendar.google.com';\r\n        this.publicKey = 'AIzaSyD76zjMDsL_jkenM5AAnNsORypS1Icuqxg';\r\n        this.dataManger = new DataManager({\r\n            url: 'https://www.googleapis.com/calendar/v3/calendars/' + this.calendarId + '/events?key=' + this.publicKey,\r\n            adaptor: new WebApiAdaptor,\r\n            crossDomain: true\r\n        });\r\n    }\r\n    onDataBinding(e) {\r\n        let items = e.result.items;\r\n        let scheduleData = [];\r\n        if (items.length > 0) {\r\n            for (let i = 0; i < items.length; i++) {\r\n                let event = items[i];\r\n                let when = event.start.dateTime;\r\n                let start = event.start.dateTime;\r\n                let end = event.end.dateTime;\r\n                if (!when) {\r\n                    when = event.start.date;\r\n                    start = event.start.date;\r\n                    end = event.end.date;\r\n                }\r\n                scheduleData.push({\r\n                    Id: event.id,\r\n                    Subject: event.summary,\r\n                    StartTime: new Date(start),\r\n                    EndTime: new Date(end),\r\n                    IsAllDay: !event.start.dateTime\r\n                });\r\n            }\r\n        }\r\n        e.result = scheduleData;\r\n    }\r\n    render() {\r\n        return (<div className='schedule-control-section'>\r\n                <div className='col-lg-12 control-section'>\r\n                    <div className='control-wrapper drag-sample-wrapper'>\r\n                        <div className=\"schedule-container\">\r\n                            <ScheduleComponent ref={schedule => this.scheduleObj = schedule} width='100%' height='650px' selectedDate={new Date(2018, 10, 14)} readonly={true} eventSettings={{ dataSource: this.dataManger }} dataBinding={this.onDataBinding.bind(this)}>\r\n                                <ViewsDirective>\r\n                                    <ViewDirective option='Day'/>\r\n                                    <ViewDirective option='Week'/>\r\n                                    <ViewDirective option='WorkWeek'/>\r\n                                    <ViewDirective option='Month'/>\r\n                                    <ViewDirective option='Agenda'/>\r\n                                </ViewsDirective>\r\n                                <Inject services={[Day, Week, WorkWeek, Month, Agenda]}/>\r\n                            </ScheduleComponent>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<CalendarIntegration />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}