{"index.css":".schedule-group.e-schedule .template-wrap {\r\n    display: flex;\r\n    text-align: left;\r\n}\r\n\r\n/* custom code start*/\r\n.schedule-demo-heading {\r\n    font-size: 16px;\r\n    padding-bottom: 15px;\r\n    text-align: center;\r\n    font-weight: 500\r\n}\r\n/* custom code end*/\r\n.schedule-group.e-schedule .e-agenda-view .template-wrap {\r\n    display: table;\r\n    width: inherit;\r\n    text-align: center;\r\n}\r\n\r\n.schedule-group.e-schedule:not(.e-device) .e-agenda-view .e-content-wrap table td:first-child {\r\n    width: 110px;\r\n}\r\n\r\n.schedule-group.e-schedule .template-wrap .airline-image {\r\n    width: 30px;\r\n    margin-top: 15px;\r\n    background-repeat: no-repeat;\r\n}\r\n\r\n.schedule-group.e-schedule.e-device .template-wrap .airline-image {\r\n    margin-top: 5px;\r\n}\r\n\r\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-image {\r\n    height: 30px;\r\n    margin-top: 0;\r\n    margin-left: 35%;\r\n}\r\n\r\n.schedule-group.e-schedule .e-vertical-view .e-resource-cells {\r\n    height: 76px;\r\n}\r\n\r\n.e-bigger .schedule-group.e-schedule .e-vertical-view .e-resource-cells {\r\n    height: 80px;\r\n}\r\n\r\n.schedule-group.e-schedule .template-wrap .airline-details {\r\n    padding-left: 15px;\r\n}\r\n\r\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-details {\r\n    padding: 0;\r\n}\r\n\r\n.schedule-group.e-schedule .template-wrap .airline-details .airline-name {\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n}\r\n\r\n.schedule-group.e-schedule.e-device .template-wrap .airline-details .airline-name {\r\n    font-size: inherit;\r\n    font-weight: inherit;\r\n}\r\n\r\n.schedule-group.e-schedule .template-wrap .airline-image.airways-1 {\r\n    background-image: url('////npmci.syncfusion.com/development/react/demos/src/schedule/images/airways-1.svg');\r\n}\r\n\r\n.schedule-group.e-schedule .template-wrap .airline-image.airways-2 {\r\n    background-image: url('////npmci.syncfusion.com/development/react/demos/src/schedule/images/airways-2.svg');\r\n}\r\n\r\n.schedule-group.e-schedule .template-wrap .airline-image.airways-3 {\r\n    background-image: url('////npmci.syncfusion.com/development/react/demos/src/schedule/images/airways-3.svg');\r\n}\r\n\r\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-model,\r\n.schedule-group.e-schedule .e-agenda-view .template-wrap .airline-seats {\r\n    display: none;\r\n}\r\n\r\n.schedule-group.e-schedule.e-device .template-wrap .airline-model,\r\n    .schedule-group.e-schedule.e-device .template-wrap .airline-seats {\r\n        display: none;\r\n    }\r\n/* custom code start*/\r\n@media (max-width: 550px) {\r\n    .schedule-demo-heading {\r\n        font-size: 14px;\r\n    }\r\n}\r\n/* custom code end*/\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { Week, Month, Agenda, ScheduleComponent, ResourcesDirective, ResourceDirective, ViewsDirective, ViewDirective, Inject, Resize, DragAndDrop } from '@syncfusion/ej2-react-schedule';\r\n\r\nimport { SampleBase } from './sample-base';\r\n/**\r\n * schedule resources group sample\r\n */\r\nexport class Group extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.resourceData = [\r\n            { AirlineName: 'Airways 1', AirlineId: 1, AirlineColor: '#EA7A57' },\r\n            { AirlineName: 'Airways 2', AirlineId: 2, AirlineColor: '#357cd2' },\r\n            { AirlineName: 'Airways 3', AirlineId: 3, AirlineColor: '#7fa900' }\r\n        ];\r\n    }\r\n    getAirlineImage(value) {\r\n        let airlineName = this.getAirlineName(value);\r\n        return airlineName.replace(' ', '-').toLowerCase();\r\n    }\r\n    getAirlineName(value) {\r\n        return ((value.resourceData) ?\r\n            value.resourceData[value.resource.textField] :\r\n            value.resourceName);\r\n    }\r\n    getAirlineModel(value) {\r\n        let airlineName = this.getAirlineName(value);\r\n        return (airlineName === 'Airways 1') ? 'CRJ 700' : (airlineName === 'Airways 2') ? 'Airbus A330' : 'ATR 72-600';\r\n    }\r\n    getAirlineSeats(value) {\r\n        let airlineName = this.getAirlineName(value);\r\n        return (airlineName === 'Airways 1') ? 50 : (airlineName === 'Airways 2') ? 75 : 100;\r\n    }\r\n    resourceHeaderTemplate(props) {\r\n        return (<div className=\"template-wrap\"><div className={\"airline-image \" + this.getAirlineImage(props)}></div>\r\n            <div className=\"airline-details\"><div className=\"airline-name\">{this.getAirlineName(props)}</div>\r\n                <div className=\"airline-model\"> Model no: {this.getAirlineModel(props)}</div>\r\n                <div className=\"airline-seats\"> No.of seats: {this.getAirlineSeats(props)}</div></div></div>);\r\n    }\r\n    render() {\r\n        return (<div className='schedule-control-section'>\r\n                <div className='col-lg-12 control-section'>\r\n                    <div className='control-wrapper'>\r\n                        <div className='schedule-demo-heading'>\r\n                            Flight timings between Barcelona and Los Angeles\r\n                        </div>\r\n                        <ScheduleComponent cssClass='schedule-group' width='100%' height='650px' selectedDate={new Date(2018, 3, 1)} eventSettings={{\r\n            dataSource: this.generateEvents(), fields: {\r\n                subject: { title: 'Travel Summary', name: 'Subject' },\r\n                location: { title: 'Source', name: 'Location' },\r\n                description: { title: 'Comments', name: 'Description' },\r\n                startTime: { title: 'Departure Time', name: 'StartTime' },\r\n                endTime: { title: 'Arrival Time', name: 'EndTime' }\r\n            }\r\n        }} group={{ resources: ['Airlines'] }} resourceHeaderTemplate={this.resourceHeaderTemplate.bind(this)}>\r\n                            <ResourcesDirective>\r\n                                <ResourceDirective field='AirlineId' title='Airline Name' name='Airlines' allowMultiple={true} dataSource={this.resourceData} textField='AirlineName' idField='AirlineId' colorField='AirlineColor'>\r\n                                </ResourceDirective>\r\n                            </ResourcesDirective>\r\n                            <ViewsDirective>\r\n                                <ViewDirective option='Week'/>\r\n                                <ViewDirective option='Month'/>\r\n                                <ViewDirective option='Agenda'/>\r\n                            </ViewsDirective>\r\n                            <Inject services={[Week, Month, Agenda, Resize, DragAndDrop]}/>\r\n                        </ScheduleComponent>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Group />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}