export const ScheduleSampleOrder: Object = [
    { 'path': 'schedule/default', 'component': 'Default', 'name': 'Default Functionalities', 'order': '01', 'category': 'Scheduler', 'api': '{"ScheduleComponent": [ "height", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how the flat Scheduler looks like with its default set of minimal configurations.' },
    { 'path': 'schedule/local-data', 'component': 'LocalData', 'name': 'Local Data', 'order': '02', 'category': 'Data Binding', 'api': '{"ScheduleComponent": [ "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the way of binding an array of JavaScript objects (local JSON datasource).' },
    { 'path': 'schedule/remote-data', 'component': 'RemoteData', 'name': 'Remote Data', 'order': '02', 'category': 'Data Binding', 'api': '{"ScheduleComponent": [ "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the way of binding remote services by using the DataManager.' },
    { 'path': 'schedule/calendar-integration', 'component': 'CalendarIntegration', 'name': 'Sync Google Calendar', 'order': '02', 'category': 'Appointments', 'api': '{"ScheduleComponent": [ "eventSettings", "dataBinding","selectedDate" ] }', 'description': 'This example illustrates how to integrate the Google Calendar events into HTML5 JavaScript Scheduler.' },
    { 'path': 'schedule/recurrence-events', 'component': 'RecurrenceEvents', 'name': 'Recurring Events', 'order': '03', 'category': 'Appointments', 'api': '{"ScheduleComponent": [ "width", "height", "currentView", "selectedDate", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the scheduler with recurring meetings handled on a regular pattern.' },
    { 'path': 'schedule/block-events', 'component': 'BlockEvents', 'name': 'Blocking Dates and Time', 'order': '03', 'category': 'Appointments', 'api': '{"ScheduleComponent": [ "width", "height", "currentView", "selectedDate", "eventSettings","group","resources" ] }', 'description': 'This example demonstrates how to block specific days or time intervals on HTML5 JavaScript Scheduler.' },
    { 'path': 'schedule/search-events', 'component': 'SearchEvents', 'name': 'Search Events', 'type': 'new', 'order': '03', 'category': 'Appointments', 'api': '{"ScheduleComponent": [ "height", "eventSettings", "selectedDate" ] }', 'description': 'This example showcases how to search the events of HTML5 JavaScript Scheduler based on specific field criteria.' },
    { 'path': 'schedule/timezone', 'component': 'TimeZone', 'name': 'Timezone', 'order': '03', 'category': 'Appointments', 'api': '{"ScheduleComponent": [ "timezone", "selectedDate", "eventSettings", "eventRendered" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how the events are displayed in different timings as per the selected timezone.' },
    { 'path': 'schedule/external-drag-drop', 'component': 'ExternalDragDrop', 'name': 'External Drag and Drop', 'order': '03', 'category': 'Appointments', 'api': '{"ScheduleComponent": [ "currentView", "eventSettings","resourceHeaderTemplate", "cssClass", "workHours", "views", "group", "resources", "actionBegin", "drag" ] }', 'description': 'This example shows how to drag and drop the events from an external source into HTML5 JavaScript scheduler.' },
    { 'path': 'schedule/virtual-scrolling', 'component': 'VirtualScrolling', 'name': 'Virtual Scrolling', 'hideOnDevice': 'true', 'order': '04', 'category': 'Scrolling', 'api': '{"ScheduleComponent": ["views", "group", "resources", "eventSettings" ] }', 'description': 'This example illustrates how to enable the virtual loading of resources and its events in React Scheduler.' },
    { 'path': 'schedule/views', 'component': 'Views', 'name': 'Basic Views', 'order': '05', 'category': 'Views', 'api': '{"ScheduleComponent": [ "currentView", "views", "selectedDate", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the usage of basic views such as Day, Week, Work Week and Month.' },
    { 'path': 'schedule/timeline', 'component': 'TimelineView', 'name': 'Timeline Views', 'order': '05', 'category': 'Views', 'api': '{"ScheduleComponent": [ "height", "eventSettings", "selectedDate"  ] }', 'description': 'This example for Essential JS2 Scheduler control shows how the timeline scheduler looks like with its default set of configurations.' },
    { 'path': 'schedule/agenda', 'component': 'AgendaView', 'name': 'Agenda View', 'order': '05', 'category': 'Views', 'api': '{"ScheduleComponent": [ "agendaDaysCount", "hideEmptyAgendaDays", "currentView", "views", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the agenda view and the configurations available in it.' },
    { 'path': 'schedule/month-agenda', 'component': 'MonthAgendaView', 'name': 'Month Agenda View', 'order': '05', 'category': 'Views', 'api': '{"ScheduleComponent": [ "currentView", "views",  "selectedDate", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the layout of Month Agenda view and how it works.' },
    { 'path': 'schedule/views-configuration', 'component': 'ViewConfigurations', 'name': 'Individual View Settings', 'order': '05', 'category': 'Views', 'api': '{"ScheduleComponent": [ "currentView", "views", "selectedDate", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to customize each of the view with specific configurations.' },
    { 'path': 'schedule/extended-views', 'component': 'ExtendedViews', 'name': 'View Intervals', 'order': '05', 'category': 'Views', 'api': '{"ScheduleComponent": [ "currentView", "views", "selectedDate", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to display n number of days, weeks and months on a single view.' },
    { 'path': 'schedule/timeline-resources', 'component': 'TimelineResource', 'name': 'Room Scheduler', 'order': '06', 'category': 'Multiple Resources', 'api': '{"ScheduleComponent": [ "currentView", "views", "selectedDate", "eventSettings", "resourceHeaderTemplate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to design the room scheduling calendar and manage the events booked on a particular time interval.' },
    { 'path': 'schedule/resources', 'component': 'Resources', 'name': 'Fare Calendar', 'order': '06', 'category': 'Multiple Resources', 'api': '{"ScheduleComponent": [ "currentView", "views", "selectedDate", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to customize the scheduler to showcase it as an Airfare calendar.' },
    { 'path': 'schedule/resource', 'component': 'Resource', 'name': 'Resources', 'order': '06', 'type': 'new', 'category': 'Multiple Resources', 'api': '{"ScheduleComponent": [ "height", "eventSettings", "selectedDate" ] }', 'description': 'This example depicts how to show or hide the resource events on JavaScript Scheduler based on the resource selection.' },
    { 'path': 'schedule/group-editing', 'component': 'GroupEditing', 'name': 'Shared Events', 'order': '06', 'category': 'Multiple Resources', 'api': '{"ScheduleComponent": [ "resourceHeaderTemplate", "group", "resources", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the usage of single event that are shared by multiple resources.' },
    { 'path': 'schedule/group-custom-work-days', 'component': 'GroupCustomWorkDays', 'name': 'Different Work Days', 'order': '06', 'category': 'Multiple Resources', 'api': '{"ScheduleComponent": [ "resourceHeaderTemplate", "group", "resources", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to set different working days for each of the resources.' },
    { 'path': 'schedule/add-remove-resources', 'component': 'AddRemoveResources', 'name': 'Show/Hide Resources', 'order': '06', 'category': 'Multiple Resources', 'api': '{"ScheduleComponent": [ "currentView", "views", "selectedDate", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to dynamically add or remove the resources to and from the scheduler layout.' },
    { 'path': 'schedule/adaptive-rows', 'component': 'AdaptiveRows', 'name': 'Row Auto Height', 'order': '06', 'type': 'new', 'category': 'Multiple Resources', 'api': '{"ScheduleComponent": [ "rowAutoHeight", "currentView", "views", "selectedDate", "eventSettings" ] }', 'description': 'This example showcases how the work cells of Essential JS2 Scheduler auto adjusts its height based on the exceeding appointment count.' },
    { 'path': 'schedule/resource-grouping', 'component': 'Group', 'name': 'Horizontal Grouping', 'order': '07', 'category': 'Resource Grouping', 'api': '{"ScheduleComponent": [ "resourceHeaderTemplate", "group", "resources", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how the calendars of multiple resources are grouped in default view layouts.' },
    { 'path': 'schedule/timeline-resource-grouping', 'component': 'TimelineGrouping', 'name': 'Timeline Grouping', 'order': '07', 'category': 'Resource Grouping', 'api': '{"ScheduleComponent": [ "group", "resources", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how the calendars of multiple resources are grouped in timeline view layouts.' },
    { 'path': 'schedule/group-by-date', 'component': 'GroupByDate', 'name': 'Date-wise Grouping', 'order': '07', 'category': 'Resource Grouping', 'api': '{"ScheduleComponent": [  "group", "resources", "eventSettings" ] }', 'description': 'This example demonstrates how the resources of Essential JS2 Scheduler control are grouped based on dates.' },
    { 'path': 'schedule/group-by-child', 'component': 'GroupByChild', 'name': 'Hierarchical Grouping', 'order': '07', 'category': 'Resource Grouping', 'api': '{"ScheduleComponent": [ "startHour", "endHour", "group", "resources", "eventSettings" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to group the child level resources against each of the parent level resources.' },
    { 'path': 'schedule/cell-template', 'component': 'CellTemplate', 'name': 'Cell', 'order': '08', 'category': 'Template', 'api': '{"ScheduleComponent": [ "width", "height", "cellTemplate", "views", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to customize the background of the specific cells using cell template option.' },
    { 'path': 'schedule/date-header-template', 'component': 'DateHeaderTemplate', 'name': 'Date Header', 'order': '08', 'category': 'Template', 'api': '{"ScheduleComponent": [ "cssClass", "dateHeaderTemplate", "eventRendered", "eventSettings", "renderCell" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to customize the date header cells using the template option.' },
    { 'path': 'schedule/event-template', 'component': 'EventTemplate', 'name': 'Events', 'order': '08', 'category': 'Template', 'api': '{"ScheduleComponent": [ "width", "height", "cellTemplate", "views", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to customize the appearance of events using event template option.' },
    { 'path': 'schedule/tooltip', 'component': 'Tooltip', 'name': 'Tooltip', 'order': '08', 'category': 'Template', 'api': '{"ScheduleComponent": [ "width", "height", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to display tooltip over events as well as the way to customize it using template option.' },
    { 'path': 'schedule/editor-validation', 'component': 'EditorFieldValidation', 'name': 'Field Validation', 'order': '09', 'category': 'Editor Window', 'api': '{"ScheduleComponent": [ "width", "height", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the way of adding default and custom validation rules to the editor fields of scheduler.' },
    { 'path': 'schedule/editor-custom-field', 'component': 'EditorCustomField', 'name': 'Additional Fields', 'order': '09', 'category': 'Editor Window', 'api': '{"ScheduleComponent": [ "selectedDate", "eventSettings", "popupOpen" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to add additional fields to the default editor window.' },
    { 'path': 'schedule/editor-template', 'component': 'EditorTemplate', 'name': 'Editor Template', 'order': '09', 'category': 'Editor Window', 'api': '{"ScheduleComponent": [ "editorTemplate", "showQuickInfo", "eventRendered", "popupOpen", "actionBegin" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the way of customizing the default editor window with custom template design.' },
    { 'path': 'schedule/header-rows', 'component': 'HeaderRows', 'name': 'Header Rows', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [  "height",  "eventSettings", "selectedDate" ,"headerRows" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to display the additional header rows on timeline view.' },
    { 'path': 'schedule/time-scale', 'component': 'Timescale', 'name': 'Timescale', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "width", "height", "views", "timeScale" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to customize the grid lines of scheduler with different duration and count' },
    { 'path': 'schedule/context-menu', 'component': 'ContextMenu', 'name': 'Context Menu', 'order': '10', 'category': 'Schedule', 'api': '{"ScheduleComponent": [ "height", "eventSettings", "selectedDate" ] }', 'description': 'This example shows how to enable the context menu on React Scheduler and perform the related actions using menu options.' },
    { 'path': 'schedule/header-bar', 'component': 'HeaderBar', 'name': 'Header Bar', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "width", "height", "workHours", "views", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the way of adding custom items onto the scheduler header bar.' },
    { 'path': 'schedule/scroll-to', 'component': 'ScrollTo', 'name': 'Scroll Time', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "width", "height", "eventSettings", "eventRendered", "scrollTo" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the way of manually scrolling to specific time on scheduler.' },
    { 'path': 'schedule/work-days', 'component': 'WorkDays', 'name': 'Work Days', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "workDays", "views", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control showcases how to set customized working days as well as first day of a week on scheduler.' },
    { 'path': 'schedule/hide-weekend', 'component': 'HideWeekend', 'name': 'Hide Non-Working Days', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "showWeekend" ] }', 'description': 'This example for Essential JS2 Scheduler control depicts the way to show or hide the weekend days of a week.' },
    { 'path': 'schedule/work-hours', 'component': 'WorkHours', 'name': 'Work Hours', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "workHours", "views", "eventSettings", "selectedDate" ] }', 'description': 'This example for Essential JS2 Scheduler control showcases how to set the work hour range on scheduler.' },
    { 'path': 'schedule/start-end-hour', 'component': 'DayHourLimit', 'name': 'Day Hour Limit', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "startHour", "endHour", "workHours", "eventRendered" ] }', 'description': 'This example for Essential JS2 Scheduler control depicts how to restrict the start and end hours on scheduler.' },
    { 'path': 'schedule/cell-dimension', 'component': 'CellDimension', 'name': 'Cell Dimension', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "cssClass", "showTimeIndicator", "eventRendered", "created",  "actionComplete" ] }', 'description': 'This example for Essential JS2 Scheduler control shows how to set the width and height of the cells by overriding the default CSS classes.' },
    { 'path': 'schedule/read-only-events', 'component': 'ReadonlyEvents', 'name': 'Read-only Events', 'order': '10', 'category': 'Customization', 'api': '{"ScheduleComponent": [ "eventSettings", "eventRendered", "eventClick", "popupOpen", "eventRendered"] }', 'description': 'This example for Essential JS2 Scheduler control shows how to make specific events on the scheduler to be displayed in a read-only mode.' },
    { 'path': 'schedule/excel-export', 'component': 'ExportToExcel', 'name': 'Excel Exporting', 'type': 'new', 'order': '13', 'category': 'Exporting', 'api': '{"ScheduleComponent": [ "height", "eventSettings", "selectedDate" ] }', 'description': 'This example demonstrates how to export the Essential JS2 Scheduler events to the excel file format at client-side.' },
    { 'path': 'schedule/calendar-export-import', 'component': 'CalendarImportExport', 'name': 'Export and Import ICS', 'type': 'new', 'order': '13', 'category': 'Exporting', 'api': '{"ScheduleComponent": [ "importICalendar", "exportToICalendar"] }', 'description': 'This example shows how to export the Scheduler events to a calendar file, and also how to import events from an .ics file into our Essential JS2 Scheduler.' },
    { 'path': 'schedule/recurrence-editor-generate-rule', 'component': 'RuleGenerate', 'name': 'Rule Generator', 'order': '11', 'category': 'Recurrence Editor', 'description': 'This example for Essential JS2 Scheduler control showcases the recurrence rule generation based on the options selected from the recurrence editor.' },
    { 'path': 'schedule/recurrence-editor-populate-rule', 'component': 'PopulateRule', 'name': 'Populate Rule', 'order': '11', 'category': 'Recurrence Editor', 'description': 'This example for Essential JS2 Scheduler control shows how to fill the recurrence editor fields with values based on the provided recurrence rule string.' },
    { 'path': 'schedule/keyboard-interaction', 'component': 'KeyboardInteraction', 'name': 'Keyboard Interaction', 'hideOnDevice': 'true', 'order': '12', 'category': 'Miscellaneous', 'api': '{"ScheduleComponent": [ "width", "height", "eventSettings", "selectedDate", "allowKeyboardInteraction" ] }', 'description': 'This example for Essential JS2 Scheduler control showcases the keyboard shortcuts available on scheduler.' },
    { 'path': 'schedule/events', 'component': 'Events', 'name': 'Events', 'order': '12', 'category': 'Miscellaneous', 'api': '{"ScheduleComponent": [ "width", "height", "eventSettings",  "eventRendered", "created", "actionBegin", "actionComplete", "actionFailure", "cellClick", "cellDoubleClick", "destroyed", "navigating", "eventClick", "popupOpen" ] }', 'description': 'This example for Essential JS2 Scheduler control shows the client-side events that triggers on respective scheduler actions.' }
]