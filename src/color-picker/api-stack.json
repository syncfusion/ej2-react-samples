{"index.css":"#api-control {\r\n    margin: 30px auto;\r\n    padding-top: 50px;\r\n    text-align: center;\r\n}\r\n\r\n.property-panel-content{\r\n    overflow: auto;\r\n}\r\n\r\n#api-control h4 {\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.e-bigger #api-control h4 {\r\n    font-size: 20px;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { ColorPickerComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\n\r\nexport class Api extends SampleBase {\r\n    constructor() {\r\n        super();\r\n        this.type = [{ mode: 'Picker' }, { mode: 'Palette' }];\r\n        this.ddlFields = { text: 'mode', value: 'mode' };\r\n        this.state = {\r\n            colorValue: '#0db1e7',\r\n            mode: 'Picker',\r\n            disabled: false,\r\n            showButtons: true,\r\n            modeSwitcher: true\r\n        };\r\n    }\r\n    onDdlChange(args) {\r\n        this.setState({ mode: args.value });\r\n    }\r\n    onDisableChange(args) {\r\n        this.setState({ disabled: args.checked });\r\n    }\r\n    onButtonChange(args) {\r\n        this.setState({ showButtons: args.checked });\r\n    }\r\n    onModeChange(args) {\r\n        this.setState({ modeSwitcher: args.checked });\r\n    }\r\n    changeValue(e) {\r\n        const val = e.target.value;\r\n        // Sets to color picker default color value if user types the invalid hex code.\r\n        this.setState({ colorValue: val && val.length > 2 ? (val[0] !== '#' ? `#${val}` : val) : '#008000' });\r\n    }\r\n    rendereComplete() {\r\n        this.refs.hexInput.value = this.state.colorValue;\r\n    }\r\n    onChange(args) {\r\n        this.refs.hexInput.value = args.currentValue.hex;\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div className='control-section'>\r\n          <div id='api-control' className='col-lg-8'>\r\n            <h4>Choose a color</h4>\r\n            <ColorPickerComponent id='color-picker' mode={this.state.mode} disabled={this.state.disabled} showButtons={this.state.showButtons} value={this.state.colorValue} modeSwitcher={this.state.modeSwitcher} change={this.onChange.bind(this)}></ColorPickerComponent>\r\n          </div>\r\n          <div className='col-lg-4 property-section'>\r\n            <PropertyPane title='Properties'>\r\n              <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: '50%' }}>\r\n                      <div>Value</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px' }}>\r\n                      <div style={{ maxWidth: '200px' }}>\r\n                        <input id=\"hex-input\" ref=\"hexInput\" type=\"text\" className=\"e-input\" maxLength={9} onInput={this.changeValue.bind(this)}/>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: '50%' }}>\r\n                      <div>Mode</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px' }}>\r\n                      <div style={{ maxWidth: '200px' }}>\r\n                        <DropDownListComponent id=\"ddlelement\" dataSource={this.type} fields={this.ddlFields} value='Picker' change={this.onDdlChange.bind(this)} popupHeight=\"220px\"/>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: '50%', paddingTop: '13px' }}>\r\n                      <div>Disable</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px', paddingTop: '13px' }}>\r\n                      <CheckBoxComponent id=\"disabled\" checked={false} change={this.onDisableChange.bind(this)}/>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: '50%', paddingTop: '15px' }}>\r\n                      <div>Show Buttons</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px', paddingTop: '15px' }}>\r\n                      <CheckBoxComponent id=\"button\" checked={true} change={this.onButtonChange.bind(this)}/>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: '50%', paddingTop: '15px', paddingBottom: '10px' }}>\r\n                      <div>Mode Switcher</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px', paddingTop: '15px', paddingBottom: '10px' }}>\r\n                      <CheckBoxComponent id=\"mode-switch\" checked={true} change={this.onModeChange.bind(this)}/>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </PropertyPane>\r\n          </div>\r\n        </div>\r\n\r\n\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<Api />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}