{"index.css":"#listbox-api-control {\r\n    width: 49%;\r\n    margin: auto;\r\n    margin-bottom: 15px;\r\n}\r\n@media screen and (max-width: 590px) {\r\n    #listbox-api-control {\r\n        width: 100%;\r\n    }\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","dataSource.json":"{\r\n    \"groupa\":[\r\n        { \"Name\": \"Australia\", \"Code\": \"AU\" },\r\n        { \"Name\": \"Bermuda\", \"Code\": \"BM\" },\r\n        { \"Name\": \"Canada\", \"Code\": \"CA\" },\r\n        { \"Name\": \"Cameroon\", \"Code\": \"CM\" },\r\n        { \"Name\": \"Denmark\", \"Code\": \"DK\" },\r\n        { \"Name\": \"France\", \"Code\": \"FR\" },\r\n        { \"Name\": \"Finland\", \"Code\": \"FI\" },\r\n        { \"Name\": \"Germany\", \"Code\": \"DE\" },\r\n        { \"Name\": \"Hong Kong\", \"Code\": \"HK\" }\r\n    ],\r\n    \"groupb\": [\r\n        { \"Name\": \"India\", \"Code\": \"IN\" },\r\n        { \"Name\": \"Italy\", \"Code\": \"IT\" },\r\n        { \"Name\": \"Japan\", \"Code\": \"JP\" },\r\n        { \"Name\": \"Mexico\", \"Code\": \"MX\" },\r\n        { \"Name\": \"Norway\", \"Code\": \"NO\" },\r\n        { \"Name\": \"Poland\", \"Code\": \"PL\" },\r\n        { \"Name\": \"Switzerland\", \"Code\": \"CH\" },\r\n        { \"Name\": \"United Kingdom\", \"Code\": \"GB\" },\r\n        { \"Name\": \"United States\", \"Code\": \"US\" }\r\n    ],\r\n    \"dragAndDropA\":[\r\n        { \"Name\": \"Australia\", \"Code\": \"AU\" },\r\n        { \"Name\": \"Bermuda\", \"Code\": \"BM\" },\r\n        { \"Name\": \"Canada\", \"Code\": \"CA\" },\r\n        { \"Name\": \"Cameroon\", \"Code\": \"CM\" },\r\n        { \"Name\": \"Denmark\", \"Code\": \"DK\" },\r\n        { \"Name\": \"France\", \"Code\": \"FR\" },\r\n        { \"Name\": \"Finland\", \"Code\": \"FI\" },\r\n        { \"Name\": \"Germany\", \"Code\": \"DE\" },\r\n        { \"Name\": \"Hong Kong\", \"Code\": \"HK\" }\r\n    ],\r\n    \"dragAndDropB\": [\r\n        { \"Name\": \"India\", \"Code\": \"IN\" },\r\n        { \"Name\": \"Italy\", \"Code\": \"IT\" },\r\n        { \"Name\": \"Japan\", \"Code\": \"JP\" },\r\n        { \"Name\": \"Mexico\", \"Code\": \"MX\" },\r\n        { \"Name\": \"Norway\", \"Code\": \"NO\" },\r\n        { \"Name\": \"Poland\", \"Code\": \"PL\" },\r\n        { \"Name\": \"Switzerland\", \"Code\": \"CH\" },\r\n        { \"Name\": \"United Kingdom\", \"Code\": \"GB\" },\r\n        { \"Name\": \"United States\", \"Code\": \"US\" }\r\n    ],\r\n    \"vegetableData\": [\r\n        { \"Vegetable\": \"Cabbage\", \"Category\": \"Leafy and Salad\", \"Id\": \"item1\" },\r\n        { \"Vegetable\": \"Spinach\", \"Category\": \"Leafy and Salad\", \"Id\": \"item2\" },\r\n        { \"Vegetable\": \"Wheat grass\", \"Category\": \"Leafy and Salad\", \"Id\": \"item3\" },\r\n        { \"Vegetable\": \"Yarrow\", \"Category\": \"Leafy and Salad\", \"Id\": \"item4\" },\r\n        { \"Vegetable\": \"Pumpkins\", \"Category\": \"Leafy and Salad\", \"Id\": \"item5\" },\r\n        { \"Vegetable\": \"Chickpea\", \"Category\": \"Beans\", \"Id\": \"item6\" },\r\n        { \"Vegetable\": \"Green bean\", \"Category\": \"Beans\", \"Id\": \"item7\" },\r\n        { \"Vegetable\": \"Horse gram\", \"Category\": \"Beans\", \"Id\": \"item8\" },\r\n        { \"Vegetable\": \"Garlic\", \"Category\": \"Bulb and Stem\", \"Id\": \"item9\" },\r\n        { \"Vegetable\": \"Nopal\", \"Category\": \"Bulb and Stem\", \"Id\": \"item10\" },\r\n        { \"Vegetable\": \"Onion\", \"Category\": \"Bulb and Stem\", \"Id\": \"item11\" }\r\n    ],\r\n    \"info\": [\r\n        { \"text\": \"Hennessey Venom\", \"id\": \"list-01\" },\r\n        { \"text\": \"Bugatti Chiron\", \"id\": \"list-02\" },\r\n        { \"text\": \"Bugatti Veyron Super Sport\", \"id\": \"list-03\" },\r\n        { \"text\": \"SSC Ultimate Aero\", \"id\": \"list-04\" },\r\n        { \"text\": \"Koenigsegg CCR\", \"id\": \"list-05\" },\r\n        { \"text\": \"McLaren F1\", \"id\": \"list-06\" },\r\n        { \"text\": \"Aston Martin One- 77\", \"id\": \"list-07\" },\r\n        { \"text\": \"Jaguar XJ220\", \"id\": \"list-08\" },\r\n        { \"text\": \"McLaren P1\", \"id\": \"list-09\" },\r\n        { \"text\": \"Ferrari LaFerrari\", \"id\": \"list-10\" }\r\n    ],\r\n    \"sort\": [{ \"type\": \"None\" }, { \"type\": \"Ascending\" }, { \"type\": \"Descending\" }],\r\n    \"selectionMode\": [{ \"type\": \"Single\" }, { \"type\": \"Multiple\" }]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { ListBoxComponent, DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport * as data from './dataSource.json';\r\n\r\nexport class Api extends SampleBase {\r\n    constructor() {\r\n        super();\r\n        // Set the vegetableData to the data source.\r\n        this.data = data[\"vegetableData\"];\r\n        this.ddlData1 = data[\"sort\"];\r\n        this.ddlData2 = data[\"selectionMode\"];\r\n        // Map the appropriate columns to fields property along with groupBy option.\r\n        this.fields = { groupBy: 'Category', text: 'Vegetable', value: 'Id' };\r\n        this.ddlFields = { text: 'type', value: 'type' };\r\n        this.state = {\r\n            sortOrder: 'None',\r\n            selectionSettings: { mode: 'Multiple' }\r\n        };\r\n    }\r\n    sortChange(args) {\r\n        this.setState({ sortOrder: args.value });\r\n    }\r\n    selectionChange(args) {\r\n        this.setState({ selectionSettings: { mode: args.value } });\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className=\"col-lg-8 control-section\">\r\n                    <div id=\"listbox-api-control\">\r\n                        <ListBoxComponent dataSource={this.data} fields={this.fields} sortOrder={this.state.sortOrder} selectionSettings={this.state.selectionSettings}/>\r\n                    </div>\r\n                </div>\r\n                <div className='col-lg-4 property-section'>\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\" style={{ width: '100%' }}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ width: '50%', paddingTop: '10px' }}>\r\n                                        <div>Sort order</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%', paddingTop: '10px' }}>\r\n                                        <div style={{ maxWidth: '200px' }}>\r\n                                            <DropDownListComponent dataSource={this.ddlData1} fields={this.ddlFields} change={this.sortChange.bind(this)} value='None' popupHeight='200px'/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ width: '50%', paddingTop: '10px' }}>\r\n                                        <div>Selection Mode</div>\r\n                                    </td>\r\n                                    <td style={{ width: '50%', paddingTop: '10px' }}>\r\n                                        <div style={{ maxWidth: '200px' }}>\r\n                                            <DropDownListComponent dataSource={this.ddlData2} fields={this.ddlFields} change={this.selectionChange.bind(this)} value='Multiple' popupHeight='200px'/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Api />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}