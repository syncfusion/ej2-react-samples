{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for Dynamic Stock Chart\r\n */\r\nimport * as React from \"react\";\r\nimport { StockChartComponent, StockChartSeriesCollectionDirective, StockChartSeriesDirective, Inject, Crosshair, DateTime, LineSeries, SplineSeries, CandleSeries, HiloOpenCloseSeries, HiloSeries, RangeAreaSeries, Trendlines } from '@syncfusion/ej2-react-charts';\r\nimport { EmaIndicator, RsiIndicator, BollingerBands, TmaIndicator, MomentumIndicator, SmaIndicator, AtrIndicator, AccumulationDistributionIndicator, MacdIndicator, StochasticIndicator, Export } from '@syncfusion/ej2-react-charts';\r\nimport { SampleBase } from './sample-base';\r\nconst SAMPLE_CSS = `\r\n.control-fluid {\r\n    padding: 0px !important;\r\n}\r\n    .charts {\r\n        align :center\r\n    }`;\r\nlet series1 = [];\r\nlet point1;\r\nlet value = 80;\r\nlet i;\r\nfor (i = 1; i < 1440; i++) {\r\n    if (Math.random() > .5) {\r\n        value += Math.random();\r\n    }\r\n    else {\r\n        value -= Math.random();\r\n    }\r\n    point1 = { x: new Date(2000, 1, 1, 0, i), y: value.toFixed(1) };\r\n    series1.push(point1);\r\n}\r\nexport class PeroidCustomization extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <StockChartComponent id='stockchartperiod' primaryXAxis={{\r\n            valueType: 'DateTime', majorGridLines: { color: 'transparent' },\r\n            crosshairTooltip: { enable: true }\r\n        }} primaryYAxis={{\r\n            lineStyle: { color: 'transparent' },\r\n            majorTickLines: { color: 'transparent', width: 0 },\r\n            crosshairTooltip: { enable: true }\r\n        }} load={this.load.bind(this)} seriesType={[]} indicatorType={[]} exportType={[]} trendlineType={[]} title='AAPL stock price by minutes' titleStyle={{\r\n            fontWeight: '500', color: '#424242 '\r\n        }} periods={[\r\n            { intervalType: 'Minutes', interval: 1, text: '1m' },\r\n            { intervalType: 'Minutes', interval: 30, text: '30m' },\r\n            { intervalType: 'Hours', interval: 1, text: '1H' },\r\n            { intervalType: 'Hours', interval: 12, text: '12H', selected: true },\r\n            { text: '1D' }\r\n        ]} crosshair={{ enable: true }} chartArea={{ border: { width: 0 } }}>\r\n                        <Inject services={[DateTime, Crosshair, LineSeries, SplineSeries, CandleSeries, HiloOpenCloseSeries, HiloSeries, RangeAreaSeries, Trendlines,\r\n            EmaIndicator, RsiIndicator, BollingerBands, TmaIndicator, MomentumIndicator, SmaIndicator, AtrIndicator, Export,\r\n            AccumulationDistributionIndicator, MacdIndicator, StochasticIndicator]}/>\r\n                        <StockChartSeriesCollectionDirective>\r\n                            <StockChartSeriesDirective dataSource={series1} xName='x' yName='y' type='Line'>\r\n                            </StockChartSeriesDirective>\r\n                        </StockChartSeriesCollectionDirective>\r\n                    </StockChartComponent>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<PeroidCustomization />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}