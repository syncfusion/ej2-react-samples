export const PdfViewerSampleOrder:Object = [
    { 'path': 'pdfviewer/default', 'component':'Default', 'name': 'Default Functionalities', 'order': '01', 'category': 'PDF Viewer', 'description': 'This demo for Essential JS 2 PdfViewer shows the default rendering of the PdfViewer with minimum configuration.' , 'api':'{"PdfViewerComponent":["serviceUrl", "documentPath"] }'},
    { 'path': 'pdfviewer/read-only', 'component': 'ReadOnly', 'name': 'Read-Only', 'order': '02', 'category': 'Document Security', 'description':  'The illustration demonstrates the PDF viewer in read-only mode, preventing edits to annotations,form fields, and disabling text selection.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/document-list','description': 'This demo illustrates how to display the list of documents in grid layout and open the document for viewing or editing using PDFViewer editor in Dialog.', 'component':'DocumentList', 'name': 'Document List', 'order': '03', 'category': 'File Management', 'api':'{"PdfViewerComponent":["serviceUrl", "documentPath"] }'},
    { 'path': 'pdfviewer/multi-format-viewer', 'description': 'This sample shows how it loads various file types like PDFs, images, and Microsoft Office documents (Word, Excel, PowerPoint) into the PDF Viewer.', 'component':'MultiFormatViewer', 'name': ' Multi-Format Viewer', 'order': '03', 'category': 'File Management', 'api':'{"PdfViewerComponent":["serviceUrl", "documentPath"] }'},
    { 'path': 'pdfviewer/organize-pages', 'type': 'update', 'component': 'OrganizePages', 'name': 'Organize Pages', 'order': '04', 'category': 'Editor', 'description': 'This sample demonstrates the page organization features of the PDF Viewer component, allowing users to effortlessly insert, delete, and rotate pages.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/redaction','component': 'Redaction', 'name': 'Redaction', 'order': '04', 'category': 'Editor', 'description': 'This PDF viewer Sample facilitates the permanent removal of sensitive or confidential data from PDF files.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/custom-toolbar' ,'component': 'CustomToolbar', 'name': 'Toolbar', 'order': '05', 'category': 'Customization', 'description': 'This demo for Essential JS 2 PdfViewer shows the default rendering of the PdfViewer with custom toolbar configuration.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath","documentLoad","pageChange","enableToolbar"] }'},
    { 'path': 'pdfviewer/custom-context-menu','component': 'CustomContextMenu', 'name': 'Context Menu', 'order': '05', 'category': 'Customization', 'description': 'This demo for Essential JS 2 PdfViewer shows the default rendering of the PdfViewer with custom context menu configuration.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath","documentLoad","pageChange","enableToolbar"] }'},
    { 'path': 'pdfviewer/right-to-left', 'component': 'RightToLeft', 'name': 'Right To Left', 'order': '06', 'category': 'Localization', 'description': 'This demo for Essential JS 2 PdfViewer shows the default rendering of the PdfViewer with Right To Left Configuration.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath","enableRtl"] }'},
    { 'path': 'pdfviewer/form-filling', 'component': 'FormFilling', 'name': 'Form Filling', 'order': '07', 'category': 'PDF Form', 'description': 'This demo for Essential JS 2 PdfViewer shows the default rendering of the PdfViewer with Form Filling Configuration.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath"] }' },
    { 'path': 'pdfviewer/form-designer', 'component': 'FormDesignerComponent', 'name': 'Form Designer', 'order': '07', 'category': 'PDF Form', 'description': 'This sample demonstrates the creation of different types of annotations such as text markup, shapes, measurements, free text, stamps, etc. in the PDF viewer.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/esigning-form-designer', 'component': 'ESignFormDesigner', 'name': 'eSigning Form Designer', 'order': '07', 'category': 'PDF Form', 'description': 'This sample demonstrates the creation of different types of annotations such as text markup, shapes, measurements, free text, stamps, etc. in the PDF viewer.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/esigning-pdf-forms', 'component': 'ESigningPdfForms', 'name': 'eSigning PDF Forms', 'order': '07', 'category': 'PDF Form', 'description': 'This sample demonstrates the creation of different types of annotations such as text markup, shapes, measurements, free text, stamps, etc. in the PDF viewer.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/annotations', 'type': 'update', 'component': 'Annotations', 'name': 'Annotations', 'order': '08', 'category': 'Annotation', 'description': 'This sample demonstrates the creation of different types of annotations such as text markup, shapes, measurements, free text, stamps, etc. in the PDF viewer.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/programmatic-operations', 'type': 'update', 'component': 'ProgrammaticOperations', 'name': 'Programmatic Operations', 'order': '08', 'category': 'Annotation', 'description': 'This sample showcases how to programmatically create or edit various types of annotations in the PDF Viewer.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/hand-written', 'component': 'HandWrittenSignature', 'name': 'Handwritten Signature', 'order': '09', 'category': 'Signature', 'description': 'This sample shows the handwritten signature and initial support of PDF viewer. The signature or initial support reduces the paperwork.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'},
    { 'path': 'pdfviewer/invisible-signature','component': 'InvisibleSignature', 'name': 'Invisible Signature', 'order': '09', 'category': 'Signature', 'description': 'This sample demonstrates how to digitally sign a PDF document from code behind using Syncfusions PDF Viewer and PDF Library.', 'api': '{"PdfViewerComponent":["serviceUrl", "documentPath", "documentLoad"]}'}
]