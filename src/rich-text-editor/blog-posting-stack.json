{"index.css":"\r\n#rteUseCase .control-wrapper .tagSection {\r\n    float: left;\r\n}\r\n\r\n#rteUseCase .control-wrapper .likeAnswer span.e-icon {\r\n    float: left;\r\n}\r\n\r\n#rteUseCase .control-wrapper img.e-icon {\r\n    width: 13px;\r\n    height: 25px;\r\n}\r\n\r\n#rteUseCase .control-wrapper span.questionSide {\r\n    margin-left: 24px;\r\n    float: left;\r\n}\r\n\r\n#rteUseCase .control-wrapper .e-dislike {\r\n    margin-left: 16px;\r\n    float: left;\r\n}\r\n\r\n#rteUseCase .control-wrapper .questionHeader {\r\n    margin-top: 12px;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .header {\r\n    font-size: 16px;\r\n    font-family: roboto-Semibold, SegoeUI-Semibold;\r\n    color: #000000;\r\n    font-weight: bold;\r\n    clear: both;\r\n}\r\n\r\n.highcontrast #rteUseCase .control-wrapper .header {\r\n    color: #fff;    \r\n}\r\n\r\n@media (max-width: 550px) {\r\n    #rteUseCase .control-wrapper .forum {\r\n        padding: 20px 20px 60px 20px;\r\n    }\r\n}\r\n\r\n@media (min-width: 550px) {\r\n    #rteUseCase .control-wrapper .forum {\r\n        margin: 0 auto;\r\n        width: 80%;\r\n        border: 1px solid #d8d8c0;\r\n        padding: 10px 90px 60px 90px;\r\n        box-shadow: 2px 2px 2px 2px #f5f5ef;\r\n    }\r\n    .highcontrast #rteUseCase .control-wrapper .forum {\r\n        border: 1px solid #fff;\r\n    }\r\n}\r\n\r\n#rteUseCase .control-wrapper .e-like span {\r\n    font-family: Helvetica, Times New Roman;\r\n    color: #E3175A;\r\n    font-size: 12px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .e-dislike span {\r\n    font-family: Helvetica, Times New Roman;\r\n    color: #717171;\r\n    font-size: 12px;\r\n\r\n}\r\n\r\n#rteUseCase .control-wrapper .detailsQuestion {\r\n    font-size: 12px;\r\n    font-family: roboto, SegoeUI;\r\n    color: #575757;\r\n    margin-top: 8px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .explain {\r\n    margin-top: 16px;\r\n    font-size: 13px;\r\n    font-family: roboto, SegoeUI;\r\n    color: #000000;\r\n}\r\n\r\n.highcontrast #rteUseCase .control-wrapper .explain {\r\n    color: #fff;\r\n}\r\n\r\n#rteUseCase .control-wrapper .separator {\r\n    margin-top: 5px;\r\n    border-bottom: 1px solid #DADADA;\r\n    margin-bottom: 5px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .tags td:first-child div {\r\n    margin-left: 0px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .tag {\r\n    color: #000000;\r\n    padding: 3px 14px;\r\n    background-color: #DDDDDD;\r\n    font-size: 13px;\r\n    margin-left: 8px;\r\n    border-radius: 6px;\r\n    float: left;\r\n    text-transform: lowercase;\r\n    font-family: roboto, SegoeUI;\r\n}\r\n\r\n#rteUseCase .control-wrapper .answerCount {\r\n    color: #575757;\r\n    margin-top: 24px;\r\n    margin-bottom: 24px;\r\n    font-family: roboto-Semibold, SegoeUI-Semibold;\r\n    width: 63px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .likeAnswer {\r\n    margin-top: 13px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .tags {\r\n    margin-top: 10px;\r\n    margin-bottom: 24px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .questionar {\r\n    width: 32px;\r\n    background: url(./src/rich-text-editor/images/emp1.png);\r\n    height: 32px;\r\n    float: left;\r\n    -ms-flex-line-pack: center;\r\n    align-content: center;\r\n    -ms-flex-align: center;\r\n    align-items: center;\r\n    background-color: #bcbcbc;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    margin-top: 2px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .raiser {\r\n    height: 34px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .Questionarname {\r\n    margin-top: 13px;\r\n    float: left;\r\n    font-weight: 500;\r\n    margin-left: 10px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .your-answer {\r\n    color: #3b3b3b;\r\n    font-weight: 300;\r\n}\r\n\r\n#rteUseCase .control-wrapper .rating {\r\n    padding-left: 10px;\r\n    margin-top: -95px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .logos {\r\n    background: url(./src/rich-text-editor/images/emp2.png);\r\n    height: 32px;\r\n    -ms-flex-line-pack: center;\r\n    align-content: center;\r\n    -ms-flex-align: center;\r\n    align-items: center;\r\n    background-color: #bcbcbc;\r\n    background-position: center;\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    border-radius: 50%;\r\n    color: #fff;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .logo {\r\n    background: url(./src/rich-text-editor/images/author.png) no-repeat scroll 0 0 transparent;\r\n    height: 32px;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .emp1 {\r\n    background: url(./src/rich-text-editor/images/1.png) no-repeat scroll 0 0 transparent;\r\n    height: 32px;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .emp2 {\r\n    background: url(./src/rich-text-editor/images/2.png) no-repeat scroll 0 0 transparent;\r\n    height: 32px;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .emp3 {\r\n    background: url(./src/rich-text-editor/images/3.png) no-repeat scroll 0 0 transparent;\r\n    height: 32px;\r\n    width: 32px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .author {\r\n    margin-bottom: 5px;\r\n    height: 50px;\r\n    margin-top: 5px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .name {\r\n    margin: 5px;\r\n    float: left;\r\n    color: blue;\r\n}\r\n\r\n#rteUseCase .control-wrapper .posting {\r\n    clear: both;\r\n    color: #000;\r\n    line-height: 24px;\r\n    margin-top: 12px;\r\n    font-family: roboto, SegoeUI;\r\n    font-size: 13px;\r\n}\r\n\r\n.highcontrast #rteUseCase .control-wrapper .posting {\r\n    color: #fff;\r\n}\r\n\r\n#rteUseCase .control-wrapper .authorname {\r\n    font-family: SegoeUI-Semibold;\r\n    color: #000000;\r\n    font-size: 13px;\r\n}\r\n\r\n.highcontrast #rteUseCase .control-wrapper .authorname {\r\n    color: #fff;\r\n}\r\n\r\n#rteUseCase .control-wrapper .detailsAnswer {\r\n    color: #575757;\r\n    font-size: 12px;\r\n    font-family: roboto, SegoeUI;\r\n    margin-top: 7px;\r\n}\r\n\r\n#rteUseCase .control-wrapper #buttonSection {\r\n    float: right;\r\n    margin-top: 11px;\r\n\r\n}\r\n\r\n#rteUseCase .control-wrapper #buttonSection button {\r\n    margin-right: 11px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .authorname,\r\n#rteUseCase .control-wrapper .detailsAnswer {\r\n    margin-left: 11px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .answerCount {\r\n    color: #76766f;\r\n    margin-top: 20px;\r\n    margin-bottom: 12px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .questDesc {\r\n    min-height: 120px;\r\n    width: 100%;\r\n}\r\n\r\n#rteUseCase .control-wrapper .answerHeader {\r\n    border-bottom: 1px solid #ced1d1;\r\n    margin-bottom: 20px;\r\n    margin-top: -40px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .answer {\r\n    margin-top: 15px;\r\n}\r\n\r\n#rteUseCase .control-wrapper .editorholder h4 {\r\n    padding: 15px 0;\r\n}\r\n\r\n#rteUseCase .control-wrapper #createpostholder {\r\n    margin-top: 25px;\r\n}\r\n\r\n#rteUseCase .e-richtexteditor .e-rte-content .e-content {\r\n    float: left;\r\n    width: 100%;\r\n}\r\n\r\n#rteUseCase .content-wrapper {\r\n    width: auto;\r\n    margin: 0;\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * RichTextEditor usecase sample\r\n */\r\nimport * as React from 'react';\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { RichTextEditorComponent, HtmlEditor, Inject, Toolbar, Image, Link, QuickToolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { SampleBase } from './sample-base';\r\nimport { isNullOrUndefined as isNOU } from '@syncfusion/ej2-base';\r\n\r\nexport class Forums extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.answerSectionRef = element => {\r\n            this.answerSectionEle = element;\r\n        };\r\n        this.answerCountRef = element => {\r\n            this.answerCountEle = element;\r\n        };\r\n        this.answerRef = element => {\r\n            this.answerEle = element;\r\n        };\r\n    }\r\n    resetMessage() {\r\n        let answerElement = this.rteObj.contentModule.getEditPanel();\r\n        answerElement.innerHTML = '';\r\n        this.rteObj.value = '';\r\n        this.rteObj.refresh();\r\n    }\r\n    postMessage() {\r\n        let empCount = 0;\r\n        let answerElement = this.rteObj.contentModule.getEditPanel();\r\n        let comment = this.rteObj.getHtml();\r\n        let empList = ['emp1', 'emp2', 'emp3'];\r\n        let nameListList = ['Anne Dodsworth', 'Janet Leverling', 'Laura Callahan'];\r\n        if (comment !== null && comment.trim() !== '' && (answerElement.innerText.trim() !== '' ||\r\n            !isNOU(answerElement.querySelector('img')) || !isNOU(answerElement.querySelector('table')))) {\r\n            let answer = this.answerEle;\r\n            let cloneAnswer = answer.cloneNode(true);\r\n            let authorName = cloneAnswer.querySelector('.authorname');\r\n            let logo = cloneAnswer.querySelector('.logos');\r\n            logo.classList.remove('logos');\r\n            if (empCount < 3) {\r\n                logo.classList.add(empList[empCount]);\r\n                authorName.innerHTML = nameListList[empCount];\r\n                empCount++;\r\n            }\r\n            else {\r\n                logo.classList.add('logo');\r\n                authorName.innerHTML = 'User';\r\n            }\r\n            let timeZone = cloneAnswer.querySelector('.detailsAnswer');\r\n            let day = this.getMonthName(new Date().getMonth()) + ' ' + new Date().getDate();\r\n            let hr = new Date().getHours() + ':' + new Date().getMinutes();\r\n            if (new Date().getHours() > 12) {\r\n                hr = hr + ' PM';\r\n            }\r\n            else {\r\n                hr = hr + ' AM';\r\n            }\r\n            timeZone.innerHTML = 'Answered on ' + day + ', ' + new Date().getFullYear() + ' ' + hr;\r\n            let postContent = cloneAnswer.querySelector('.posting');\r\n            postContent.innerHTML = comment;\r\n            let postElement = this.answerSectionEle;\r\n            postElement.appendChild(cloneAnswer);\r\n            let countEle = this.answerCountEle;\r\n            let count = parseInt(countEle.innerHTML, null);\r\n            count = count + 1;\r\n            countEle.innerHTML = count.toString() + ' Answers';\r\n            answerElement.innerHTML = '';\r\n            this.rteObj.value = '';\r\n            this.rteObj.refresh();\r\n        }\r\n    }\r\n    getMonthName(index) {\r\n        let month = [];\r\n        month[0] = 'January';\r\n        month[1] = 'February';\r\n        month[2] = 'March';\r\n        month[3] = 'April';\r\n        month[4] = 'May';\r\n        month[5] = 'June';\r\n        month[6] = 'July';\r\n        month[7] = 'August';\r\n        month[8] = 'September';\r\n        month[9] = 'October';\r\n        month[10] = 'November';\r\n        month[11] = 'December';\r\n        return month[index];\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className=\"control-section\" id=\"rteUseCase\">\r\n                    <div className=\"control-wrapper\">\r\n                        <div className='forum'>\r\n                            <div className='questionSection'>\r\n                                <div className='raiser'>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className='questionar'> </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className='Questionarname'>Kimberly</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                </div>\r\n                                <div className='questionHeader'>\r\n                                    <div className='header'>\r\n                                        How to add a custom item to the toolbar of RichTextEditor\r\n                                    </div>\r\n                                    <div className='detailsQuestion'>Posted on May 7, 2018 6.10 PM</div>\r\n                                    <div className='explain'>\r\n                                        I want to add a custom icon, “code-mirror” to the toolbar of RichTextEditor and display the RichTextEditor content in code-mirror format.\r\n                                    </div>\r\n                                    <div className='tags'>\r\n                                        <div className='tagSection'>\r\n                                            <table>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <div className='tag'> HTML </div>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <div className='tag'> JavaScript </div>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </div>\r\n                                        <div className='questionLikes'>\r\n                                            <table>\r\n                                                <tr>\r\n                                                    <td>\r\n                                                        <span className='e-icon e-like questionSide'>\r\n                                                            <img className='e-icon' src='////npmci.syncfusion.com/development/react/demos/src/rich-text-editor/images/like.svg'/>\r\n                                                            <span>Like</span>\r\n                                                        </span>\r\n                                                    </td>\r\n                                                    <td>\r\n                                                        <span className='e-icon e-dislike'>\r\n                                                            <img className='e-icon' src='////npmci.syncfusion.com/development/react/demos/src/rich-text-editor/images/dislike.svg'/>\r\n                                                            <span>Dislike</span>\r\n                                                        </span>\r\n                                                    </td>\r\n                                                </tr>\r\n                                            </table>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className='answerSection' ref={this.answerSectionRef}>\r\n                                <div className='answerCount' ref={this.answerCountRef}>1 Answer</div>\r\n                                <div className='answer' ref={this.answerRef}>\r\n                                    <table>\r\n                                        <tr>\r\n                                            <td rowSpan={2}>\r\n                                                <div className='logos'> </div>\r\n                                            </td>\r\n                                            <td>\r\n                                                <div className='authorname'>Mabel Weber</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                        <tr>\r\n                                            <td>\r\n                                                <div className='detailsAnswer'>Answered on May 7, 2018 6.30 PM</div>\r\n                                            </td>\r\n                                        </tr>\r\n                                    </table>\r\n                                    <div className='posting'>\r\n                                        To add a custom icon <b>code-mirror</b> to the toolbar, you have to use template option of the <b>toolbarSettings</b>. To know more about adding custom icons, refer to <a href='https://ej2.syncfusion.com/home/' target='_blank'>custom tool</a> sample of RichTextEditor.\r\n                                    </div>\r\n                                    <div className='likeAnswer'>\r\n                                        <table>\r\n                                            <tr>\r\n                                                <td>\r\n                                                    <span className='e-icon e-like'>\r\n                                                        <img className='e-icon' src='////npmci.syncfusion.com/development/react/demos/src/rich-text-editor/images/like.svg'/>\r\n                                                        <span>Like</span>\r\n                                                    </span>\r\n                                                </td>\r\n                                                <td>\r\n                                                    <span className='e-icon e-dislike'>\r\n                                                        <img className='e-icon' src='////npmci.syncfusion.com/development/react/demos/src/rich-text-editor/images/dislike.svg'/>\r\n                                                        <span>Dislike</span>\r\n                                                    </span>\r\n                                                </td>\r\n                                            </tr>\r\n                                        </table>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div id=\"createpostholder\">\r\n                                <form>\r\n                                    <RichTextEditorComponent id=\"blogpost\" ref={(richtexteditor) => { this.rteObj = richtexteditor; }}>\r\n                                        <Inject services={[Toolbar, Image, Link, HtmlEditor, QuickToolbar]}/>\r\n                                    </RichTextEditorComponent>\r\n                                    <div id='buttonSection'>\r\n                                        <ButtonComponent id=\"rteCancel\" onClick={this.resetMessage.bind(this)} type='button'>Cancel</ButtonComponent>\r\n                                        <ButtonComponent id=\"rteSubmit\" onClick={this.postMessage.bind(this)} cssClass='e-primary' type='button'>Reply</ButtonComponent>\r\n                                    </div>\r\n                                </form>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Forums />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}