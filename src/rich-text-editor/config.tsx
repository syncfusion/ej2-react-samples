export const RichTextEditorSampleOrder: Object = [
    { 'path': 'rich-text-editor/tools', 'component': 'Overview', 'name': 'Overview', 'description': 'This demo describes basic and advanced features of the react Rich Text Editor component (WYSIWYG HTML Editor) with all its tools and functionalities.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","showCharCount","actionBegin","actionComplete","maxLength", "exportWord", "slashMenuSettings", "exportPdf", "importWord"] }', 'type': 'update' },
    { 'path': 'rich-text-editor/rich-text-editor', 'component': 'Default', 'name': 'Default Functionalities', 'description': 'This demo shows how to render react Rich Text Editor (WYSIWYG HTML editor) component with a minimum configuration setting.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","appendTo"] }' },
    { 'path': 'rich-text-editor/image', 'component': 'ImageSample', 'name': 'Image', 'description': 'This demo explains how to insert images with a blob or base64 format, link to the images, image upload, rotate left/right, and more in react WYSIWYG HTML Editor', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","quickToolbarSettings","toolbarClick","appendTo","getRange"] }' },
    { 'path': 'rich-text-editor/insert-media', 'component': 'InsertMedia', 'name': 'Insert Media', 'description': 'This demo shows how to insert audio and video, Embed video, upload audio and video, and more in Insert Media.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","quickToolbarSettings","toolbarClick","appendTo","getRange"] }' },
    { 'path': 'rich-text-editor/inline', 'component': 'Inline', 'name': 'Inline', 'description': 'This demo shows inline WYSIWYG HTML editor that is displayed when selecting the content or simply focusing on the content inside the react Rich Text Editor.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","inlineMode","toolbarSettings","format","fontFamily","appendTo","dataBind"] }' },
    { 'path': 'rich-text-editor/paste-cleanup', 'component': 'PasteCleanupRTE', 'name': 'Paste from MS Word', 'order': '01', 'description': 'This demo explains how to clean up HTML when pasting a content from Microsoft Word, Visual Studio Code, Visual Studio, or a web page in react Editor.', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","value","appendTo","pasteCleanupSettings"] }' },
    { 'path': 'rich-text-editor/format-painter', 'component': 'FormatPainterRTE', 'name': 'Format Painter', 'order': '01', 'description': 'This demo explains how to use Format Painter feature of the Rich Text Editor component to copy and paste style from one place to other.', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent": ["formatPainterSettings"]}' },
    { 'path': 'rich-text-editor/iframe', 'component': 'IFrame', 'name': 'IFrame', 'description': 'This demo shows how to render a classic react Rich Text Editor (iframe editor) that was designed by using the iframe element covering all tool functionalities.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","height","iframeSettings","toolbarSettings","actionBegin","actionComplete","appendTo"] }', 'type': 'update' },
    { 'path': 'rich-text-editor/print', 'component': 'Print', 'name': 'Print', 'description': 'This demo sample shows how to print the content of the react Rich Text Editor (HTML editor) with styles and formatting using the print module.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","print","appendTo"] }' },
    { 'path': 'rich-text-editor/ajax-load', 'component': 'AjaxContent', 'name': 'Ajax Content', 'description': 'This demo shows how to load the content to the editor from external sources like external pages andfiles using the AJAX library in react Editor.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","value","appendTo"] }' },
    { 'path': 'rich-text-editor/resize-editor', 'component': 'ResizableEditor', 'name': 'Resizable Editor', 'order': '01', 'description': 'This demo explains how to render a resizable react Editor that allows resizing an editor and viewing its content with an enlarging or shrunk scale.', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","appendTo","enableResize"] }' },
    { 'path': 'rich-text-editor/api', 'component': 'RTEApi', 'name': 'API', 'order': '01', 'description': 'This demo covers important APIs of the react Rich Text Editor such as content length, HTML encoding, read-only, retrieve the selected content, and more.', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","showCharCount","maxLength","appendTo","readonly","enabled","enableHtmlEncode","value","getSelection","selectAll"] }' },
    { 'path': 'rich-text-editor/enter-key-configuration', 'component': 'EnterKeyConfiguration', 'name': 'Enter Key Configuration', 'order': '01', 'description': 'This demo explains the API usage to customize the enter and shift + enter key actions in the Rich Text Editor content.', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject", "appendTo", "value", "saveInterval", "enterKey", "shiftEnterKey"] }' },
    { 'path': 'rich-text-editor/client-side-events', 'component': 'RTEEvents', 'name': 'Events', 'description': 'This demo explains client-side events of react Text Editor that is triggered on editing and formatting operations with an event tracer.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","created","actionBegin","actionComplete","focus","blur","change","toolbarClick","appendTo"] }' },
    { 'path': 'rich-text-editor/blog-posting', 'component': 'Forums', 'name': 'Use Case', 'description': 'The Rich Text Editor is used in most real-time applications. The react Rich Text Editor example shows how to design a forum application in react application.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","placeholder","value","dataBind","refresh","appendTo"] }' },
    { 'path': 'rich-text-editor/auto-save', 'component': 'AutoSave', 'name': 'Auto Save', 'description': 'This demo shows how to autosave the content of the editor with customized time intervals and retrieve the saved content in react Rich Text Editor.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","placeholder","saveInterval","enablePersistance","toolbarSettings","appendTo"] }' },
    { 'path': 'rich-text-editor/file-browser', 'component': 'FileBrowser', 'name': 'File Browser', 'description': 'This demo shows how to insert the cloud server image into the Rich Text Editor content using FileManager.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","fileManagerSettings","appendTo"] }' },
    { 'path': 'rich-text-editor/insert-emoticons', 'component': 'InsertEmoticons', 'name': 'Insert Emoticons', 'description': 'This demo demonstrates how to insert emoticons into the rich content in react Rich Text Editor by using an emoji picker toolbar in the editor.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","value","created","appendTo"] }' },
    { 'path': 'rich-text-editor/online-html-editor', 'component': 'OnlineHtmlEditor', 'name': 'Online Html Editor', 'description': 'The online HTML editor is a demo that provides LIVE experience for both content and HTML editing with Rich Text Editor features in a real-world scenario.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","appendTo"] }' },
    { 'path': 'rich-text-editor/image-editor-integration', 'component': 'ImageEditorIntegration', 'name': 'Image Editor Integration', 'description': 'This example shows how to integrate Image Editor component into Rich Text Editor component, the edited image will be inserted into the Rich Text Editor.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","quickToolbarSettings","actionBegin", "placeholder", "appendTo"] }' },
    { 'path': 'rich-text-editor/mail-merge', 'component': 'MailMerge', 'name': 'Mail Merge', 'description': 'The Mail Merge feature in the Rich Text Editor allows inserting placeholders for personalized content creation, like letters and invoices.', 'order': '01', 'category': 'Rich Text Editor', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","fileManagerSettings","appendTo"] }' },
    { 'path': 'rich-text-editor/export-document', 'component': 'ExportDocument', 'name': 'Export to Word / PDF', 'description': 'This demo explains how to export the content of the Rich Text Editor to Word and PDF document formats using the Syncfusion<sup>®</sup> Document processing libraries.', 'order': '02', 'category': 'Export / Import', 'api': '{"RichTextEditorComponent":["Inject", "toolbarSettings", "exportWord","exportPdf", "enableXhtml", "insertImageSettings", "value"] }' },
    { 'path': 'rich-text-editor/import-word', 'component': 'ImportWord', 'name': 'Import from Word', 'description': 'This demo explains how to import the content from Word document to the Rich Text Editor using the Syncfusion<sup>®</sup> Document processing libraries.', 'order': '02', 'category': 'Export / Import', 'api': '{"RichTextEditorComponent":["Inject", "toolbarSettings", "importWord", "enableXhtml", "insertImageSettings", "value"] }' },
    { 'path': 'rich-text-editor/mention-integration', 'component': 'MentionIntegration', 'name': '@ Mention', 'description': 'This example shows how to integrate @mention component within Rich Text Editor component. Type `@` character and select a user from the suggestion list.', 'order': '03', 'category': 'Mention Integration', 'api': '{"RichTextEditorComponent":["Inject","quickToolbarSettings","actionBegin", "placeholder", "appendTo"] }' },
    { 'path': 'rich-text-editor/smart-suggestion', 'component': 'SmartSuggestion', 'name': 'Smart Suggestion', 'description': 'This demo explains to how to use the slash menu feature of the Rich Text Editor to apply formats, open dialogs easily.', 'order': '03', 'category': 'Mention Integration', 'api': '{"RichTextEditorComponent":["Inject", "toolbarSettings", "slashMenuSettings", "slashMenuItemSelect", "placeholder"] }' },
    { 'path': 'rich-text-editor/types', 'component': 'Type', 'name': 'Type', 'description': 'This demo demonstrates different types and behaviors of a toolbar used in the react Editor such as expand/collapse, multirow,floating and popup.', 'order': '04', 'category': 'Toolbar', 'api': '{"RichTextEditorComponent":["Inject","floatingToolbarOffset","toolbarSettings","actionBegin","actionComplete","dataBind","appendTo"] }','type': 'update' },
    { 'path': 'rich-text-editor/quick-format-toolbar', 'component': 'QuickFormatToolbar', 'name': 'Quick Format Toolbar', 'description': 'This sample demonstrates the "Format Quick Toolbar" option. Select the text content to open the Quick Toolbar for editing the Rich Text Editor value.', 'order': '04', 'category': 'Toolbar', 'api': '{"RichTextEditorComponent":["Inject", "quickToolbarSettings", "toolbarSettings", "dataBind", "appendTo"] }' },
    { 'path': 'rich-text-editor/bottom-toolbar', 'component': 'BottomToolbar', 'name': 'Bottom Toolbar', 'description': 'This demo demonstrates how to display the toolbar at the bottom of the Rich Text Editor instead of the default top position.', 'order': '04', 'category': 'Toolbar', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","appendTo","created"] }', 'type': 'new' },
    { 'path': 'rich-text-editor/insert-special-characters', 'component': 'InsertSpecialCharacters', 'name': 'Insert Special Characters', 'description': 'The demo demonstrates how to add special characters or symbols into the rich content in react Rich Text Editor using a custom toolbar command.', 'order': '05', 'category': 'Custom Tool', 'api': '{"RichTextEditorComponent":["Inject","toolbarSettings","value","created","appendTo"] }' }
]
