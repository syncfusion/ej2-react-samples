{"index.css":"#rteInline .e-richtexteditor .e-rte-content .e-content {\r\n    float: left;\r\n    width: 100%;\r\n}\r\n\r\n#rteInline .content-wrapper {\r\n    width: auto;\r\n    margin: 0;\r\n    height: 400px;\r\n    overflow: auto;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { RichTextEditorComponent, Inject, QuickToolbar, Image, Link, HtmlEditor, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport { SampleBase } from './sample-base';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { PropertyPane } from './property-pane';\r\n\r\nexport class Inline extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.inlineMode = {\r\n            enable: true,\r\n            onSelection: true\r\n        };\r\n        this.format = {\r\n            width: 'auto'\r\n        };\r\n        this.fontFamily = {\r\n            width: 'auto'\r\n        };\r\n        // RichTextEditor items list\r\n        this.items = ['Bold', 'Italic', 'Underline',\r\n            'Formats', '-', 'Alignments', 'OrderedList', 'UnorderedList',\r\n            'CreateLink'];\r\n        //RichTextEditor ToolbarSettings\r\n        this.toolbarSettings = {\r\n            items: this.items\r\n        };\r\n    }\r\n    change(args) {\r\n        this.rteObj.inlineMode.onSelection = args.checked;\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div className='control-section' id='rteInline'>\r\n          <div className='col-lg-8'>\r\n            <div className=\"content-wrapper\">\r\n              <RichTextEditorComponent id=\"inlineRTE\" ref={(richtexteditor) => { this.rteObj = richtexteditor; }} inlineMode={this.inlineMode} toolbarSettings={this.toolbarSettings} format={this.format} fontFamily={this.fontFamily}>\r\n                <p>The sample is configured with inline mode of editor. Initially, the editor is rendered without a <a href=\"https://ej2.syncfusion.com/home/\" target='_blank'>toolbar</a>. The toolbar becomes visible only when the content is selected.</p>\r\n                <Inject services={[Image, Link, QuickToolbar, HtmlEditor, Toolbar]}/>\r\n              </RichTextEditorComponent>\r\n            </div>\r\n          </div>\r\n          <div className='col-lg-4 property-section'>\r\n            <PropertyPane title='Properties'>\r\n              <table id=\"property\" title=\"Properties\">\r\n                <tbody>\r\n                  <tr>\r\n                    <td>\r\n                      <div>\r\n                        <CheckBoxComponent checked={true} label='Show on Selection' ref={(scope) => { this.checkboxObj = scope; }} change={this.change.bind(this)}></CheckBoxComponent>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </PropertyPane>\r\n          </div>\r\n        </div>\r\n\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<Inline />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}