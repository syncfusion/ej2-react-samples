{"index.css":"#rteAPIProperty .property-panel-content div {\r\n    padding-left: 10px;\r\n    padding-top: 10px;\r\n}\r\n\r\n.property-panel-table td {\r\n    width: 50%;\r\n    margin-top: 3px;\r\n}\r\n\r\n#rteAPIProperty .property-panel-content {\r\n    overflow: inherit;\r\n}\r\n\r\n#rteAPIProperty .property-panel-header {\r\n    padding-top: 40px;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n#rteAPI .content-wrapper {\r\n    width: auto;\r\n    margin: 0;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport { ButtonComponent, CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { Count, HtmlEditor, Image, Inject, Link, QuickToolbar, RichTextEditorComponent, Toolbar } from '@syncfusion/ej2-react-richtexteditor';\r\nimport * as React from 'react';\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class RTEApi extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.Numericvalue = 1000;\r\n        this.min = 555;\r\n        this.max = 2000;\r\n        this.format = 'n0';\r\n        this.numericChange = (e) => {\r\n            this.rteObj.maxLength = e.value;\r\n        };\r\n        this.readonlyChecked = false;\r\n        this.readonlyChange = (args) => {\r\n            this.rteObj.readonly = args.checked;\r\n        };\r\n        this.enableChecked = true;\r\n        this.enableChange = (args) => {\r\n            this.rteObj.enabled = args.checked;\r\n        };\r\n        this.htmlChecked = false;\r\n        this.htmlChange = (args) => {\r\n            this.rteObj.enableHtmlEncode = args.checked;\r\n        };\r\n        this.getValue = () => {\r\n            alert(this.rteObj.value);\r\n        };\r\n        this.getSelection = () => {\r\n            alert(this.rteObj.getSelection());\r\n        };\r\n        this.selectAll = () => {\r\n            this.rteObj.selectAll();\r\n        };\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className='col-lg-8'>\r\n                    <div className='control-section' id=\"rteAPI\">\r\n                        <div className='rte-control-section'>\r\n                            <RichTextEditorComponent id=\"API\" ref={(richtexteditor) => { this.rteObj = richtexteditor; }} showCharCount={true} maxLength={1000}>\r\n                                <p>RichTextEditor is a WYSIWYG editing control which will reduce the effort for users while trying to express their formatting word content as HTML or Markdown format.</p>\r\n                                <p><b>APIâ€™s:</b></p>\r\n                                <ul>\r\n                                    <li>\r\n                                        <p>maxLength - allows to restrict the maximum length to be entered.</p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>readOnly - allows to change it as non-editable state.</p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>enabled - enable or disable the RTE component.</p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>enableHtmlEncode - Get the encoded string value through value property and source code panel</p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>getValue - get the value of RTE.</p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>getSelection - get the selected text of RTE.</p>\r\n                                    </li>\r\n                                    <li>\r\n                                        <p>selectAll - select all content in RTE.</p>\r\n                                    </li>\r\n                                </ul>\r\n                                <Inject services={[Toolbar, Image, Link, HtmlEditor, Count, QuickToolbar]}/>\r\n                            </RichTextEditorComponent>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className='col-lg-4 property-section' id=\"rteAPIProperty\">\r\n                    <PropertyPane title='Properties'>\r\n                        <table id=\"property\" title=\"Properties\" style={{ width: '100%', margin: '10px' }}>\r\n                            <tbody>\r\n                                <tr>\r\n                                    <td style={{ padding: '8px', width: '50%' }}><div>Max Length </div></td>\r\n                                    <td>\r\n                                        <div style={{ paddingLeft: '10px' }}>\r\n                                            <NumericTextBoxComponent id=\"maxlength\" min={this.min} max={this.max} format={this.format} change={this.numericChange.bind(this)} value={this.Numericvalue}></NumericTextBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ padding: '8px', width: '50%' }}><div>Readonly</div></td>\r\n                                    <td>\r\n                                        <div style={{ paddingLeft: '10px' }}>\r\n                                            <CheckBoxComponent id=\"readonly\" checked={this.readonlyChecked} change={this.readonlyChange.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ padding: '8px', width: '50%' }}><div>Enable</div></td>\r\n                                    <td>\r\n                                        <div style={{ paddingLeft: '10px' }}>\r\n                                            <CheckBoxComponent id=\"enable\" checked={this.enableChecked} change={this.enableChange.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td style={{ padding: '8px', width: '50%' }}>\r\n                                        <div>Enable HTML Encode </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div style={{ paddingLeft: '10px' }}>\r\n                                            <CheckBoxComponent id=\"enablehtml\" checked={this.htmlChecked} change={this.htmlChange.bind(this)}></CheckBoxComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        <div style={{ paddingTop: '10px' }}>\r\n                                            <ButtonComponent id=\"getVal\" ref={(btn) => { this.getVal = btn; }} onClick={this.getValue.bind(this)} className=\"btn btn-default\">Get Value</ButtonComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        <div style={{ paddingTop: '10px' }}>\r\n                                            <ButtonComponent id=\"selectHtml\" ref={(btn) => { this.selectHtml = btn; }} onClick={this.getSelection.bind(this)} className=\"btn btn-default\">Get Selection</ButtonComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                <tr>\r\n                                    <td></td>\r\n                                    <td>\r\n                                        <div style={{ paddingTop: '10px' }}>\r\n                                            <ButtonComponent id=\"selectall\" ref={(btn) => { this.selectall = btn; }} onClick={this.selectAll.bind(this)} className=\"btn btn-default\">Select All </ButtonComponent>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                            </tbody>\r\n                        </table>\r\n                    </PropertyPane>\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<RTEApi />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}