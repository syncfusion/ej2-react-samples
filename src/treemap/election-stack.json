{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","treemap-data/election-data.json":"\r\n{\r\n    \"election\" : [\r\n        {  \"State\": \"Alabama\", \"Trump\":62.9,\"Clinton\":34.6, \"WinPercentage\": 62.9,\"Winner\":\"Trump\", \"Population\" : 4780127 },\r\n        {  \"State\": \"Alaska\", \"Trump\":52.9,\"Clinton\":37.7,  \"WinPercentage\": 52.9,\"Winner\":\"Trump\", \"Population\" : 710249},\r\n        {  \"State\": \"Arkansas\", \"Trump\":60.6,\"Clinton\":33.7,  \"WinPercentage\":60.6,\"Winner\":\"Trump\", \"Population\" : 2915958 },\r\n        {  \"State\": \"Arizona\", \"Trump\":49.5,\"Clinton\":45.4,  \"WinPercentage\":49.5,\"Winner\":\"Trump\", \"Population\" : 6392307 },\r\n        {  \"State\": \"California\",  \"Trump\":32.8,\"Clinton\":61.6,  \"WinPercentage\": 61.6,\"Winner\":\"Clinton\", \"Population\" : 37252895},\r\n        {  \"State\": \"Colorado\",  \"Trump\":47.3,\"Clinton\":44.4,  \"WinPercentage\": 47.3,\"Winner\":\"Trump\", \"Population\" : 5029324 },\r\n        {  \"State\": \"Connecticut\",  \"Trump\":41.2,\"Clinton\":54.5,  \"WinPercentage\": 54.5,\"Winner\":\"Clinton\", \"Population\" : 3574118},\r\n        {  \"State\": \"Delaware\",  \"Trump\":53.4,\"Clinton\":41.9,  \"WinPercentage\": 53.4,\"Winner\":\"Trump\", \"Population\" : 897936 },\r\n        {  \"State\": \"District of Columbia\",   \"Trump\":4.1,\"Clinton\":92.8,  \"WinPercentage\": 92.8,\"Winner\":\"Clinton\", \"Population\" : 693972 },\r\n        {  \"State\": \"Florida\", \"Trump\":49.1,\"Clinton\":47.8 ,  \"WinPercentage\": 49.1,\"Winner\":\"Trump\",  \"Population\" : 18804623},\r\n        {  \"State\": \"Georgia\", \"Trump\":51.3,\"Clinton\":45.6 ,  \"WinPercentage\":51.3,\"Winner\":\"Trump\",  \"Population\" : 9688681},\r\n        {  \"State\": \"Hawaii\",  \"Trump\":62.2,\"Clinton\":30,  \"WinPercentage\":62.2,\"Winner\":\"Trump\",  \"Population\" : 1360301 },\r\n        {  \"State\": \"Idaho\", \"Trump\":59.2,\"Clinton\":27.6 ,  \"WinPercentage\": 59.2,\"Winner\":\"Trump\",  \"Population\" : 1567652 },\r\n        {  \"State\": \"Illinois\",  \"Trump\":55.4,\"Clinton\":39.4,  \"WinPercentage\": 55.4,\"Winner\":\"Trump\",  \"Population\" : 12831549  },\r\n        {  \"State\": \"Indiana\", \"Trump\":57.2,\"Clinton\":37.9 ,  \"WinPercentage\":57.2,\"Winner\":\"Trump\",  \"Population\" : 6484229 },\r\n        {  \"State\": \"Iowa\", \"Trump\":51.8,\"Clinton\":42.2,  \"WinPercentage\":51.8,\"Winner\":\"Trump\",  \"Population\" : 3046869  },\r\n        {  \"State\": \"Kansas\", \"Trump\":57.2,\"Clinton\":36.2,  \"WinPercentage\":57.2,\"Winner\":\"Trump\",  \"Population\" : 2853132 },\r\n        {  \"State\": \"Kentucky\", \"Trump\":62.5,\"Clinton\":32.7 ,  \"WinPercentage\":62.5,\"Winner\":\"Trump\",  \"Population\" : 4339349 },\r\n        {  \"State\": \"Louisiana\", \"Trump\":58.1,\"Clinton\":38.4 ,  \"WinPercentage\":58.1,\"Winner\":\"Trump\",  \"Population\" : 4533479 },\r\n        {  \"State\": \"Maine\",  \"Trump\":45.2,\"Clinton\":47.9 ,  \"WinPercentage\":47.9,\"Winner\":\"Clinton\",  \"Population\" : 1328361},\r\n        {  \"State\": \"Maryland\",  \"Trump\":35.3,\"Clinton\":60.5 ,  \"WinPercentage\":60.5,\"Winner\":\"Clinton\",  \"Population\" : 5773785 },\r\n        {  \"State\": \"Massachusetts\",  \"Trump\":33.5,\"Clinton\":60.8,  \"WinPercentage\":60.8,\"Winner\":\"Clinton\",  \"Population\" : 6547817 },\r\n        {  \"State\": \"Michigan\", \"Trump\":47.6,\"Clinton\":47.3 ,  \"WinPercentage\":47.6,\"Winner\":\"Trump\",  \"Population\" : 9884129 },\r\n        {  \"State\": \"Minnesota\",  \"Trump\":45.4,\"Clinton\":46.9,  \"WinPercentage\":46.9,\"Winner\":\"Trump\",  \"Population\" : 5303925 },\r\n        {  \"State\": \"Mississippi\", \"Trump\":58.3,\"Clinton\":39.7,  \"WinPercentage\":58.3,\"Winner\":\"Trump\",  \"Population\" : 2968103  },\r\n        {  \"State\": \"Missouri\", \"Trump\":57.1,\"Clinton\":38.0,  \"WinPercentage\":57.1,\"Winner\":\"Trump\",  \"Population\" : 5988927  },\r\n        {  \"State\": \"Montana\", \"Trump\":56.5,\"Clinton\":36.0,  \"WinPercentage\": 56.5,\"Winner\":\"Trump\",  \"Population\" : 989417 },\r\n        {  \"State\": \"Nebraska\", \"Trump\":60.3,\"Clinton\":34.0 ,  \"WinPercentage\":60.3,\"Winner\":\"Trump\",  \"Population\" : 1826341 },\r\n        {  \"State\": \"Nevada\",  \"Trump\":45.5,\"Clinton\":47.9,  \"WinPercentage\":47.9,\"Winner\":\"Clinton\",  \"Population\" : 2700691  },\r\n        {  \"State\": \"New Hampshire\",  \"Trump\":47.2,\"Clinton\":47.6 ,  \"WinPercentage\": 47.6,\"Winner\":\"Clinton\",  \"Population\" : 1316466 },\r\n        {  \"State\": \"New Jersey\",  \"Trump\":41.8,\"Clinton\":55.0,  \"WinPercentage\":55,\"Winner\":\"Clinton\",  \"Population\" : 8791936},\r\n        {  \"State\": \"New Mexico\",  \"Trump\":40.0,\"Clinton\":48.3 ,  \"WinPercentage\":48.3,\"Winner\":\"Clinton\",  \"Population\" : 2059192 },\r\n        {  \"State\": \"New York\",  \"Trump\":37.5,\"Clinton\":58.8 ,  \"WinPercentage\":58.8,\"Winner\":\"Clinton\",  \"Population\" : 19378087},\r\n        {  \"State\": \"North Carolina\", \"Trump\":50.5,\"Clinton\":46.7,  \"WinPercentage\":50.5,\"Winner\":\"Trump\",  \"Population\" : 9535692 },\r\n        {  \"State\": \"North Dakota\", \"Trump\":64.1,\"Clinton\":27.8,   \"WinPercentage\":64.1,\"Winner\":\"Trump\", \"Population\" : 672591 },\r\n        {  \"State\": \"Ohio\", \"Trump\":52.1,\"Clinton\":43.5,   \"WinPercentage\":52.5,\"Winner\":\"Trump\", \"Population\" : 11536725 },\r\n        {  \"State\": \"Oklahoma\", \"Trump\":65.3,\"Clinton\":28.9,  \"WinPercentage\": 65.3,\"Winner\":\"Trump\",  \"Population\" : 3751616 },\r\n        {  \"State\": \"Oregon\",  \"Trump\":41.1,\"Clinton\":51.7,  \"WinPercentage\":51.7,\"Winner\":\"Clinton\",  \"Population\" : 3831073  },\r\n        {  \"State\": \"Pennsylvania\", \"Trump\":48.8,\"Clinton\":47.6 ,  \"WinPercentage\": 48.8,\"Winner\":\"Trump\",  \"Population\" : 12702887},\r\n        {  \"State\": \"Rhode Island\",  \"Trump\":39.8,\"Clinton\":55.4,  \"WinPercentage\": 55.4,\"Winner\":\"Clinton\",  \"Population\" : 1052931 },\r\n        {  \"State\": \"South Carolina\", \"Trump\":54.9,\"Clinton\":40.8,  \"WinPercentage\":54.9,\"Winner\":\"Trump\",  \"Population\" : 4625401},\r\n        {  \"State\": \"South Dakota\", \"Trump\":61.5,\"Clinton\":31.7,  \"WinPercentage\": 61.5,\"Winner\":\"Trump\",  \"Population\" : 814191 },\r\n        {  \"State\": \"Tennessee\", \"Trump\":61.1,\"Clinton\":34.9,  \"WinPercentage\":61.1,\"Winner\":\"Trump\",  \"Population\" : 6346275},\r\n        {  \"State\": \"Texas\", \"Trump\":52.6,\"Clinton\":43.4,  \"WinPercentage\":52.6,\"Winner\":\"Trump\",  \"Population\" : 25146105 },\r\n        {  \"State\": \"Utah\", \"Trump\":45.9,\"Clinton\":27.8,  \"WinPercentage\":45.9,\"Winner\":\"Trump\",  \"Population\" : 2763888 },\r\n        {  \"State\": \"Vermont\",  \"Trump\":39.7,\"Clinton\":61.1,   \"WinPercentage\":61.1,\"Winner\":\"Clinton\", \"Population\" : 625745 },\r\n        {  \"State\": \"Virginia\",  \"Trump\":45.0,\"Clinton\":49.9 ,  \"WinPercentage\":49.9,\"Winner\":\"Clinton\",  \"Population\" : 8001045},\r\n        {  \"State\": \"Washington\",  \"Trump\":4.1,\"Clinton\":92.8 ,  \"WinPercentage\":92.8,\"Winner\":\"Clinton\",  \"Population\" : 6724543 },\r\n        {  \"State\": \"Wisconsin\", \"Trump\":68.7,\"Clinton\":26.5 ,  \"WinPercentage\":68.7,\"Winner\":\"Trump\",  \"Population\" : 5687289},\r\n        {  \"State\": \"West Virginia\", \"Trump\":47.9,\"Clinton\":46.9,  \"WinPercentage\":47.9,\"Winner\":\"Clinton\",  \"Population\" : 1853011 },\r\n        {  \"State\": \"Wyoming\", \"Trump\":70.1,\"Clinton\":22.5,  \"WinPercentage\":70.1,\"Winner\":\"Trump\",  \"Population\" : 583767 }\r\n    ]\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Legend sample for treemap\r\n */\r\nimport * as React from \"react\";\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { TreeMapComponent, Inject, TreeMapLegend, TreeMapTooltip } from '@syncfusion/ej2-react-treemap';\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\nimport * as data from './treemap-data/election-data.json';\r\nlet datasource = data;\r\nexport class Legend extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        // Code for Property Panel\r\n        this.droplist = [\r\n            { text: 'Default', value: 'Default' },\r\n            { text: 'Interactive', value: 'Interactive' },\r\n        ];\r\n        this.positionList = [\r\n            { text: 'Top', value: 'Top' },\r\n            { text: 'Bottom', value: 'Bottom' },\r\n            { text: 'Left', value: 'Left' },\r\n            { text: 'Right', value: 'Right' },\r\n            { text: 'Auto', value: 'Auto' }\r\n        ];\r\n    }\r\n    legendChange() {\r\n        this.treemapInstance.legendSettings.mode = this.legendElement.value;\r\n        if (this.legendElement.value === 'Interactive') {\r\n            if (this.treemapInstance.legendSettings.orientation === 'Horizontal' || this.treemapInstance.legendSettings.orientation === 'None') {\r\n                this.treemapInstance.legendSettings.height = '10';\r\n                this.treemapInstance.legendSettings.width = '';\r\n            }\r\n            else {\r\n                this.treemapInstance.legendSettings.height = '70%';\r\n                this.treemapInstance.legendSettings.width = '10';\r\n            }\r\n        }\r\n        else {\r\n            this.treemapInstance.legendSettings.height = '';\r\n            this.treemapInstance.legendSettings.width = '';\r\n        }\r\n        this.treemapInstance.refresh();\r\n    }\r\n    legendPositionChange() {\r\n        this.treemapInstance.legendSettings.position = this.legendPositionElement.value;\r\n        if (this.legendPositionElement.value === 'Left' || this.legendPositionElement.value === 'Right') {\r\n            this.treemapInstance.legendSettings.orientation = 'Vertical';\r\n            if (this.treemapInstance.legendSettings.mode === 'Interactive') {\r\n                this.treemapInstance.legendSettings.height = '70%';\r\n                this.treemapInstance.legendSettings.width = '10';\r\n            }\r\n            else {\r\n                this.treemapInstance.legendSettings.height = '';\r\n                this.treemapInstance.legendSettings.width = '';\r\n            }\r\n        }\r\n        else if (this.legendPositionElement.value === 'Auto') {\r\n            if (this.treemapInstance.availableSize.width > this.treemapInstance.availableSize.height) {\r\n                this.treemapInstance.legendSettings.orientation = 'Vertical';\r\n                if (this.treemapInstance.legendSettings.mode === 'Interactive') {\r\n                    this.treemapInstance.legendSettings.height = '70%';\r\n                    this.treemapInstance.legendSettings.width = '10';\r\n                }\r\n                else {\r\n                    this.treemapInstance.legendSettings.height = '';\r\n                    this.treemapInstance.legendSettings.width = '';\r\n                }\r\n            }\r\n            else {\r\n                this.treemapInstance.legendSettings.orientation = 'Horizontal';\r\n                if (this.treemapInstance.legendSettings.mode === 'Interactive') {\r\n                    this.treemapInstance.legendSettings.height = '10';\r\n                    this.treemapInstance.legendSettings.width = '';\r\n                }\r\n                else {\r\n                    this.treemapInstance.legendSettings.height = '';\r\n                    this.treemapInstance.legendSettings.width = '';\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            this.treemapInstance.legendSettings.orientation = 'Horizontal';\r\n            if (this.treemapInstance.legendSettings.mode === 'Interactive') {\r\n                this.treemapInstance.legendSettings.height = '10';\r\n                this.treemapInstance.legendSettings.width = '';\r\n            }\r\n        }\r\n        this.treemapInstance.refresh();\r\n    }\r\n    resize(args) {\r\n        if (args.currentSize.width > args.currentSize.height && this.treemapInstance.legendSettings.position === 'Auto') {\r\n            this.treemapInstance.legendSettings.orientation = 'Vertical';\r\n            if (this.treemapInstance.legendSettings.mode === 'Interactive') {\r\n                this.treemapInstance.legendSettings.height = '70%';\r\n                this.treemapInstance.legendSettings.width = '10';\r\n            }\r\n            else {\r\n                this.treemapInstance.legendSettings.height = '';\r\n                this.treemapInstance.legendSettings.width = '';\r\n            }\r\n        }\r\n        else if (this.legendPositionElement.value === 'Auto') {\r\n            if (this.treemapInstance.availableSize.width > this.treemapInstance.availableSize.height) {\r\n                this.treemapInstance.legendSettings.orientation = 'Vertical';\r\n                if (this.treemapInstance.legendSettings.mode === 'Interactive') {\r\n                    this.treemapInstance.legendSettings.height = '70%';\r\n                    this.treemapInstance.legendSettings.width = '10';\r\n                }\r\n                else {\r\n                    this.treemapInstance.legendSettings.height = '';\r\n                    this.treemapInstance.legendSettings.width = '';\r\n                }\r\n            }\r\n            else {\r\n                this.treemapInstance.legendSettings.orientation = 'Horizontal';\r\n                if (this.treemapInstance.legendSettings.mode === 'Interactive') {\r\n                    this.treemapInstance.legendSettings.height = '10';\r\n                    this.treemapInstance.legendSettings.width = '';\r\n                }\r\n                else {\r\n                    this.treemapInstance.legendSettings.height = '';\r\n                    this.treemapInstance.legendSettings.width = '';\r\n                }\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n\t\t\t\t<style>\r\n\t\t\t\t\t{SAMPLE_CSS}\r\n\t\t\t\t</style>\r\n\t\t\t\t<div className='control-section'>\r\n\t\t\t\t\t<div className='col-md-9'>\r\n\t\t\t\t\t\t<TreeMapComponent load={this.load.bind(this)} id='treemap-container' ref={m => this.treemapInstance = m} titleSettings={{\r\n            text: 'US presidential election result - 2016',\r\n            textStyle: { size: '15px' }\r\n        }} dataSource={datasource.election} weightValuePath='Population' tooltipSettings={{\r\n            visible: true,\r\n            format: ' <b>${Winner}</b><br>State : ${State}<br>Trump : ${Trump} %<br>Clinton : ${Clinton} %'\r\n        }} legendSettings={{\r\n            visible: true,\r\n            position: 'Top',\r\n            shape: 'Rectangle',\r\n            height: '10'\r\n        }} format={\"n\"} useGroupingSeparator={true} rangeColorValuePath='WinPercentage' equalColorValuePath='Winner' leafItemSettings={{\r\n            labelPath: 'State',\r\n            fill: '#6699cc',\r\n            border: { color: 'white', width: 0.5 },\r\n            colorMapping: [\r\n                {\r\n                    value: 'Trump', color: '#D84444'\r\n                },\r\n                {\r\n                    value: 'Clinton', color: '#316DB5'\r\n                }\r\n            ]\r\n        }}>\r\n\t\t\t\t\t\t\t<Inject services={[TreeMapLegend, TreeMapTooltip]}/>\r\n\t\t\t\t\t\t</TreeMapComponent>\r\n\t\t\t\t\t\t<div style={{ float: 'right', marginright: '10px' }}>Source:\r\n       <a href=\" https://en.wikipedia.org/wiki/United_States_presidential_election,_2016\" target=\"_blank\">en.wikipedia.org</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='col-md-3 property-section'>\r\n\t\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t\t<table id='property' title='Properties' className='property-panel-table' style={{ width: '100%', marginBottom: '20px' }}>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Type</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"legendmode\" width=\"120px\" index={0} change={this.legendChange.bind(this)} ref={d => this.legendElement = d} dataSource={this.droplist} fields={{ text: 'text', value: 'value' }}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Position</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"legendPosition\" width=\"120px\" index={0} change={this.legendPositionChange.bind(this)} ref={d => this.legendPositionElement = d} dataSource={this.positionList} fields={{ text: 'text', value: 'value' }}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>);\r\n    }\r\n}\r\n\nrender(<Legend />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}