{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","treemap-data/color.json":"{\r\n    \"color\" : [\r\n        {\"Name\": \"Greenland\", \"Area\": 2130800, \"Population\": 56483, \"Location\": \"North America\" },\r\n        {\"Name\": \"New Guinea\", \"Area\":785753, \"Population\": 1306940, \"Location\": \"Oceania\"},\r\n        {\"Name\": \"Borneo\", \"Area\":743330, \"Population\": 19804064, \"Location\":\"Asia\" },\r\n        {\"Name\": \"Madagascar\", \"Area\": 587713, \"Population\": 22005222, \"Location\": \"Africa\"},\r\n        {\"Name\": \"Baffin Island\", \"Area\":507451, \"Population\":10745, \"Location\": \"North America\" },\r\n        {\"Name\": \"Sumatra\", \"Area\": 443066, \"Population\":50000000, \"Location\": \"Asia\"},\r\n        {\"Name\": \"Honshu\", \"Area\":225800, \"Population\": 103000000, \"Location\": \"Asia\"},\r\n        {\"Name\": \"Victoria Island\", \"Area\":217291, \"Population\": 1875, \"Location\": \"North America\"},\r\n        {\"Name\": \"Great Britain\", \"Area\":209331, \"Population\":60800000, \"Location\":\"Europe\" },\r\n        {\"Name\": \"Ellesmere Island\", \"Area\": 183965, \"Population\": 146, \"Location\": \"North America\"}\r\n    ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Color Mapping sample for treemap\r\n */\r\nimport * as React from \"react\";\r\nimport { CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { TreeMapComponent, Inject, TreeMapLegend, TreeMapTooltip } from '@syncfusion/ej2-react-treemap';\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\nimport * as data from './treemap-data/color.json';\r\nlet datasource = data;\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class ColorMapping extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        // Code for Property Panel\r\n        this.dropList = [\r\n            { text: 'Range', value: 'RangeColorMapping' },\r\n            { text: 'Equal', value: 'EqualColorMapping' },\r\n            { text: 'Desaturation', value: 'DesaturationColorMapping' }\r\n        ];\r\n    }\r\n    minOpacityChange() {\r\n        if (this.opacityElement.checked && !this.opacityElement.disabled) {\r\n            let slider = document.getElementById('minOpacity');\r\n            let minOpacity = parseFloat(slider.value);\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].minOpacity = minOpacity;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].minOpacity = minOpacity;\r\n            this.treemapInstance.refresh();\r\n        }\r\n    }\r\n    maxOpacityChange() {\r\n        if (this.opacityElement.checked && !this.opacityElement.disabled) {\r\n            let slider = document.getElementById('maxOpacity');\r\n            let maxOpacity = parseFloat(slider.value);\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].maxOpacity = maxOpacity;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].maxOpacity = maxOpacity;\r\n            this.treemapInstance.refresh();\r\n        }\r\n    }\r\n    opacityChange(args) {\r\n        let value = args.checked;\r\n        let minOpacity = parseFloat(this.minOpacityElement.value.toString());\r\n        let maxOpacity = parseFloat(this.maxOpacityElement.value.toString());\r\n        if (value) {\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].minOpacity = minOpacity;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].maxOpacity = maxOpacity;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].minOpacity = minOpacity;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].maxOpacity = maxOpacity;\r\n            this.minOpacityElement.disabled = false;\r\n            this.maxOpacityElement.disabled = false;\r\n        }\r\n        else {\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].maxOpacity = null;\r\n            this.minOpacityElement.disabled = true;\r\n            this.maxOpacityElement.disabled = true;\r\n        }\r\n        this.treemapInstance.refresh();\r\n    }\r\n    typeChange() {\r\n        let value = this.typeElement.value.toString();\r\n        if (value === 'RangeColorMapping') {\r\n            this.opacityElement.disabled = true;\r\n            this.treemapInstance.rangeColorValuePath = 'Area';\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[5].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[5].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].from = 100000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].to = 250000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].label = '0.1M - 0.25M';\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].color = '#547C84';\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].from = 250000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].to = 500000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].label = '0.25M - 0.50M';\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].color = '#37AFAB';\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].from = 500000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].to = 750000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].label = '0.5M - 0.75M';\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].color = '#A4D6AD';\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].from = 750000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].to = 2200000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].label = '0.75M - 2M';\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].color = '#DEEBAE';\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].label = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].color = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[5].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[5].label = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[5].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[5].color = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[5].from = null;\r\n            this.treemapInstance.legendSettings.title.text = 'Area';\r\n            this.treemapInstance.refresh();\r\n        }\r\n        else if (value === 'EqualColorMapping') {\r\n            this.opacityElement.disabled = true;\r\n            this.treemapInstance.rangeColorValuePath = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].label = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].label = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].label = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].label = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].label = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].value = 'North America';\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].color = '#DEEBAE';\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].value = 'Oceania';\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].color = '#A4D6AD';\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].value = 'Asia';\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].color = '#37AFAB';\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].value = 'Africa';\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].color = '#547C84';\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].value = 'Europe';\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].color = '#CEBF93';\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].maxOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].minOpacity = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[4].maxOpacity = null;\r\n            this.treemapInstance.equalColorValuePath = 'Location';\r\n            this.treemapInstance.legendSettings.title.text = 'Continent';\r\n            this.treemapInstance.refresh();\r\n        }\r\n        else if (value === 'DesaturationColorMapping') {\r\n            this.opacityElement.disabled = false;\r\n            this.treemapInstance.rangeColorValuePath = 'Area';\r\n            this.treemapInstance.equalColorValuePath = null;\r\n            let minOpacity = document.getElementById('minOpacity');\r\n            let maxOpacity = document.getElementById('maxOpacity');\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].label = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].from = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].to = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].from = 100000;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].to = 2230800;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].label = '0.1M - 2M';\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].value = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[2].color = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[1].color = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[3].color = null;\r\n            this.treemapInstance.leafItemSettings.colorMapping[0].color = ['#F0D6AD', '#19547B'];\r\n            if (this.opacityElement.checked) {\r\n                this.treemapInstance.leafItemSettings.colorMapping[0].minOpacity = parseFloat(minOpacity.value);\r\n                this.treemapInstance.leafItemSettings.colorMapping[0].maxOpacity = parseFloat(maxOpacity.value);\r\n            }\r\n            else {\r\n                this.treemapInstance.leafItemSettings.colorMapping[0].minOpacity = null;\r\n                this.treemapInstance.leafItemSettings.colorMapping[0].maxOpacity = null;\r\n            }\r\n            this.treemapInstance.legendSettings.title.text = 'Area';\r\n            this.treemapInstance.refresh();\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n\t\t\t\t<style>\r\n\t\t\t\t\t{SAMPLE_CSS}\r\n\t\t\t\t</style>\r\n\t\t\t\t<div className='control-section'>\r\n\t\t\t\t\t<div className='col-md-9'>\r\n\t\t\t\t\t\t<TreeMapComponent load={this.load.bind(this)} id='treemap-container' ref={m => this.treemapInstance = m} titleSettings={{\r\n            text: 'Top 10 largest islands in the World',\r\n            textStyle: { size: '15px' }\r\n        }} format={\"n\"} useGroupingSeparator={true} rangeColorValuePath='Area' dataSource={datasource.color} legendSettings={{\r\n            visible: true,\r\n            position: 'Bottom',\r\n            mode: 'Interactive',\r\n            height: '10',\r\n            title: {\r\n                text: 'Area'\r\n            }\r\n        }} tooltipSettings={{\r\n            visible: true,\r\n            format: 'Name: ${Name}<br>Area: ${Area} per square kms<br>Continent: ${Location}',\r\n            opacity: 0.8\r\n        }} weightValuePath='Area' leafItemSettings={{\r\n            labelPath: 'Name',\r\n            border: { color: 'white', width: 0.5 },\r\n            colorMapping: [\r\n                { from: 100000, to: 250000, label: '0.1M - 0.25M', color: '#547C84' },\r\n                { from: 250000, to: 550000, label: '0.25M - 0.55M', color: '#37AFAB' },\r\n                { from: 550000, to: 750000, label: '0.55M - 0.75M', color: '#A4D6AD' },\r\n                { from: 750000, to: 2250000, label: '0.75M - 2M', color: '#DEEBAE' },\r\n                { to: null, from: null, color: 'null' },\r\n                { to: null, from: null, color: 'null' },\r\n            ]\r\n        }}>\r\n\t\t\t\t\t\t\t<Inject services={[TreeMapLegend, TreeMapTooltip]}/>\r\n\t\t\t\t\t\t</TreeMapComponent>\r\n\t\t\t\t\t</div>\r\n                    \r\n\t\t\t\t\t<div className='col-md-3 property-section'>\r\n\t\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t\t<table id='property' title='Properties' className='property-panel-table' style={{ width: '110%', marginBottom: '20px' }}>\r\n                                <tr>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Color Mapping Type</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"Type\" width=\"120px\" index={0} change={this.typeChange.bind(this)} ref={d => this.typeElement = d} dataSource={this.dropList} fields={{ text: 'text', value: 'value' }}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr id=\"hideOne\">\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Change Opacity</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<CheckBoxComponent id='opacity' checked={false} change={this.opacityChange.bind(this)} ref={d => this.opacityElement = d} disabled={true}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr id=\"hideTwo\">\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Min Opacity</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"range\" id='minOpacity' disabled onChange={this.minOpacityChange.bind(this)} ref={d => this.minOpacityElement = d} min=\"0\" max=\"1\" step=\"0.1\" defaultValue=\"0.5\"/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr id=\"hideThree\">\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Max Opacity</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<input type=\"range\" id='maxOpacity' disabled onChange={this.maxOpacityChange.bind(this)} ref={d => this.maxOpacityElement = d} min=\"0\" max=\"1\" step=\"0.1\" defaultValue=\"1\"/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t\t</div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<ColorMapping />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}