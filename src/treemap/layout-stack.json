{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","treemap-data/economics.json":"{\r\n    \"economics\" : [\r\n        {\"State\":\"United States\", \"GDP\":17946, \"percentage\":11.08, \"Rank\":1},\t \r\n        {\"State\":\"China\", \"GDP\":10866, \"percentage\": 28.42, \"Rank\":2},\t \r\n        {\"State\":\"Japan\", \"GDP\":4123, \"percentage\":-30.78, \"Rank\":3},\t \r\n        {\"State\":\"Germany\", \"GDP\":3355, \"percentage\":-5.19, \"Rank\":4},\t \r\n        {\"State\":\"United Kingdom\", \"GDP\":2848, \"percentage\":8.28, \"Rank\":5},\t \r\n        {\"State\":\"France\", \"GDP\":2421, \"percentage\":-9.69, \"Rank\":6},\t \r\n        {\"State\":\"India\", \"GDP\":2073, \"percentage\":13.65, \"Rank\":7},\t \r\n        {\"State\":\"Italy\", \"GDP\":1814, \"percentage\":-12.45, \"Rank\":8},\t \r\n        {\"State\":\"Brazil\", \"GDP\":1774, \"percentage\":-27.88, \"Rank\":9},\t \r\n        {\"State\":\"Canada\", \"GDP\":1550, \"percentage\":-15.02, \"Rank\":10}\t \r\n    ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Layout sample for treemap\r\n */\r\nimport * as React from \"react\";\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { TreeMapComponent, Inject, TreeMapTooltip } from '@syncfusion/ej2-react-treemap';\r\nimport { PropertyPane } from './property-pane';\r\nimport { SampleBase } from './sample-base';\r\nimport * as data from './treemap-data/economics.json';\r\nlet datasource = data;\r\nexport class Layout extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        // Code for Property Panel\r\n        this.droplist = [\r\n            { text: 'Squarified', value: 'Squarified' },\r\n            { text: 'Horizontal', value: 'SliceAndDiceHorizontal' },\r\n            { text: 'Vertical', value: 'SliceAndDiceVertical' },\r\n            { text: 'Auto', value: 'SliceAndDiceAuto' },\r\n        ];\r\n        this.dropList = [\r\n            { text: 'TopLeftBottomRight', value: 'TopLeftBottomRight' },\r\n            { text: 'TopRightBottomLeft', value: 'TopRightBottomLeft' },\r\n            { text: 'BottomLeftTopRight', value: 'BottomLeftTopRight' },\r\n            { text: 'BottomRightTopLeft', value: 'BottomRightTopLeft' }\r\n        ];\r\n    }\r\n    layoutChange() {\r\n        this.treemapInstance.layoutType = this.layoutElement.value;\r\n        this.treemapInstance.refresh();\r\n    }\r\n    renderDirectionChange() {\r\n        this.treemapInstance.renderDirection = this.renderDirectionElement.value;\r\n        this.treemapInstance.refresh();\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n\t\t\t\t<style>\r\n\t\t\t\t\t{SAMPLE_CSS}\r\n\t\t\t\t</style>\r\n\t\t\t\t<div className='control-section'>\r\n\t\t\t\t\t<div className='col-md-9'>\r\n\t\t\t\t\t\t<TreeMapComponent load={this.load.bind(this)} id='treemap-container' ref={m => this.treemapInstance = m} titleSettings={{\r\n            text: 'Top 10 countries by GDP Nominal - 2015',\r\n            textStyle: { size: '15px' }\r\n        }} dataSource={datasource.economics} weightValuePath='GDP' tooltipSettings={{\r\n            visible: true,\r\n            format: '${State}<br>Rank : ${Rank}'\r\n        }} rangeColorValuePath='GDP' leafItemSettings={{\r\n            labelPath: 'State',\r\n            labelFormat: '${State}<br>$${GDP} Trillion<br>(${percentage} %)',\r\n            labelStyle: {\r\n                color: '#000000'\r\n            },\r\n            border: {\r\n                color: '#000000',\r\n                width: 0.5\r\n            },\r\n            colorMapping: [\r\n                {\r\n                    from: 1550,\r\n                    to: 17946,\r\n                    color: '#9cbb59',\r\n                    minOpacity: 0.7,\r\n                    maxOpacity: 1,\r\n                }\r\n            ]\r\n        }}>\r\n\t\t\t\t\t\t\t<Inject services={[TreeMapTooltip]}/>\r\n\t\t\t\t\t\t</TreeMapComponent>\r\n\t\t\t\t\t\t\r\n\t\t\t\t\t\t<div style={{ float: 'right', marginright: '10px' }}>Source:\r\n       <a href=\"https://www.reinisfischer.com/top-10-largest-economies-world-gdp-nominal-2015\" target=\"_blank\">www.reinisfischer.com</a>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t\r\n\t\t\t\t\t<div className='col-md-3 property-section'>\r\n\t\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t\t<table id='property' title='Properties' className='property-panel-table' style={{ width: '100%', marginBottom: '20px' }}>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Layout Type</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"layoutMode\" width=\"120px\" index={0} change={this.layoutChange.bind(this)} ref={d => this.layoutElement = d} dataSource={this.droplist} fields={{ text: 'text', value: 'value' }}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t\t<tr>\r\n\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>Render Direction</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t\t<td>\r\n\t\t\t\t\t\t\t\t\t\t<div>\r\n\t\t\t\t\t\t\t\t\t\t\t<DropDownListComponent id=\"highlightMode\" width=\"115px\" index={0} dataSource={this.dropList} fields={{ text: 'text', value: 'value' }} change={this.renderDirectionChange.bind(this)} ref={d => this.renderDirectionElement = d}/>\r\n\t\t\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t\t\t\t</td>\r\n\t\t\t\t\t\t\t\t</tr>\r\n\t\t\t\t\t\t\t</table>\r\n\t\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>);\r\n    }\r\n}\r\n\nrender(<Layout />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}