{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from \"react\";\r\nimport { DiagramComponent } from \"@syncfusion/ej2-react-diagrams\";\r\nimport { SampleBase } from './sample-base';\r\nimport { CircularGaugeComponent } from \"@syncfusion/ej2-react-circulargauge\";\r\nlet htmlcontent = '<div id=\"gauge\" style=\"height:100%; width:100%; overflow:hidden;\"> </div>';\r\nlet shape = { type: \"HTML\", content: htmlcontent };\r\nlet node1 = {\r\n    id: \"node\",\r\n    offsetX: 450,\r\n    offsetY: 200,\r\n    width: 300,\r\n    height: 300,\r\n    shape: shape\r\n};\r\nlet diagramInstance;\r\nexport class HtmlNode extends SampleBase {\r\n    rendereComplete() {\r\n        getHtmlContent();\r\n        diagramInstance.fitToPage();\r\n    }\r\n    render() {\r\n        return (<div className=\"control-pane\">\r\n        <div className=\"control-section\">\r\n          <DiagramComponent id=\"diagram\" ref={diagram => (diagramInstance = diagram)} width={\"100%\"} height={\"640px\"} nodes={[node1]} snapSettings={{ constraints: 0 }}/>\r\n        </div>\r\n      </div>);\r\n    }\r\n}\r\n//Add Gauge control to Diagram.\r\nfunction getHtmlContent() {\r\n    let div = document.getElementById(\"gauge\");\r\n    let circularGauge = new CircularGaugeComponent({\r\n        load: (args) => {\r\n            let selectedTheme = location.hash.split(\"/\")[1];\r\n            selectedTheme = selectedTheme ? selectedTheme : \"Material\";\r\n            args.gauge.theme = (selectedTheme.charAt(0).toUpperCase() +\r\n                selectedTheme.slice(1));\r\n        },\r\n        axes: [\r\n            {\r\n                lineStyle: { width: 10, color: \"transparent\" },\r\n                labelStyle: {\r\n                    position: \"Inside\",\r\n                    useRangeColor: false,\r\n                    font: { size: \"12px\", fontFamily: \"Roboto\", fontStyle: \"Regular\" }\r\n                },\r\n                majorTicks: { height: 10, offset: 5, color: \"#9E9E9E\" },\r\n                minorTicks: { height: 0 },\r\n                annotations: [\r\n                    {\r\n                        content: '<div><span style=\"font-size:14px; color:#9E9E9E; font-family:Regular\">Speedometer</span></div>',\r\n                        radius: \"30%\",\r\n                        angle: 0,\r\n                        zIndex: \"1\"\r\n                    },\r\n                    {\r\n                        content: '<div><span style=\"font-size:20px; color:#424242; font-family:Regular\">65 MPH</span></div>',\r\n                        radius: \"40%\",\r\n                        angle: 180,\r\n                        zIndex: \"1\"\r\n                    }\r\n                ],\r\n                startAngle: 210,\r\n                endAngle: 150,\r\n                minimum: 0,\r\n                maximum: 120,\r\n                radius: \"80%\",\r\n                ranges: [\r\n                    { start: 0, end: 40, color: \"#30B32D\" },\r\n                    { start: 40, end: 80, color: \"#FFDD00\" },\r\n                    { start: 80, end: 120, color: \"#F03E3E\" }\r\n                ],\r\n                pointers: [\r\n                    {\r\n                        value: 65,\r\n                        radius: \"60%\",\r\n                        color: \"#757575\",\r\n                        pointerWidth: 8,\r\n                        cap: { radius: 7, color: \"#757575\" },\r\n                        needleTail: { length: \"18%\", color: \"#757575\" }\r\n                    }\r\n                ]\r\n            }\r\n        ]\r\n    });\r\n    circularGauge.appendTo(\"#gauge\");\r\n    return div;\r\n}\r\n\nrender(<HtmlNode />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}