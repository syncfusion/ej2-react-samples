{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from \"react\";\r\nimport { SnapConstraints, DiagramComponent, DiagramTools } from \"@syncfusion/ej2-react-diagrams\";\r\nimport { SampleBase } from './sample-base';\r\n//Initialize shape\r\nlet shape = { type: \"Basic\", shape: \"Ellipse\" };\r\n//Initialize Diagram Nodes\r\nlet nodes = [\r\n    {\r\n        id: \"datascience\",\r\n        offsetX: 450,\r\n        offsetY: 232,\r\n        width: 400,\r\n        height: 400,\r\n        annotations: [\r\n            {\r\n                content: \"Data Science\",\r\n                offset: { x: 0.5, y: 0.1 }\r\n            }\r\n        ],\r\n        shape: shape,\r\n        style: { fill: \"#f2f2f2\", strokeColor: \"#acacac\", strokeWidth: 1 }\r\n    },\r\n    {\r\n        id: \"trignometry\",\r\n        offsetX: 515,\r\n        offsetY: 205,\r\n        width: 200,\r\n        height: 200,\r\n        shape: shape,\r\n        annotations: [\r\n            {\r\n                content: \"Trignometry\",\r\n                offset: { x: 0.5, y: 0.4 },\r\n                horizontalAlignment: \"Left\"\r\n            },\r\n            { content: \"Thesis\", offset: { x: 0.45, y: 0.8 } }\r\n        ],\r\n        style: { fill: \"#feb42f\", opacity: 0.2, strokeColor: \"#feb42f\" }\r\n    },\r\n    {\r\n        id: \"expertise\",\r\n        offsetX: 445,\r\n        offsetY: 290,\r\n        width: 200,\r\n        height: 200,\r\n        shape: shape,\r\n        annotations: [\r\n            {\r\n                content: \"Expertise\",\r\n                offset: { x: 0.5, y: 0.7 },\r\n                verticalAlignment: \"Top\"\r\n            }\r\n        ],\r\n        style: { fill: \"#6acbd4\", opacity: 0.2, strokeColor: \"#6acbd4\" }\r\n    },\r\n    {\r\n        id: \"programming\",\r\n        offsetX: 388,\r\n        offsetY: 205,\r\n        width: 200,\r\n        height: 200,\r\n        annotations: [\r\n            {\r\n                content: \"Programming \",\r\n                offset: { x: 0.5, y: 0.4 },\r\n                horizontalAlignment: \"Right\"\r\n            },\r\n            {\r\n                content: \"Assembly\",\r\n                offset: { x: 0.7, y: 0.35 },\r\n                horizontalAlignment: \"Left\"\r\n            },\r\n            {\r\n                content: \"Horizon\",\r\n                offset: { x: 0.7, y: 0.6 },\r\n                horizontalAlignment: \"Left\"\r\n            },\r\n            { content: \"Middleware\", offset: { x: 0.5, y: 0.8 } }\r\n        ],\r\n        shape: shape,\r\n        style: { fill: \"#ed1d79\", opacity: 0.2, strokeColor: \"#ed1d79\" }\r\n    }\r\n];\r\nlet diagramInstance;\r\nexport class VennDiagram extends SampleBase {\r\n    rendereComplete() {\r\n        diagramInstance.fitToPage();\r\n    }\r\n    render() {\r\n        return (<div className=\"control-pane\">\r\n        <div className=\"control-section\">\r\n          <div className=\"content-wrapper\" style={{ width: \"100%\" }}>\r\n            <DiagramComponent id=\"diagram\" ref={diagram => (diagramInstance = diagram)} width={\"100%\"} height={\"580\"} nodes={nodes} snapSettings={{ constraints: SnapConstraints.None }} tool={DiagramTools.ZoomPan}/>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<VennDiagram />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}