{"index.css":" .control-section .content-wrapper.sample-mask {\r\n        width: 30%;\r\n        margin: 0 auto;\r\n        min-width: 185px;\r\n        max-width: 350px;\r\n    }\r\n    \r\n  .sample-mask .control-label {\r\n        padding: 24px 0px 10px 0px;\r\n        font-size: 12px;\r\n        opacity: 1;\r\n    }\r\n    .property-panel-content{\r\n        overflow: auto;\r\n    }\r\n    \r\n    .control-section .col-lg-8 .content-wrapper.sample-mask {\r\n        width: 45%;\r\n    }\r\n    \r\n    .mask-wrap:first-child {\r\n        margin-top: 50px;\r\n    }\r\n    \r\n    .mask-wrap {\r\n        margin-top: 35px;\r\n    }","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { MaskedTextBoxComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\n\r\nexport class Formats extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        // Prompt character options\r\n        this.promptData = [\r\n            { prompt: '_' },\r\n            { prompt: '#' },\r\n            { prompt: '@' },\r\n            { prompt: '*' },\r\n        ];\r\n        this.ddlFields = { text: 'prompt', value: 'prompt' };\r\n    }\r\n    // Bind event on Dropdown List change\r\n    onDdlChange(args) {\r\n        // 'promptChar' on the Masked Textbox has been updated\r\n        this.maskInstance.setProperties({ promptChar: this.listObj.value });\r\n        // Masked and un-masked values will be updated\r\n        document.getElementById('val1').innerHTML = this.maskInstance.value;\r\n        document.getElementById('val2').innerHTML = this.maskInstance.getMaskedValue();\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n        <div className='control-section'>\r\n          <div className=' col-lg-8'>\r\n            <div className=\"content-wrapper sample-mask\">\r\n              <div className=\"control-label\">Formats</div>\r\n              <MaskedTextBoxComponent mask='(999)-999-9999' floatLabelType='Never' created={this.onCreated.bind(this)} change={this.maskChange} ref={mask => this.maskInstance = mask}></MaskedTextBoxComponent>\r\n            </div>\r\n          </div>\r\n          <div className='col-lg-4 property-section'>\r\n            <PropertyPane title='Properties'>\r\n              <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\r\n                <tbody>\r\n                  <tr>\r\n                    <td style={{ width: '50%' }}>\r\n                      <div>Mask</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px' }}>\r\n                      <div style={{ maxWidth: '200px' }}>\r\n                        <input id=\"input1\" type=\"text\" className='e-input' onKeyUp={this.sampleKeyUp.bind(this)}/>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: '50%' }}>\r\n                      <div>Prompt Character</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px' }}>\r\n                      <div style={{ maxWidth: '200px' }}>\r\n                        <DropDownListComponent id=\"ddlelement\" dataSource={this.promptData} ref={(dropdownlist) => { this.listObj = dropdownlist; }} fields={this.ddlFields} value='_' change={this.onDdlChange.bind(this)} popupHeight=\"220px\"/>\r\n                      </div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: '50%' }}>\r\n                      <div>Value</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px' }}>\r\n                      <div id=\"val1\"></div>\r\n                    </td>\r\n                  </tr>\r\n                  <tr>\r\n                    <td style={{ width: '50%', paddingTop: '5px', paddingBottom: '10px' }}>\r\n                      <div>Masked Value</div>\r\n                    </td>\r\n                    <td style={{ width: '50%', paddingRight: '0px', paddingTop: '5px', paddingBottom: '10px' }}>\r\n                      <div id=\"val2\"></div>\r\n                    </td>\r\n                  </tr>\r\n                </tbody>\r\n              </table>\r\n            </PropertyPane>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n    onCreated() {\r\n        document.getElementById('input1').value = this.maskInstance.mask;\r\n        document.getElementById('val2').innerHTML = this.maskInstance.getMaskedValue();\r\n    }\r\n    maskChange(args) {\r\n        document.getElementById('val1').innerHTML = args.value;\r\n        document.getElementById('val2').innerHTML = args.maskedValue;\r\n    }\r\n    sampleKeyUp() {\r\n        let ele1 = document.getElementById('input1');\r\n        let start = ele1.selectionStart;\r\n        let end = ele1.selectionEnd;\r\n        this.maskInstance.setProperties({ mask: document.getElementById('input1').value });\r\n        document.getElementById('val1').innerHTML = this.maskInstance.value;\r\n        document.getElementById('val2').innerHTML = this.maskInstance.getMaskedValue();\r\n        ele1.setSelectionRange(start, end);\r\n    }\r\n}\r\n\nrender(<Formats />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}