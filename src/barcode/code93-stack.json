{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from \"react\";\r\nimport { DropDownListComponent } from \"@syncfusion/ej2-react-dropdowns\";\r\nimport { TextBoxComponent, FormValidator } from '@syncfusion/ej2-react-inputs';\r\nimport { BarcodeGeneratorComponent } from \"@syncfusion/ej2-react-barcode-generator\";\r\nimport { SampleBase } from './sample-base';\r\nimport { NumericTextBoxComponent, ColorPickerComponent } from \"@syncfusion/ej2-react-inputs\";\r\nimport { CheckBoxComponent } from \"@syncfusion/ej2-react-buttons\";\r\nlet canShowError = false;\r\nlet customFn = (args) => {\r\n    if (canShowError) {\r\n        return false;\r\n    }\r\n    return true;\r\n};\r\nlet options = {\r\n    rules: {\r\n        'textbox_0': { minLength: [customFn, 'Invalid input'] },\r\n    }\r\n};\r\nexport class Code93 extends SampleBase {\r\n    rendereComplete() {\r\n        let div = document.getElementsByClassName('sb-property-border')[0];\r\n        this.formObject = new FormValidator('#form1', options);\r\n        div.style.left = '63%';\r\n    }\r\n    render() {\r\n        return (<div className=\"control-pane\">\r\n        <style>{sample_css}</style>\r\n        <div className=\"col-lg-8 control-section\" style={{ width: \"64%\" }}>\r\n        <div className=\"content-wrapper\" style={{ width: \"100%\", height: \"590px\" }}>\r\n            <div className='center'>\r\n              <div className='centercontrol'>\r\n                <BarcodeGeneratorComponent id=\"barcode\" ref={barcode => (barcodeInstance = barcode)} width={\"200px\"} invalid={(arg) => {\r\n            canShowError = true;\r\n            this.formObject.validate();\r\n        }} height={\"150px\"} mode='SVG' type='Code93' value='01234567'></BarcodeGeneratorComponent>\r\n              </div>\r\n            </div>\r\n            <div className='allowedText'>\r\n              <span style={{ fontWeight: 600 }}> Allowed Input characters :</span>  This bar code support 0-9 , * , -'\r\n            </div>\r\n          </div>\r\n        </div>\r\n        <div className=\"col-lg-4 property-section\" style={{ paddingRight: \"0px\", paddingLeft: \"18px\" }}>\r\n          <div className=\"property-panel-header\">Appearance</div>\r\n          <div id=\"propertypanel\" className=\"e-remove-selection\">\r\n            <div className=\"property-section-content\">\r\n              <div className=\"row sb-child-row\">\r\n                <div className=\"col-xs-2 top\" style={{ paddingLeft: \"0px\" }}>\r\n                  Value\r\n                </div>\r\n                <div className=\"col-xs-10\" style={{ paddingLeft: \"0px\" }}>\r\n                  <form id=\"form1\" method=\"post\">\r\n                    <div id='barcodevaluediv'>\r\n                      <TextBoxComponent ref={value => (barcodeValueInstance = value)} value='123456789' id='textbox_0' change={valueOnChange}/>\r\n                    </div>\r\n                  </form>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row sb-child-row\">\r\n              <div>\r\n                <div className=\"col-xs-2 top\" style={{ paddingLeft: \"0px\", paddingRight: \"20px\" }}>\r\n                  Width\r\n                    </div>\r\n                <div className=\"col-xs-3\" style={{ width: \"33%\", paddingLeft: \"0px\" }}>\r\n                  <NumericTextBoxComponent \r\n        //ref={widthRef => (portWidthNum = widthRef)}\r\n        id=\"width\" enabled={true} format={\"###.##\"} value={200} step={2} min={150} max={250} change={barcodewidthChange}/>\r\n                </div>\r\n                <div className=\"rightProperty\">\r\n                  height\r\n                    </div>\r\n                <div className=\"col-xs-3\" style={{ width: \"33%\", paddingLeft: \"0px\" }}>\r\n                  <NumericTextBoxComponent \r\n        //ref={widthRef => (portWidthNum = widthRef)}\r\n        id=\"width\" enabled={true} format={\"###.##\"} value={150} step={2} min={100} max={200} change={barcodeheightChange}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"row sb-child-row\" style={{ marginTop: \"20px\" }}>\r\n              <div className=\"col-xs-6\" style={{ paddingLeft: \"0px\" }}>\r\n                <div className=\"col-xs-1\" style={{ paddingLeft: \"0px\" }}>\r\n                  <CheckBoxComponent id=\"textVisibility\" checked={true} change={textVisibility}/>\r\n                </div>\r\n                <div className=\"col-xs-10\">Text Visibility</div>\r\n              </div>\r\n              <div className=\"col-xs-4\" style={{ paddingLeft: '0px', marginLeft: '13px' }}>\r\n                <div className=\"col-xs-1\" style={{ paddingLeft: '0px' }}>\r\n                  <CheckBoxComponent id=\"svgMode\" checked={true} change={modeChange}/>\r\n                </div>\r\n                <div className=\"svgTextClass\">SVG Mode</div>\r\n              </div>\r\n\r\n            </div>\r\n            <div className=\"row sb-child-row\">\r\n              <div style={{ marginTop: \"2px\" }}>\r\n                <div className=\"col-xs-2\" style={{ marginTop: \"5px\", paddingLeft: '0' }}>BG Color</div>\r\n                <div className=\"col-xs-4\" style={{ marginLeft: \"0px\" }}>\r\n                  <ColorPickerComponent id=\"bgcolor\" value=\"#000\" change={barCodeColorChange}/>\r\n                </div>\r\n                <div className=\"col-xs-2\" style={{ width: '18%', paddingLeft: '12px', marginTop: '5px' }}>Fore Color</div>\r\n                <div className=\"col-xs-3\" style={{ paddingLeft: \"2px\" }}>\r\n                  <ColorPickerComponent id=\"forecolor\" value=\"#000\" change={foreColorChange}/>\r\n                </div>\r\n              </div>\r\n            </div>\r\n            <div className=\"property-panel-header\">Margin</div>\r\n            <div className=\"row sb-child-row\">\r\n              <div className=\"col-xs-2 top\" style={{ paddingLeft: '0px' }}>Left</div>\r\n              <div className=\"col-xs-3\" style={{ width: '33%', paddingLeft: '0px' }}>\r\n                <NumericTextBoxComponent id=\"marginLeft\" enabled={true} format={\"###.##\"} value={10} step={1} min={-10} max={30} change={barcodeMarginLeft}/>\r\n              </div>\r\n              <div className=\"rightProperty\">Right</div>\r\n              <div className=\"col-xs-3\" style={{ width: '33%', paddingLeft: '0px' }}>\r\n                <NumericTextBoxComponent id=\"marginRight\" enabled={true} format={\"###.##\"} value={10} step={1} min={-10} max={30} change={barcodeMarginRight}/>\r\n                \r\n              </div>\r\n            </div>\r\n            <div className=\"row sb-child-row\">\r\n              <div className=\"col-xs-2 top\" style={{ paddingLeft: '0px' }}>Top</div>\r\n              <div className=\"col-xs-3\" style={{ width: '33%', paddingLeft: '0px' }}>\r\n                <div style={{ paddingBottom: '8px' }}>\r\n                  <NumericTextBoxComponent id=\"marginbottom\" enabled={true} format={\"###.##\"} value={10} step={1} min={-10} max={30} change={barcodeMarginTop}/>\r\n                </div>\r\n              </div>\r\n              <div className=\"rightProperty\">Bottom</div>\r\n              <div className=\"col-xs-3\" style={{ width: '33%', paddingLeft: '0px' }}>\r\n                <NumericTextBoxComponent id=\"marginBottom\" enabled={true} format={\"###.##\"} value={10} step={1} min={-10} max={30} change={barcodeMarginBottom}/>\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"property-panel-header\"> Text Properties</div>\r\n          <div className=\"row sb-child-row\">\r\n            <div className=\"col-xs-2 top\" style={{ paddingLeft: '0px' }}>Top</div>\r\n            <div className=\"col-xs-3\" style={{ width: '33%', paddingLeft: '0px' }}>\r\n              \r\n              <NumericTextBoxComponent id=\"TextmarginTop\" enabled={true} format={\"###.##\"} value={0} step={1} min={-10} max={20} change={TextmarginTopChange}/>\r\n            </div>\r\n            <div className=\"rightProperty\">Bottom</div>\r\n            <div className=\"col-xs-3\" style={{ width: '33%', paddingLeft: '0px' }}>\r\n              \r\n              <NumericTextBoxComponent id=\"TextmarginTop\" enabled={true} format={\"###.##\"} value={0} step={1} min={-10} max={20} change={TextmarginBottomChangeChange}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row sb-child-row\">\r\n          <div className=\"col-xs-2\" style={{ paddingLeft: '0px' }}>\r\n              Position\r\n                </div>\r\n            <div className=\"textPropertyClass\">\r\n              <DropDownListComponent id=\"position\" popupWidth={150} width={\"100%\"} value='Bottom' index={0} dataSource={positionList} change={updatePosition} ref={fontfamily => (position = fontfamily)}/>\r\n\r\n            </div>\r\n          </div>\r\n\r\n\r\n          <div className=\"row sb-child-row\">\r\n          <div className=\"col-xs-2\" style={{ paddingLeft: '0px' }}>\r\n              Alignment\r\n                </div>\r\n            <div className=\"textPropertyClass\">\r\n              \r\n              <DropDownListComponent id=\"position\" popupWidth={150} width={\"100%\"} value='Center' index={0} dataSource={alignmentValue} change={updateAlignment} ref={fontfamily => (alignment = fontfamily)}/>\r\n            </div>\r\n          </div>\r\n          <div className=\"row sb-child-row\">\r\n            \r\n            <div className=\"col-xs-3 top\" style={{ width: '17%', paddingLeft: '0px' }}>\r\n              Display Text\r\n                </div>\r\n            \r\n            <div className=\"textProperty\">\r\n              \r\n              <TextBoxComponent ref={value => (barcodetextInstance = value)} value='123456789' change={textOnChange}/>\r\n            </div>\r\n          </div>\r\n        </div>\r\n        \r\n      </div>);\r\n    }\r\n}\r\nconst sample_css = ` \r\n.column-style {\r\n  display: table;\r\n  height: 35px;\r\n  padding-right: 4px;\r\n  padding-left: 0px;\r\n  width: calc((100% - 12px) / 3);\r\n}\r\n\r\n.row {\r\n  margin-left: 0px;\r\n  margin-right: 0px;\r\n}\r\n\r\n.row-header {\r\n  font-size: 15px;\r\n  font-weight: 500;\r\n}\r\n\r\n.labelstyle {\r\n  padding-top: 10px;\r\n  float: left;\r\n  padding-right: 10px\r\n}\r\n\r\n.propertystyle {\r\n  padding-top: 22px;\r\n  font-weight: 600;\r\n  font-size: 15px;\r\n}\r\n\r\n.sb-child-row {\r\n  margin-top: 8px;\r\n}\r\n\r\n.center {\r\n  margin-left: 14px;\r\n  margin-right: 17px;\r\n  margin-top: 14px;\r\n  min-width: 280px;\r\n  width: auto;\r\n  border: 2px solid lightgray;\r\n  min-height: 40%;\r\n  padding-top: 35px;\r\n}\r\n\r\n.col-lg-4-property-section {\r\n  width: 36%;\r\n}\r\n\r\n.rightProperty {\r\n  margin-top: 10px;\r\n  width: 16.66666667%;\r\n  float: left;\r\n  position: relative;\r\n  min-height: 1px;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n}\r\n\r\n.textProperty {\r\n  width: 81%;\r\n  padding-left: 0px;\r\n  padding-right: 0;\r\n  float: left;\r\n  position: relative;\r\n  min-height: 1px;\r\n}\r\n\r\n.sb-mobile-prop-pane .svgTextClass {\r\n  width: 40px;\r\n  padding-left: 24px;\r\n}\r\n\r\n.svgTextClass {\r\n  width: 100px;\r\n  float: left;\r\n  position: relative;\r\n  min-height: 1px;\r\n  padding-right: 15px;\r\n  padding-left: 15px;\r\n}\r\n\r\n\r\n\r\n.sb-mobile-prop-pane .rightProperty {\r\n  padding-left: 2px;\r\n}\r\n\r\n.sb-mobile-prop-pane .textPropertyClass {\r\n  padding-left: 30px;\r\n}\r\n\r\n.sb-mobile-prop-pane .textProperty {\r\n  padding-left: 30px;\r\n  width: 77%\r\n}\r\n\r\n.textPropertyClass {\r\n  width: 83.33333333%;\r\n  float: left;\r\n  padding-left: 0px;\r\n  position: relative;\r\n  min-height: 1px;\r\n  padding-right: 15px;\r\n}\r\n\r\n.allowedText {\r\n  margin-left: 14px;\r\n  margin-right: 17px;\r\n  margin-top: 14px;\r\n  width: auto;\r\n  height: auto;\r\n}\r\n\r\n.errorMessage {\r\n  margin-left: 14px;\r\n  margin-right: 17px;\r\n  margin-top: 14px;\r\n  width: auto;\r\n  height: auto;\r\n}\r\n\r\n.errorMessage {\r\n  margin-left: 14px;\r\n  margin-right: 17px;\r\n  margin-top: 14px;\r\n  width: auto;\r\n  height: auto;\r\n}\r\n\r\n\r\n.top {\r\n  margin-top: 10px;\r\n}\r\n\r\n.centercontrol {\r\n  margin: auto;\r\n  width: 200px;\r\n  height: 150px;\r\n}\r\n\r\n#password-info {\r\n  position: absolute;\r\n  margin-top: 30px;\r\n}\r\n.sb-child-row {\r\n  margin-top: 8px;\r\n}\r\n\r\n\r\n.sb-property-border sb-prop-md-4{\r\n  left: 64%\r\n}\r\n\r\n.property-panel-header {\r\n  padding-top: 15px;\r\n  padding-bottom: 15px;\r\n}\r\n\r\n\r\n.row-header {\r\n  font-size: 13px;\r\n  font-weight: 500;\r\n  padding-left: 10px\r\n}\r\n\r\n\r\n.center {\r\n  margin-left: 14px;\r\n  margin-right: 17px;\r\n  margin-top: 14px;\r\n  min-width: 280px;\r\n  width: auto;\r\n  border: 2px solid lightgray;\r\n  min-height: 40%;\r\n  padding-top: 35px;\r\n}\r\n`;\r\nlet barcodeInstance;\r\nlet position;\r\nlet alignment;\r\nlet barcodeValueInstance;\r\nlet barcodetextInstance;\r\nfunction valueOnChange(args) {\r\n    let divElement = document.getElementById('barcodevaluediv');\r\n    divElement.children[0].className = 'e-input-group e-control-wrapper';\r\n    barcodeValueInstance.cssClass = 'e-input-group e-control-wrapper';\r\n    barcodeValueInstance.dataBind();\r\n    barcodeInstance.value = args.value.toString();\r\n    barcodetextInstance.value = args.value.toString();\r\n}\r\nlet positionList = [\r\n    { type: 'Bottom', text: 'Bottom' },\r\n    { type: 'Top', text: 'Top' },\r\n];\r\nlet alignmentValue = [\r\n    { type: 'Left', text: 'Left' },\r\n    { type: 'Right', text: 'Right' },\r\n    { type: 'Center', text: 'Center' },\r\n];\r\nfunction barcodewidthChange(args) {\r\n    barcodeInstance.width = args.value.toString();\r\n}\r\nfunction barcodeheightChange(args) {\r\n    barcodeInstance.height = args.value.toString();\r\n}\r\nfunction textVisibility(args) {\r\n    barcodeInstance.displayText.visibility = args.checked;\r\n}\r\nfunction modeChange(args) {\r\n    barcodeInstance.mode = args.checked ? 'SVG' : 'Canvas';\r\n}\r\nfunction barCodeColorChange(args) {\r\n    barcodeInstance.backgroundColor = args.currentValue.hex;\r\n}\r\nfunction foreColorChange(args) {\r\n    barcodeInstance.foreColor = args.currentValue.hex;\r\n}\r\nfunction barcodeMarginLeft(args) {\r\n    barcodeInstance.margin.left = args.value;\r\n}\r\nfunction barcodeMarginRight(args) {\r\n    barcodeInstance.margin.right = args.value;\r\n}\r\nfunction barcodeMarginTop(args) {\r\n    barcodeInstance.margin.top = args.value;\r\n}\r\nfunction barcodeMarginBottom(args) {\r\n    barcodeInstance.margin.bottom = args.value;\r\n}\r\nfunction TextmarginTopChange(args) {\r\n    barcodeInstance.displayText.margin.top = args.value;\r\n}\r\nfunction TextmarginBottomChangeChange(args) {\r\n    barcodeInstance.displayText.margin.bottom = args.value;\r\n}\r\nfunction updatePosition(value) {\r\n    let positionValue = value.value;\r\n    barcodeInstance.displayText.position = (positionValue);\r\n}\r\nfunction updateAlignment(value) {\r\n    let alignnValue = value.value;\r\n    barcodeInstance.displayText.alignment = (alignnValue);\r\n}\r\nfunction textOnChange(args) {\r\n    barcodeInstance.displayText.text = args.value.toString();\r\n}\r\n\nrender(<Code93 />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}