{"index.css":".toast-pos-section #toast_pos_property {\r\n        height: 500px;\r\n        border: none;\r\n        margin: auto;\r\n    }\r\n\r\n    #toast_pos_property td {\r\n        width: 50%;\r\n    }\r\n\r\n    .e-toast-icon.e-laura.e-icons {\r\n        border-radius: 50%;\r\n        background-image: url('////npmci.syncfusion.com/development/react/demos/src/toast/resource/laura.png');\r\n        background-repeat: no-repeat;\r\n        background-size: cover;\r\n        height: 50px !important;\r\n        width: 100px !important;\r\n        background-size: 50px 50px;\r\n        margin: 0;\r\n    }\r\n\r\n\r\n    @media (min-width: 740px) {\r\n        #toast_pos_property {\r\n            width: 450px;\r\n        }\r\n    }","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\r\nimport { ButtonComponent, RadioButtonComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { ToastComponent } from '@syncfusion/ej2-react-notifications';\r\n\r\nexport class Positions extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.position = { X: 'Right', Y: 'Bottom' };\r\n        this.target = document.body;\r\n        this.initialWid = '';\r\n        this.customFlag = false;\r\n        this.dropData = [\r\n            { Id: 'topleft', Text: 'Top Left' },\r\n            { Id: 'topright', Text: 'Top Right' },\r\n            { Id: 'topcenter', Text: 'Top Center' },\r\n            { Id: 'topfullwidth', Text: 'Top Full Width' },\r\n            { Id: 'bottomleft', Text: 'Bottom Left' },\r\n            { Id: 'bottomright', Text: 'Bottom Right' },\r\n            { Id: 'bottomcenter', Text: 'Bottom Center' },\r\n            { Id: 'bottomfullwidth', Text: 'Bottom Full Width' },\r\n        ];\r\n        this.dropFields = { text: 'Text', value: 'Id' };\r\n        this.value = 'bottomright';\r\n        this.dropdownRef = element => {\r\n            this.dropdownEle = element;\r\n        };\r\n        this.customChooseRef = element => {\r\n            this.customChooseEle = element;\r\n        };\r\n        this.xPosRef = element => {\r\n            this.xPosEle = element;\r\n        };\r\n        this.yPosRef = element => {\r\n            this.yPosEle = element;\r\n        };\r\n    }\r\n    checkboxChange(e) {\r\n        if (this.radio1.checked) {\r\n            this.toastObj.hide('All');\r\n            this.toastObj.target = '#toast_pos_target';\r\n            this.toastShow(1000);\r\n        }\r\n    }\r\n    toastShow(timeOutDelay) {\r\n        setTimeout(function () {\r\n            this.toastObj.show();\r\n        }.bind(this), timeOutDelay);\r\n    }\r\n    checkboxChange1(e) {\r\n        if (this.radio2.checked) {\r\n            this.toastObj.hide('All');\r\n            this.toastObj.target = document.body;\r\n            this.toastShow(1000);\r\n        }\r\n    }\r\n    checkboxChange2(e) {\r\n        if (this.dropRadioObj.checked) {\r\n            this.toastObj.hide('All');\r\n            this.dropdownEle.style.display = 'table-cell';\r\n            this.customChooseEle.style.display = 'none';\r\n            this.setToastPosValue(this.dropDownObj.value.toString());\r\n            this.customFlag = false;\r\n            this.toastShow(1000);\r\n        }\r\n    }\r\n    checkboxChange3(e) {\r\n        if (this.customRadioObj.checked) {\r\n            this.toastObj.hide('All');\r\n            this.dropdownEle.style.display = 'none';\r\n            this.customChooseEle.style.display = 'table-cell';\r\n            this.setcustomPosValue();\r\n            this.customFlag = true;\r\n            this.toastShow(1000);\r\n        }\r\n    }\r\n    valueChange(e) {\r\n        this.toastObj.hide('All');\r\n        this.setToastPosValue(e.value.toString());\r\n        this.toastShow(1000);\r\n    }\r\n    setcustomPosValue() {\r\n        this.toastObj.width = this.initialWid;\r\n        this.toastObj.position.X = parseInt(this.xPosEle.value, 10);\r\n        this.toastObj.position.Y = parseInt(this.yPosEle.value, 10);\r\n    }\r\n    showBtnClick() {\r\n        if (this.customFlag) {\r\n            this.setcustomPosValue();\r\n        }\r\n        this.toastObj.show();\r\n    }\r\n    setToastPosValue(value) {\r\n        this.toastObj.width = this.initialWid;\r\n        switch (value) {\r\n            case 'topleft':\r\n                this.toastObj.position.X = 'Left';\r\n                this.toastObj.position.Y = 'Top';\r\n                break;\r\n            case 'topright':\r\n                this.toastObj.position.X = 'Right';\r\n                this.toastObj.position.Y = 'Top';\r\n                break;\r\n            case 'topcenter':\r\n                this.toastObj.position.X = 'Center';\r\n                this.toastObj.position.Y = 'Top';\r\n                break;\r\n            case 'topfullwidth':\r\n                this.toastObj.width = '100%';\r\n                this.toastObj.position.X = 'Center';\r\n                this.toastObj.position.Y = 'Top';\r\n                break;\r\n            case 'bottomleft':\r\n                this.toastObj.position.X = 'Left';\r\n                this.toastObj.position.Y = 'Bottom';\r\n                break;\r\n            case 'bottomright':\r\n                this.toastObj.position.X = 'Right';\r\n                this.toastObj.position.Y = 'Bottom';\r\n                break;\r\n            case 'bottomcenter':\r\n                this.toastObj.position.X = 'Center';\r\n                this.toastObj.position.Y = 'Bottom';\r\n                break;\r\n            case 'bottomfullwidth':\r\n                this.toastObj.width = '100%';\r\n                this.toastObj.position.X = 'Center';\r\n                this.toastObj.position.Y = 'Bottom';\r\n                break;\r\n        }\r\n    }\r\n    hideBtnClick() {\r\n        this.toastObj.hide('All');\r\n    }\r\n    created() {\r\n        setTimeout(function () {\r\n            this.toastShow(200);\r\n            this.initialWid = this.toastObj.width.toString();\r\n        }.bind(this), 200);\r\n    }\r\n    onclose(e) {\r\n        if (e.toastContainer.childElementCount === 0) {\r\n            this.toastBtnHide.element.style.display = 'none';\r\n        }\r\n    }\r\n    onbeforeOpen() {\r\n        this.toastBtnHide.element.style.display = 'inline-block';\r\n    }\r\n    render() {\r\n        document.addEventListener('click', function (e) {\r\n            if (!isNullOrUndefined(this.toastObj) && e.target !== this.toastBtnShow.element && this.toastObj.target === document.body) {\r\n                this.toastObj.hide('All');\r\n            }\r\n        }.bind(this));\r\n        return (<div className='control-pane'>\r\n                <div className='col-lg-12 control-section toast-pos-section'>\r\n                    <div className=\"e-sample-resize-container\" id=\"toast_pos_target\">\r\n                        <ToastComponent ref={(toast) => { this.toastObj = toast; }} id='toast_pos' title='Matt sent you a friend request' content='You have a friend request yet to accept.' icon='e-laura' position={this.position} target={this.target} created={this.created.bind(this)} close={this.onclose.bind(this)} beforeOpen={this.onbeforeOpen.bind(this)}></ToastComponent>\r\n                        <div id=\"toast_pos_property\">\r\n                            <table style={{ 'width': '100%' }}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div style={{ 'padding': '25px 0 0 0' }}>\r\n                                                <RadioButtonComponent ref={(scope) => { this.dropRadioObj = scope; }} id='dropdownRadio' checked={true} label='Position' name='toastPos' value=\"Position\" change={this.checkboxChange2.bind(this)}></RadioButtonComponent>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div style={{ 'padding': '25px 0 0 0' }}>\r\n                                                <RadioButtonComponent ref={(scope) => { this.customRadioObj = scope; }} id='customRedio' label='Custom' name='toastPos' value=\"Custom\" change={this.checkboxChange3.bind(this)}></RadioButtonComponent>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div id=\"dropdownChoose\">\r\n                                <div id=\"dropdown\" ref={this.dropdownRef} style={{ paddingTop: '25px' }}>\r\n                                    <DropDownListComponent ref={(dropdownlist) => { this.dropDownObj = dropdownlist; }} id=\"position\" dataSource={this.dropData} fields={this.dropFields} placeholder=\"Select a position\" change={this.valueChange.bind(this)} value={this.value} index={5} popupHeight='200px'/>\r\n                                </div>\r\n                            </div>\r\n                            <table style={{ 'width': '100%' }}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td id=\"customChoose\" ref={this.customChooseRef} style={{ display: 'none' }}>\r\n                                            <form id=\"formId\" className=\"form-horizontal\">\r\n                                                <div className=\"e-row\">\r\n                                                    <div className=\"e-float-input\">\r\n                                                        <input className=\"e-input\" id=\"xPos\" ref={this.xPosRef} name=\"Digits\" defaultValue=\"50\" required/>\r\n                                                        <span className=\"e-float-line\"></span>\r\n                                                        <label className=\"e-float-text\">X Position</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                                <div className=\"e-row\">\r\n                                                    <div className=\"e-float-input\">\r\n                                                        <input className=\"e-input\" id=\"yPos\" ref={this.yPosRef} name=\"Digits\" defaultValue=\"50\" required/>\r\n                                                        <span className=\"e-float-line\"></span>\r\n                                                        <label className=\"e-float-text\">Y Position</label>\r\n                                                    </div>\r\n                                                </div>\r\n                                            </form>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td>\r\n                                            <div style={{ 'padding': '25px 0 0 0' }}>\r\n                                                <RadioButtonComponent ref={(scope) => { this.radio1 = scope; }} id='radio1' label='Target' name='toast' value='Target' change={this.checkboxChange.bind(this)}></RadioButtonComponent>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td>\r\n                                            <div style={{ 'padding': '25px 0 0 0' }}>\r\n                                                <RadioButtonComponent ref={(scope) => { this.radio2 = scope; }} id='radio2' checked={true} label='Global' name='toast' value='Global' change={this.checkboxChange1.bind(this)}></RadioButtonComponent>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                            <div id=\"toast_btn\" style={{ paddingTop: '25px' }}>\r\n                                <ButtonComponent className=\"e-btn e-control\" id='show_Toast' ref={(btn) => { this.toastBtnShow = btn; }} style={{ marginRight: '15px' }} onClick={this.showBtnClick.bind(this)}>Show Toasts</ButtonComponent>\r\n                                <ButtonComponent className=\"e-btn e-control\" id='hideTosat' ref={(btn) => { this.toastBtnHide = btn; }} onClick={this.hideBtnClick.bind(this)}>Hide All</ButtonComponent>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Positions />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}