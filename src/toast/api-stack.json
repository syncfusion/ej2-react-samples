{"index.css":" .toast-api-section {\r\n        padding-top: 0;\r\n    }\r\n    .toast-api-section .input-form {\r\n        margin: 33px 0;\r\n    }\r\n\r\n    .toast-api-section .group-form {\r\n        margin: 25px 0;\r\n    }\r\n\r\n    .toast-api-section .group-form.e-group {\r\n        margin-top: 35px;\r\n    }\r\n    .toast-api-section .row .padding {\r\n        padding: 0 15px;\r\n    }\r\n    .toast-api-section .row.center {\r\n        text-align: center;\r\n    }\r\n    .toast-api-section .row {\r\n        padding: 0 15px;\r\n    }","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { ToastComponent } from '@syncfusion/ej2-react-notifications';\r\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\nimport { CheckBoxComponent, ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\n\r\nexport class Api extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.position = { X: 'Right', Y: 'Bottom' };\r\n        this.prevDuplicates = false;\r\n        this.showData = [\r\n            { Id: 'ease', Text: 'Ease' },\r\n            { Id: 'linear', Text: 'Linear' }\r\n        ];\r\n        this.animationData = [\r\n            { Id: 'SlideBottomIn', Effect: 'Slide Bottom In' },\r\n            { Id: 'FadeIn', Effect: 'Fade In' },\r\n            { Id: 'FadeZoomIn', Effect: 'Fade Zoom In' },\r\n            { Id: 'FadeZoomOut', Effect: 'Fade Zoom Out' },\r\n            { Id: 'FlipLeftDownIn', Effect: 'Flip Left Down In' },\r\n            { Id: 'FlipLeftDownOut', Effect: 'Flip Left Down Out' },\r\n            { Id: 'FlipLeftUpIn', Effect: 'Flip Left Up In' },\r\n            { Id: 'FlipLeftUpOut', Effect: 'Flip Left Up Out' },\r\n            { Id: 'FlipRightDownIn', Effect: 'Flip Right Down In' },\r\n            { Id: 'FlipRightDownOut', Effect: 'Flip Right Down Out' },\r\n            { Id: 'FlipRightUpIn', Effect: 'Flip Right Up In' },\r\n            { Id: 'FlipRightUpOut', Effect: 'Flip Right Up Out' },\r\n            { Id: 'SlideBottomOut', Effect: 'Slide Bottom Out' },\r\n            { Id: 'SlideLeftIn', Effect: 'Slide Left In' },\r\n            { Id: 'SlideLeftOut', Effect: 'Slide Left Out' },\r\n            { Id: 'SlideRightIn', Effect: 'Slide Right In' },\r\n            { Id: 'SlideRightOut', Effect: 'Slide Right Out' },\r\n            { Id: 'SlideTopIn', Effect: 'Slide Top In' },\r\n            { Id: 'SlideTopOut', Effect: 'Slide Top Out' },\r\n            { Id: 'ZoomIn', Effect: 'Zoom In' },\r\n            { Id: 'ZoomOut', Effect: 'Zoom Out' }\r\n        ];\r\n        this.animationData1 = [\r\n            { Id: 'SlideBottomOut', Effect: 'Slide Bottom Out' },\r\n            { Id: 'FadeIn', Effect: 'Fade In' },\r\n            { Id: 'FadeZoomIn', Effect: 'Fade Zoom In' },\r\n            { Id: 'FadeZoomOut', Effect: 'Fade Zoom Out' },\r\n            { Id: 'FlipLeftDownIn', Effect: 'Flip Left Down In' },\r\n            { Id: 'FlipLeftDownOut', Effect: 'Flip Left Down Out' },\r\n            { Id: 'FlipLeftUpIn', Effect: 'Flip Left Up In' },\r\n            { Id: 'FlipLeftUpOut', Effect: 'Flip Left Up Out' },\r\n            { Id: 'FlipRightDownIn', Effect: 'Flip Right Down In' },\r\n            { Id: 'FlipRightDownOut', Effect: 'Flip Right Down Out' },\r\n            { Id: 'FlipRightUpIn', Effect: 'Flip Right Up In' },\r\n            { Id: 'FlipRightUpOut', Effect: 'Flip Right Up Out' },\r\n            { Id: 'SlideBottomIn', Effect: 'Slide Bottom In' },\r\n            { Id: 'SlideLeftIn', Effect: 'Slide Left In' },\r\n            { Id: 'SlideLeftOut', Effect: 'Slide Left Out' },\r\n            { Id: 'SlideRightIn', Effect: 'Slide Right In' },\r\n            { Id: 'SlideRightOut', Effect: 'Slide Right Out' },\r\n            { Id: 'SlideTopIn', Effect: 'Slide Top In' },\r\n            { Id: 'SlideTopOut', Effect: 'Slide Top Out' },\r\n            { Id: 'ZoomIn', Effect: 'Zoom In' },\r\n            { Id: 'ZoomOut', Effect: 'Zoom Out' }\r\n        ];\r\n        this.showFields = { text: 'Text', value: 'Id' };\r\n        this.animationFields = { text: 'Effect', value: 'Id' };\r\n        this.easeValue = 'ease';\r\n        this.animationValue = 'SlideBottomIn';\r\n        this.animationHideValue = 'SlideBottomOut';\r\n        this.toastInputTitleRef = element => {\r\n            this.toastInputTitleEle = element;\r\n        };\r\n        this.toastInputContentRef = element => {\r\n            this.toastInputContentEle = element;\r\n        };\r\n        this.showDurationRef = element => {\r\n            this.showDurationEle = element;\r\n        };\r\n        this.hideDurationRef = element => {\r\n            this.hideDurationEle = element;\r\n        };\r\n        this.timeOutRef = element => {\r\n            this.timeOutEle = element;\r\n        };\r\n    }\r\n    closeOnChange(e) {\r\n        e.checked ? this.toastObj.showCloseButton = true : this.toastObj.showCloseButton = false;\r\n    }\r\n    OnProgressChange(e) {\r\n        e.checked ? this.toastObj.showProgressBar = true : this.toastObj.showProgressBar = false;\r\n    }\r\n    closeNewestOnChange(e) {\r\n        e.checked ? this.toastObj.newestOnTop = true : this.toastObj.newestOnTop = false;\r\n    }\r\n    OnPrevDubChange(e) {\r\n        this.prevDuplicates = e.checked;\r\n    }\r\n    OnactionBtnChange(e) {\r\n        if (e.checked) {\r\n            this.toastObj.buttons = [{ model: { content: '<div class=\"e-toast-btn\"> Click Here </div>' }, click: this.onActionBtnClick }];\r\n        }\r\n        else {\r\n            this.toastObj.buttons = [];\r\n        }\r\n    }\r\n    onActionBtnClick(e) {\r\n        alert('Action button is clicked');\r\n    }\r\n    showToast() {\r\n        let title = this.toastInputTitleEle.value;\r\n        let content = this.toastInputContentEle.value;\r\n        if (title === '' && content === '') {\r\n            content = 'You have created a Toast message';\r\n        }\r\n        let showDuration = parseInt(this.showDurationEle.value, 10);\r\n        let hideDuration = parseInt(this.hideDurationEle.value, 10);\r\n        let timeOut = parseInt(this.timeOutEle.value, 10);\r\n        this.toastObj.show({\r\n            title: title, content: content, timeOut: timeOut,\r\n            animation: {\r\n                show: { duration: showDuration },\r\n                hide: { duration: hideDuration }\r\n            }\r\n        });\r\n    }\r\n    onShowEase() {\r\n        this.toastObj.animation.show.easing = this.dropDownListShowEase.value.toString();\r\n    }\r\n    showChange() {\r\n        this.toastObj.animation.show.effect = this.dropDownListShow.value;\r\n    }\r\n    hideChange() {\r\n        this.toastObj.animation.hide.effect = this.dropDownListHide.value;\r\n    }\r\n    onHideEase() {\r\n        this.toastObj.animation.hide.easing = this.dropDownListHideEase.value.toString();\r\n    }\r\n    showBtnClick() {\r\n        this.showToast();\r\n    }\r\n    hideBtnClick() {\r\n        this.toastObj.hide('All');\r\n    }\r\n    onbeforeOpen(e) {\r\n        this.toastBtnHide.element.style.display = 'inline-block';\r\n        if (this.prevDuplicates) {\r\n            e.cancel = this.preventDuplicate(e);\r\n        }\r\n    }\r\n    onclose(e) {\r\n        if (e.toastContainer.childElementCount === 0) {\r\n            this.toastBtnHide.element.style.display = 'none';\r\n        }\r\n    }\r\n    preventDuplicate(e) {\r\n        let toastEle = e.element;\r\n        let toasts = e.toastObj.element.children;\r\n        for (let i = 0; i < toasts.length; i++) {\r\n            let toastTitle = toasts[i].querySelector('.e-toast-title');\r\n            let toastMessage = toasts[i].querySelector('.e-toast-message');\r\n            if (toastTitle && toastTitle.isEqualNode(toastEle.querySelector('.e-toast-title'))) {\r\n                return true;\r\n            }\r\n            if (!toastTitle && toastMessage && toastMessage.isEqualNode(toastEle.querySelector('.e-toast-message'))) {\r\n                return true;\r\n            }\r\n        }\r\n        return false;\r\n    }\r\n    rendereComplete() {\r\n        document.addEventListener('click', function (e) {\r\n            if (!isNullOrUndefined(this.toastObj) && e.target !== this.toastBtnShow.element) {\r\n                this.toastObj.hide('All');\r\n            }\r\n        }.bind(this));\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className=\"col-lg-12 control-section toast-api-section\">\r\n                    <div className=\"e-sample-resize-container\">\r\n                        <ToastComponent ref={(toast) => { this.toastObj = toast; }} id='toastApi' position={this.position} close={this.onclose.bind(this)} beforeOpen={this.onbeforeOpen.bind(this)} newestOnTop={true}></ToastComponent>\r\n                        <div className=\"row\">\r\n                            <div className=\"col-lg-6 padding\">\r\n                                <div className=\"input-form\">\r\n                                    <div className=\"e-float-input\">\r\n                                        <input id=\"toast_input_title\" ref={this.toastInputTitleRef} className='e-input' required/>\r\n                                        <span className=\"e-float-line\"></span>\r\n                                        <label className=\"e-float-text\">Enter the title</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"input-form\">\r\n                                    <div className=\"e-float-input\">\r\n                                        <textarea className='e-input' ref={this.toastInputContentRef} id='toast_input_content' rows={3} required></textarea>\r\n                                        <label className=\"e-float-text\">Enter the content</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"group-form e-group\">\r\n                                    <CheckBoxComponent id='closeButton' label='Show Close Button' change={this.closeOnChange.bind(this)}></CheckBoxComponent>\r\n                                </div>\r\n                                <div className=\"group-form e-group\">\r\n                                    <CheckBoxComponent id='progressBar' label='Show Progress Bar' change={this.OnProgressChange.bind(this)}></CheckBoxComponent>\r\n                                </div>\r\n                                <div className=\"group-form e-group\">\r\n                                    <CheckBoxComponent id='newestOnTop' checked={true} label='Newest On Top' change={this.closeNewestOnChange.bind(this)}></CheckBoxComponent>\r\n                                </div>\r\n                                <div className=\"group-form e-group\">\r\n                                    <CheckBoxComponent id='prevDuplicates' label='Prevent Duplicates' change={this.OnPrevDubChange.bind(this)}></CheckBoxComponent>\r\n                                </div>\r\n                                <div className=\"group-form e-group\">\r\n                                    <CheckBoxComponent id='actionButtons' label='Action Buttons' change={this.OnactionBtnChange.bind(this)}></CheckBoxComponent>\r\n                                </div>\r\n                                <div className=\"input-form\">\r\n                                    <div className=\"e-float-input e-input-group\">\r\n                                        <input className=\"e-input\" id=\"timeOut\" ref={this.timeOutRef} name=\"Digits\" defaultValue=\"5000\" required/>\r\n                                        <span className=\"e-float-line\"></span>\r\n                                        <label className=\"e-float-text\">TimeOut</label>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"col-lg-6 padding\">\r\n                                <div className=\"input-form\">\r\n                                    <h4> Show Animation</h4>\r\n                                    <div className=\"e-float-input\">\r\n                                        <input className=\"e-input\" id=\"showDuration\" ref={this.showDurationRef} defaultValue=\"400\" required/>\r\n                                        <span className=\"e-float-line\"></span>\r\n                                        <label className=\"e-float-text\">Duration</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"input-form\">\r\n                                    <DropDownListComponent ref={(dropdownlist) => { this.dropDownListShowEase = dropdownlist; }} id=\"ShowEasing\" dataSource={this.showData} fields={this.showFields} placeholder=\"Select an Easing\" change={this.onShowEase.bind(this)} value={this.easeValue}/>\r\n                                </div>\r\n                                <div className=\"input-form\">\r\n                                    <DropDownListComponent ref={(dropdownlist) => { this.dropDownListShow = dropdownlist; }} id=\"ShowAnimation\" dataSource={this.animationData} fields={this.animationFields} placeholder=\"Select an Animation\" change={this.showChange.bind(this)} value={this.animationValue}/>\r\n                                </div>\r\n                                <div className=\"input-form e-group\">\r\n                                    <h4> Hide Animation</h4>\r\n                                    <div className=\"e-float-input\">\r\n                                        <input className=\"e-input\" id=\"hideDuration\" ref={this.hideDurationRef} defaultValue=\"400\" required/>\r\n                                        <span className=\"e-float-line\"></span>\r\n                                        <label className=\"e-float-text\">Duration</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"input-form\">\r\n                                    <DropDownListComponent ref={(dropdownlist) => { this.dropDownListHideEase = dropdownlist; }} id=\"HideEasing\" dataSource={this.showData} fields={this.showFields} placeholder=\"Select an Easing\" change={this.onHideEase.bind(this)} value={this.easeValue}/>\r\n                                </div>\r\n                                <div className=\"input-form\">\r\n                                    <DropDownListComponent ref={(dropdownlist) => { this.dropDownListHide = dropdownlist; }} id=\"HideAnimation\" dataSource={this.animationData1} fields={this.animationFields} placeholder=\"Select an Animation\" change={this.hideChange.bind(this)} value={this.animationHideValue}/>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"row center\">\r\n                            <ButtonComponent id='toastBtnShow' ref={(btn) => { this.toastBtnShow = btn; }} className='e-btn e-primary' onClick={this.showBtnClick.bind(this)} style={{ marginRight: '15px' }}>Show Toasts</ButtonComponent>\r\n                            <ButtonComponent id='toastBtnHide' ref={(btn) => { this.toastBtnHide = btn; }} className='e-btn e-primary' onClick={this.hideBtnClick.bind(this)} style={{ display: 'none' }}> Hide All</ButtonComponent>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <br />\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Api />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}