{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { FileManagerComponent, Inject, NavigationPane, Toolbar } from '@syncfusion/ej2-react-filemanager';\r\nconst defaultcss = `\r\n#all-property-table .property-panel-section .property-panel-content table#property tr {\r\n    height: 50px;\r\n}`;\r\n/**\r\n * File Manager API sample\r\n */\r\nexport class Default extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.hostUrl = \"https://ej2-aspcore-service.azurewebsites.net/\";\r\n    }\r\n    toolCheck(args) {\r\n        this.fmObj.toolbarSettings.visible = args.checked;\r\n    }\r\n    render() {\r\n        return (<div>\r\n                <style>{defaultcss}</style>\r\n                <div className=\"col-lg-8 control-section\">\r\n                    <FileManagerComponent id=\"api_filemanager\" ref={(scope) => { this.fmObj = scope; }} ajaxSettings={{\r\n            url: this.hostUrl + \"api/FileManager/FileOperations\",\r\n            getImageUrl: this.hostUrl + \"api/FileManager/GetImage\",\r\n            uploadUrl: this.hostUrl + 'api/FileManager/Upload',\r\n            downloadUrl: this.hostUrl + 'api/FileManager/Download'\r\n        }} view={\"LargeIcons\"} navigationPaneSettings={{ visible: false }}>\r\n                <Inject services={[NavigationPane, Toolbar]}/>\r\n                    </FileManagerComponent>\r\n                </div>\r\n                <div id=\"all-property-table\" className='col-lg-4 property-section'>\r\n                <PropertyPane title='Properties'>\r\n                <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: \"100%\" }}>\r\n                    <tbody>\r\n                        <tr>\r\n                            <td style={{ width: '50%' }}>\r\n                                <div className=\"userselect\">Toolbar</div>\r\n                            </td>\r\n                            <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                <div>\r\n                                    <CheckBoxComponent id=\"tool_check\" checked={true} change={this.toolCheck.bind(this)}></CheckBoxComponent>\r\n                                </div>\r\n                            </td>\r\n                        </tr>\r\n                    </tbody>\r\n                </table>\r\n                </PropertyPane>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Default />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}