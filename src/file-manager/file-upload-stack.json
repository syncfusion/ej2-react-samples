{"index.css":".fileupload {\r\n    max-width: 500px;\r\n    margin: auto;\r\n}\r\n#openBtn {\r\n    position: absolute;\r\n    top: 34px;\r\n    left: 43%;\r\n}\r\n#target {\r\n    height: 550px;\r\n}\r\n#dialog {\r\n    top: 20px !important;\r\n    max-height: 500px !important;\r\n}\r\n\r\n#uploadFileManager .e-file-drop, #uploadFileManager .e-css.e-btn {\r\n    display: none;\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { UploaderComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\r\nimport { SampleBase } from './sample-base';\r\nimport { ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { FileManagerComponent, Inject, NavigationPane, DetailsView, Toolbar } from '@syncfusion/ej2-react-filemanager';\r\n\r\n/**\r\n * File Manager real time use case sample\r\n */\r\nexport class FileUpload extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.hostUrl = \"https://ej2-aspcore-service.azurewebsites.net/\";\r\n        this.contextmenuItems = ['Open', '|', 'Cut', 'Copy', 'Delete', 'Rename', '|', 'Details'];\r\n        this.state = {\r\n            hideDialog: false\r\n        };\r\n        this.animationSettings = { effect: 'None' };\r\n    }\r\n    // 'Uploader' will be shown, if Dialog is closed\r\n    dialogClose() {\r\n        document.getElementById('uploadFileManager').style.display = 'block';\r\n    }\r\n    // 'Uploader' will be hidden, if Dialog is opened\r\n    dialogOpen() {\r\n        document.getElementById('uploadFileManager').style.display = 'none';\r\n    }\r\n    // File Manager's fileOpen event function\r\n    onFileOpen(args) {\r\n        let file = args.fileDetails;\r\n        if (file.isFile) {\r\n            args.cancel = true;\r\n            if (file.size <= 0) {\r\n                file.size = 10000;\r\n            }\r\n            this.fileUploadObj.files = [{ name: file.name, size: file.size, type: file.type }];\r\n            this.setState({ hideDialog: false });\r\n        }\r\n    }\r\n    btnClick() {\r\n        this.setState({ hideDialog: true });\r\n        this.filemanagerObj.refresh();\r\n    }\r\n    render() {\r\n        return (<div>\r\n            <div className=\"control-section\">\r\n                <div id='uploadFileManager' className=\"fileupload\">\r\n                    <UploaderComponent id='fileUpload' type='file' ref={(scope) => { this.fileUploadObj = scope; }}></UploaderComponent>\r\n                    <ButtonComponent id=\"openBtn\" onClick={this.btnClick.bind(this)}>File Browser</ButtonComponent>\r\n                </div>\r\n                <div id='target' className=\"control-section\">\r\n                    <DialogComponent width='850px' id='dialog' target={'#target'} ref={(scope) => { this.dialogObj = scope; }} header=\"Select a file\" showCloseIcon={true} visible={this.state.hideDialog} open={this.dialogOpen.bind(this)} close={this.dialogClose.bind(this)} animationSettings={this.animationSettings}>\r\n                        <FileManagerComponent id=\"filemanager\" ref={(scope) => { this.filemanagerObj = scope; }} ajaxSettings={{\r\n            url: this.hostUrl + \"api/FileManager/FileOperations\",\r\n            getImageUrl: this.hostUrl + \"api/FileManager/GetImage\",\r\n            uploadUrl: this.hostUrl + 'api/FileManager/Upload',\r\n            downloadUrl: this.hostUrl + 'api/FileManager/Download'\r\n        }} allowMultiSelection={false} toolbarSettings={{ items: ['NewFolder', 'Upload', 'Delete', 'Cut', 'Copy', 'Rename', 'SortBy', 'Refresh', 'Selection', 'View', 'Details'] }} contextMenuSettings={{ file: this.contextmenuItems, folder: this.contextmenuItems }} fileOpen={this.onFileOpen.bind(this)}>\r\n                        <Inject services={[NavigationPane, DetailsView, Toolbar]}/>\r\n                        </FileManagerComponent>\r\n                    </DialogComponent>\r\n                </div>\r\n            </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<FileUpload />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}