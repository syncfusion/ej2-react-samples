{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Sample for styles in linear gauge\r\n */\r\nimport * as React from \"react\";\r\nimport { LinearGaugeComponent, AxesDirective, AxisDirective, PointersDirective, PointerDirective, RangesDirective, RangeDirective } from '@syncfusion/ej2-react-lineargauge';\r\nimport { SampleBase } from './sample-base';\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class Style extends SampleBase {\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section'>\r\n                    <div className=\"row\">\r\n                        <LinearGaugeComponent load={this.load.bind(this)} style={{ height: \"150px\" }} id='gauge1' orientation='Horizontal'>\r\n                            <AxesDirective>\r\n                                <AxisDirective line={{ color: '#9E9E9E' }} majorTicks={{ interval: 10, color: '#9E9E9E' }} minorTicks={{ color: '#9E9E9E' }}>\r\n                                    <PointersDirective>\r\n                                        <PointerDirective value={80} offset={10} height={13} width={13}>\r\n                                        </PointerDirective>\r\n                                    </PointersDirective>\r\n                                </AxisDirective>\r\n                            </AxesDirective>\r\n                        </LinearGaugeComponent>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <LinearGaugeComponent load={this.load.bind(this)} style={{ height: \"150px\" }} id='gauge2' orientation='Horizontal' container={{ width: 30, backgroundColor: '#e0e0e0', border: { width: 0 }, offset: -20 }}>\r\n                            <AxesDirective>\r\n                                <AxisDirective majorTicks={{ interval: 10 }} line={{ offset: 30 }} labelStyle={{ offset: 50 }}>\r\n                                    <PointersDirective>\r\n                                        <PointerDirective value={10} placement='Near' offset={-50} height={15} width={15} markerType='Triangle'>\r\n                                        </PointerDirective>\r\n                                    </PointersDirective>\r\n                                    <RangesDirective>\r\n                                        <RangeDirective start={0} end={10} startWidth={30} endWidth={30} color='#30b32d'>\r\n                                        </RangeDirective>\r\n                                    </RangesDirective>\r\n                                </AxisDirective>\r\n                            </AxesDirective>\r\n                        </LinearGaugeComponent>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <LinearGaugeComponent load={this.load.bind(this)} style={{ height: \"150px\" }} id='gauge3' orientation='Horizontal'>\r\n                            <AxesDirective>\r\n                                <AxisDirective majorTicks={{ interval: 10, color: '#9E9E9E' }} minorTicks={{ color: '#9E9E9E' }} line={{ offset: -20, color: '#9E9E9E' }}>\r\n                                    <PointersDirective>\r\n                                        <PointerDirective value={70} offset={20} height={13} width={13}>\r\n                                        </PointerDirective>\r\n                                        <PointerDirective value={70} type='Bar' height={10} color='red'>\r\n                                        </PointerDirective>\r\n                                    </PointersDirective>\r\n                                </AxisDirective>\r\n                            </AxesDirective>\r\n                        </LinearGaugeComponent>\r\n                    </div>\r\n                    <div className=\"row\">\r\n                        <LinearGaugeComponent load={this.load.bind(this)} style={{ height: \"150px\" }} id='gauge4' orientation='Horizontal' container={{ width: 30, backgroundColor: '#e0e0e0' }}>\r\n                            <AxesDirective>\r\n                                <AxisDirective majorTicks={{ height: 0 }} minorTicks={{ height: 0 }} line={{ width: 0 }} labelStyle={{ offset: 60 }}>\r\n                                    <PointersDirective>\r\n                                        <PointerDirective value={60} placement='Near' offset={-55} height={15} width={15} markerType='Triangle'>\r\n                                        </PointerDirective>\r\n                                        <PointerDirective type='Bar' value={60} color='#ff9200' height={30}>\r\n                                        </PointerDirective>\r\n                                    </PointersDirective>\r\n                                </AxisDirective>\r\n                            </AxesDirective>\r\n                        </LinearGaugeComponent>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Style />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}