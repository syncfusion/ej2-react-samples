{"index.css":"/* custom code start */\r\n/* Switch Styles */\r\n.switch-content {\r\n  margin: 45px auto;\r\n  width: 62%;\r\n}\r\n\r\n.switch-control .heading {\r\n  text-indent: 15px;\r\n  padding: 15px 0;\r\n}\r\n\r\n.switch-control div {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.switch-control  {\r\n  margin: 0 auto;\r\n  width: 275px;\r\n}\r\n\r\n.switch-control label {\r\n  -webkit-tap-highlight-color: transparent;\r\n  cursor: pointer;\r\n  user-select: none;\r\n  font-weight: 400;\r\n  font-size: 13px;\r\n}\r\n/* custom code end */\r\n\r\n.switch-control .e-disabled {\r\n  pointer-events: none;\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SwitchComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { rippleMouseHandler } from '@syncfusion/ej2-buttons';\r\nimport { SampleBase } from './sample-base';\r\n\r\nexport class Switch extends SampleBase {\r\n    rendereComplete() {\r\n        let elemArray = document.querySelectorAll(\".switch-control label\");\r\n        for (let i = 0, len = elemArray.length; i < len; i++) {\r\n            elemArray[i].addEventListener(\"mouseup\", rippleHandler);\r\n            elemArray[i].addEventListener(\"mousedown\", rippleHandler);\r\n        }\r\n        function rippleHandler(e) {\r\n            let rippleSpan = this.nextElementSibling.querySelector(\".e-ripple-container\");\r\n            if (rippleSpan) {\r\n                rippleMouseHandler(e, rippleSpan);\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className=\"control-pane\">\r\n                <div className=\"col-lg-12 control-section\">\r\n                    <div className=\"switch-content\">\r\n                        <div className=\"container switch-control\">\r\n                            <div>\r\n                                <h4 className=\"heading\">Hotspot & tethering</h4>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"checked\" style={{ padding: \"10px 72px 10px 0\" }}> USB Tethering </label>\r\n                                <SwitchComponent id=\"checked\" checked={true}></SwitchComponent>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"unchecked\" style={{ padding: \"10px 24px 10px 0\" }}> Portable Wi-Fi hotspot </label>\r\n                                <SwitchComponent id=\"unchecked\"></SwitchComponent>\r\n                            </div>\r\n                            <div>\r\n                                <label htmlFor=\"disabled\" className=\"e-disabled\" style={{ padding: \"10px 40px 10px 0\" }}>\r\n                                    Bluetooth Tethering </label>\r\n                                <SwitchComponent id=\"disabled\" disabled={true}></SwitchComponent>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Switch />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}