{"index.css":".control-section.input-content-wrapper .e-input-picture:before {\r\n    content: '\\e335';\r\n    font-family: e-icons;\r\n}\r\n\r\n.bootstrap4 .control-section.input-content-wrapper .e-input-picture:before {\r\n    content: '\\e776';\r\n}\r\n\r\n.control-section.input-content-wrapper .e-input-calendar:before {\r\n    content: \"\\e901\";\r\n    font-family: e-icons;\r\n    font-size: 13px;\r\n}\r\n\r\n.fabric .control-section.input-content-wrapper .e-input-calendar:before {\r\n    content:'\\e93a';\r\n}\r\n.bootstrap .control-section.input-content-wrapper .e-input-calendar:before {\r\n    content:'\\e960';\r\n}\r\n.bootstrap4 .control-section.input-content-wrapper .e-input-calendar:before {\r\n    content:'\\e7be';\r\n}\r\n.highcontrast .control-section.input-content-wrapper .e-input-calendar:before {\r\n    content:'\\e93a';\r\n}\r\n\r\n\r\n.control-section.input-content-wrapper .e-input-group.e-small { /* csslint allow: adjoining-classes */\r\n    padding-top: 0px;\r\n}\r\n\r\n.control-section.input-content-wrapper .control-label {\r\n    font-size: 12px;\r\n    opacity: 0.54;\r\n    padding:24px 0 0;\r\n}\r\n\r\n.control-section.input-content-wrapper div.row {\r\n    padding: 0 30px;\r\n}\r\n\r\n@media only screen and (max-width: 480px) {\r\n    .control-section.input-content-wrapper .col-xs-6,\r\n    .control-section.input-content-wrapper .col-xs-4,\r\n    .control-section.input-content-wrapper .col-xs-12 {\r\n        box-sizing: border-box;\r\n        padding: 10px 5px;\r\n        width: 100%;\r\n    }\r\n\t.control-section.input-content-wrapper div.row {\r\n        padding: 0 15px;\r\n    }\r\n}\r\n\r\n#description td { /* csslint allow: adjoining-classes */\r\n    vertical-align: top;\r\n}\r\n\r\n.control-section.input-content-wrapper .custom-padding-10 {\r\n    padding:10px 0 0;\r\n}\r\n\r\n.control-section.input-content-wrapper .custom-padding-5 {\r\n    padding:5px 0;\r\n}\r\n\r\n.control-section.input-content-wrapper .custom-width {\r\n    width: 100%;\r\n}\r\n\r\n.control-section.input-content-wrapper .custom-padding-bottom-10 {\r\n    padding-bottom: 10px;\r\n}\r\n\r\n.control-section .row.custom-margin {\r\n    margin-top: 20px;\r\n}\r\n\r\n.e-bigger .control-section .row.custom-margin {\r\n    margin-top: 15px;\r\n}\r\n\r\n @media only screen and (max-width: 480px) {\r\n        .control-section.input-content-wrapper .content-wrapper {\r\n            width: 92%;\r\n        }\r\n        .control-section.input-content-wrapper .col-xs-6,\r\n        .control-section.input-content-wrapper .col-xs-4,\r\n        .control-section.input-content-wrapper .col-xs-12 {\r\n            padding: 10px 5px;\r\n            width: 100%;\r\n        }\r\n        \r\n    }\r\n.e-outline.e-float-input,\r\n.e-outline.e-float-input.e-control-wrapper {\r\n    margin-top: 0;\r\n}\r\n.fabric .row.material2,\r\n.bootstrap .row.material2,\r\n.bootstrap4 .row.material2,\r\n.highcontrast .row.material2 {\r\n    display: none;\r\n}\r\n.control-section.input-content-wrapper .col-xs-12.col-sm-12.col-lg-12.col-md-12 {\r\n    padding: 0px 15px;\r\n}\r\n.multiline-wrapper {\r\n    margin: 40px 200px;\r\n}\r\n.multiline-property .left-side{\r\n    font-size: 14px;\r\n    padding: 8px;\r\n    width: 50%;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { PropertyPane } from './property-pane';\r\nimport { TextBoxComponent, NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { SampleBase } from './sample-base';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { DropDownListComponent } from '@syncfusion/ej2-react-dropdowns';\r\n\r\nexport class Multiline extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.value = 'Auto';\r\n        this.floatData = [\r\n            { Id: 'Auto', Label: 'Auto' },\r\n            { Id: 'Never', Label: 'Never' },\r\n            { Id: 'Always', Label: 'Always' }\r\n        ];\r\n        this.fields = { text: 'Label', value: 'Id' };\r\n    }\r\n    enabledHandler(args) {\r\n        this.textareaObj.enabled = !args.checked;\r\n    }\r\n    readonlyHandler(args) {\r\n        this.textareaObj.readonly = args.checked;\r\n    }\r\n    floatHandler(args) {\r\n        switch (args.value) {\r\n            case 'Auto':\r\n                this.textareaObj.floatLabelType = 'Auto';\r\n                break;\r\n            case 'Always':\r\n                this.textareaObj.floatLabelType = 'Always';\r\n                break;\r\n            case 'Never':\r\n                this.textareaObj.floatLabelType = 'Never';\r\n                break;\r\n        }\r\n    }\r\n    rowHandler(args) {\r\n        this.textareaObj.addAttributes({ rows: args.value });\r\n    }\r\n    render() {\r\n        return (<div className='control-pane multiline'>\r\n      <div className='control-section row multilinepreview'>\r\n         <div className='col-lg-8'>\r\n          <div className='multiline-wrapper'>\r\n            \r\n                <TextBoxComponent id='default' multiline={true} floatLabelType=\"Auto\" placeholder=\"Enter your address\" ref={(scope) => { this.textareaObj = scope; }}></TextBoxComponent>\r\n        </div>\r\n        </div>\r\n        <div className='col-lg-4 property-section' id=\"multiline\">\r\n            <PropertyPane title='Properties'>\r\n              <table id=\"property\" title=\"Properties\" className='multiline-property'>\r\n              <tbody>\r\n                <tr>\r\n                  <td className='left-side'>FLoat label type</td>\r\n                  <td>\r\n                  <DropDownListComponent id=\"float\" value={this.value} dataSource={this.floatData} ref={(dropdownlist) => { this.floatLabelObj = dropdownlist; }} fields={this.fields} change={this.floatHandler.bind(this)} placeholder=\"Select float type\"/>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='left-side'>Disabled</td>\r\n                  <td>\r\n                  <CheckBoxComponent checked={false} ref={(scope) => { this.enabledObj = scope; }} change={this.enabledHandler.bind(this)}></CheckBoxComponent>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='left-side'>Read only</td>\r\n                  <td>\r\n                  <CheckBoxComponent checked={false} ref={(scope) => { this.readonlyObj = scope; }} change={this.readonlyHandler.bind(this)}></CheckBoxComponent>\r\n                  </td>\r\n                </tr>\r\n                <tr>\r\n                  <td className='left-side'>Rows</td>\r\n                  <td>\r\n                  <NumericTextBoxComponent format='##' value={2} min={1} max={20} step={1} change={this.rowHandler.bind(this)}></NumericTextBoxComponent>\r\n                  </td>\r\n                </tr>\r\n                </tbody>\r\n              </table>\r\n            </PropertyPane>\r\n          </div>\r\n        </div>\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<Multiline />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}