{"index.css":"    #list {\r\n        min-height: 288px;\r\n    }\r\n\t.e-bigger #list, .e-bigger #tree1, .e-bigger #tree2 {\r\n\t\theight: 354px;\r\n        overflow: auto;\r\n\t}\r\n    .tree1-data, .tree2-data, .tree3-data {\r\n        padding: 15px;\r\n        margin-bottom: 25px;\r\n    }\r\n    #tree1, #tree2, #list {\r\n        height: 300px;\r\n        overflow: auto;\r\n    }\r\n    .content {\r\n        margin: 0 auto;\r\n        border: 1px solid #dddddd;\r\n        border-radius: 3px;\r\n        min-height: 288px;\r\n    }\r\n    .custom-delete::before {\r\n        content: \"\\e700\";\r\n        cursor: pointer;\r\n        color: rgba(0, 0, 0, 0.54);\r\n        font-size: 15px;\r\n    }\r\n    .custom-delete {\r\n        float: right;\r\n        font-family: 'cross-circle';\r\n    }\r\n    .fabric.e-bigger #list.e-listview .e-list-item,\r\n    .highcontrast.e-bigger #list.e-listview .e-list-item {\r\n        line-height: 43px;\r\n    }\r\n    .material.e-bigger #list.e-listview .e-list-item {\r\n        line-height: 48px;\r\n    }\r\n    .bootstrap.e-bigger #list.e-listview .e-list-item {\r\n        line-height: 47px;\r\n    }\r\n    .highcontrast .custom-delete::before {\r\n        color: #fff;\r\n    }\r\n    .highcontrast .e-active.e-list-item .custom-delete::before {\r\n\t    color: #000;\r\n    }\r\n    .bootstrap4.e-bigger #list, .bootstrap4.e-bigger #tree1, .bootstrap4.e-bigger #tree2 {\r\n\t\theight: 384px;\r\n        overflow: auto;\r\n    }\r\n    .bootstrap4 #list, .bootstrap4 #tree1, .bootstrap4 #tree2 {\r\n\t\theight: 320px;\r\n        overflow: auto;\r\n    }\r\n    .bootstrap4.e-bigger .e-drag-item.e-treeview .e-list-text {\r\n        margin-left: 12px;\r\n    }\r\n    #overlay {\r\n        position: absolute; \r\n        display: block; \r\n        width: 100%; \r\n        height: 100%; \r\n        z-index: 2; \r\n        cursor: pointer;\r\n        background-image: url('////npmci.syncfusion.com/development/react/demos/src/images/useCase/drag-and-drop.png'); \r\n        background-repeat: no-repeat; \r\n        background-position: center; \r\n        background-size: 70%;\r\n    }\r\n    #imageContent {\r\n        position: absolute;\r\n        top: 50%;\r\n        left: 50%;\r\n        transform: translate(-50%,-50%);\r\n        -ms-transform: translate(-50%,-50%);\r\n    }\r\n    .custom-tree {\r\n        overflow: auto;\r\n    }\r\n    .custom-tree .control-wrapper {\r\n        position: relative; \r\n        min-width: 700px; \r\n        min-height: 400px; \r\n        overflow: auto;\r\n    }\r\n    @media (max-width: 1200px) {\r\n        .tree1-data, .tree2-data, .tree3-data {\r\n            width: 33.33333333%;\r\n            float: left;\r\n        }\r\n    }\r\n    @font-face {\r\n        font-family: 'cross-circle';\r\n        src:url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj0gSRsAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmKuKzFgAAAcgAAABkaGVhZBRzllcAAADQAAAANmhoZWEHmQNrAAAArAAAACRobXR4B+gAAAAAAYAAAAAIbG9jYQAyAAAAAAHAAAAABm1heHABDgAkAAABCAAAACBuYW1lyFBwKAAAAiwAAAJhcG9zdJx8QW4AAASQAAAAOwABAAADUv9qAFoEAAAA//4D6gABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAA8246G18PPPUACwPoAAAAANi1qMQAAAAA2LWoxAAAAAAD6gPqAAAACAACAAAAAAAAAAEAAAACABgAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQP0AZAABQAAAnoCvAAAAIwCegK8AAAB4AAxAQIAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAANS/2oAWgPqAJYAAAABAAAAAAAABAAAAAPoAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAMgAAAAIAAAAAA+oD6gALABcAAAEHFwcnByc3JzcXNwUWABc2ADcmACcGAALkg4NqhINqg4Nqg4T9iAYBG9PUARsFBf7l1NP+5QJ6hIZqg4Nqg4RqgIPu0/7lBgYBG9PUARsFBf7lAAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAwAAQABAAAAAAACAAcADQABAAAAAAADAAwAFAABAAAAAAAEAAwAIAABAAAAAAAFAAsALAABAAAAAAAGAAwANwABAAAAAAAKACwAQwABAAAAAAALABIAbwADAAEECQAAAAIAgQADAAEECQABABgAgwADAAEECQACAA4AmwADAAEECQADABgAqQADAAEECQAEABgAwQADAAEECQAFABYA2QADAAEECQAGABgA7wADAAEECQAKAFgBBwADAAEECQALACQBXyBjcm9zcy1jaXJjbGVSZWd1bGFyY3Jvc3MtY2lyY2xlY3Jvc3MtY2lyY2xlVmVyc2lvbiAxLjBjcm9zcy1jaXJjbGVGb250IGdlbmVyYXRlZCB1c2luZyBTeW5jZnVzaW9uIE1ldHJvIFN0dWRpb3d3dy5zeW5jZnVzaW9uLmNvbQAgAGMAcgBvAHMAcwAtAGMAaQByAGMAbABlAFIAZQBnAHUAbABhAHIAYwByAG8AcwBzAC0AYwBpAHIAYwBsAGUAYwByAG8AcwBzAC0AYwBpAHIAYwBsAGUAVgBlAHIAcwBpAG8AbgAgADEALgAwAGMAcgBvAHMAcwAtAGMAaQByAGMAbABlAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBAgEDABFjaXJjbGUtY2xvc2UtLS0wMgAAAA==) format('truetype');\r\n        font-weight: normal;\r\n        font-style: normal;\r\n    }\r\n","dataSource/drag-data.json":"{\r\n     \"dragData1\":  [\r\n        {\r\n            \"id\": \"t1\", \"name\": \"ASP.NET MVC Team\", \"expanded\": true,\r\n            \"child\": [\r\n                { \"id\": \"t2\", \"name\": \"Smith\" },\r\n                { \"id\": \"t3\", \"name\": \"Johnson\" },\r\n                { \"id\": \"t4\", \"name\": \"Anderson\" }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"t5\", \"name\": \"Windows Team\", \"expanded\": true,\r\n            \"child\": [\r\n                { \"id\": \"t6\", \"name\": \"Clark\" },\r\n                { \"id\": \"t7\", \"name\": \"Wright\" },\r\n                { \"id\": \"t8\", \"name\": \"Lopez\" }\r\n            ]\r\n        }\r\n    ],\r\n \r\n   \"dragData2\":  [\r\n        {\r\n            \"id\": \"t9\", \"name\": \"Web Team\", \"expanded\": true,\r\n            \"child\": [\r\n                { \"id\": \"t10\", \"name\": \"Joshua\" },\r\n                { \"id\": \"t11\", \"name\": \"Matthew\" },\r\n                { \"id\": \"t12\", \"name\": \"David\" }\r\n            ]\r\n        },\r\n        {\r\n            \"id\": \"t13\", \"name\": \"Build Team\", \"expanded\": true,\r\n            \"child\": [\r\n                { \"id\": \"t14\", \"name\": \"Ryan\" },\r\n                { \"id\": \"t15\", \"name\": \"Justin\" },\r\n                { \"id\": \"t16\", \"name\": \"Robert\" }\r\n            ]\r\n        }\r\n    ]\r\n}","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { TreeViewComponent } from '@syncfusion/ej2-react-navigations';\r\nimport { ListViewComponent } from '@syncfusion/ej2-react-lists';\r\nimport { closest } from '@syncfusion/ej2-base';\r\n\r\nimport * as dataSource from './dataSource/drag-data.json';\r\nexport class Dragdrop extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.data = dataSource;\r\n        this.id = 1;\r\n        // Render the first TreeView by mapping its fields property with data source properties\r\n        this.field = { dataSource: this.data.dragData1, id: 'id', text: 'name', child: 'child' };\r\n        this.allowDragAndDrop = true;\r\n        // Render the second TreeView by mapping its fields property with data source properties     \r\n        this.fields = { dataSource: this.data.dragData2, id: 'id', text: 'name', child: 'child', selected: 'isSelected' };\r\n        this.allowDragAndDrops = true;\r\n    }\r\n    onDragStop(args) {\r\n        let targetEle = closest(args.target, '.e-droppable');\r\n        targetEle = targetEle ? targetEle : args.target;\r\n        // Check the target as ListView or not\r\n        if (targetEle && targetEle.classList.contains('custom-list')) {\r\n            args.cancel = true;\r\n            let newData = [];\r\n            if (args.draggedNode.classList.contains('e-active')) {\r\n                var dragNode = closest(args.draggedNode, '.e-treeview');\r\n                var selNodes = dragNode.ej2_instances[0].selectedNodes;\r\n                for (let i = 0, len = selNodes.length; i < len; i++) {\r\n                    let nodeEle = document.querySelector('[data-uid=\"' + selNodes[i] + '\"]').querySelector('.e-list-text');\r\n                    let nodeText = nodeEle.textContent;\r\n                    let newNode = { id: 'l' + this.id, text: nodeText, class: 'custom-delete', iconId: 'i' + this.id };\r\n                    this.id++;\r\n                    newData.push(newNode);\r\n                }\r\n            }\r\n            else {\r\n                let text = 'text';\r\n                let nodeText = args.draggedNodeData[text];\r\n                let newNode = { id: 'l' + this.id, text: nodeText, class: 'custom-delete', iconId: 'i' + this.id };\r\n                this.id++;\r\n                newData.push(newNode);\r\n            }\r\n            // Add collection of node to ListView\r\n            this.listObj.addItem(newData, undefined);\r\n        }\r\n    }\r\n    // Add the custom action for delete icon in ListView\r\n    onCreate() {\r\n        document.getElementById('list').addEventListener('mousedown', (event) => {\r\n            if (event.target.classList.contains('custom-delete')) {\r\n                let node = closest(event.target, 'li');\r\n                this.listObj.removeItem(node);\r\n            }\r\n        });\r\n        document.getElementById('overlay').addEventListener('mousedown', (event) => {\r\n            document.getElementById('overlay').style.display = 'none';\r\n        });\r\n    }\r\n    actionBegin() {\r\n        var listObj = this;\r\n    }\r\n    render() {\r\n        return (<div className=\"control-pane\">\r\n            \r\n            <div className=\"col-lg-12 control-section custom-tree\">\r\n              <div className=\"control-wrapper\">\r\n                <div className=\"col-lg-4 tree1-data\">\r\n                    <h4>TreeView-1</h4>\r\n                    <div className=\"content\">\r\n                        <TreeViewComponent id='tree1' fields={this.field} nodeDragStop={this.onDragStop.bind(this)} created={this.onCreate.bind(this)} allowDragAndDrop={this.allowDragAndDrop}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 tree2-data\">\r\n                    <h4>TreeView-2</h4>\r\n                    <div className=\"content\">\r\n                        <TreeViewComponent id='tree2' fields={this.fields} nodeDragStop={this.onDragStop.bind(this)} allowDragAndDrop={this.allowDragAndDrops}/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"col-lg-4 tree3-data\">\r\n                    <h4>ListView</h4>\r\n                    <div className=\"content\">\r\n                        <div id=\"list\">\r\n                        <ListViewComponent id=\"list\" className=\"e-droppable\" dataSource={[]} ref={(list) => { this.listObj = list; }} actionComplete={this.actionBegin.bind(this)} cssClass={'custom-list'} template=\"<div><span>${text}</span><span id=${iconId} class=${class}></span></div>\"/> \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div id=\"overlay\">\r\n                </div>\r\n              </div>\r\n            </div>\r\n        </div>);\r\n    }\r\n}\r\n\nrender(<Dragdrop />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}