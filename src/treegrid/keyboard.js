"use strict";
var __extends = (this && this.__extends) || (function () {
    var extendStatics = Object.setPrototypeOf ||
        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };
    return function (d, b) {
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
Object.defineProperty(exports, "__esModule", { value: true });
var React = require("react");
var ej2_react_treegrid_1 = require("@syncfusion/ej2-react-treegrid");
var data_1 = require("./data");
var sample_base_1 = require("../common/sample-base");
var property_pane_1 = require("../common/property-pane");
var KeyBoard = /** @class */ (function (_super) {
    __extends(KeyBoard, _super);
    function KeyBoard() {
        var _this = _super !== null && _super.apply(this, arguments) || this;
        _this.editSettings = { allowEditing: true, allowAdding: true, allowDeleting: true, mode: 'Row' };
        _this.editparams = { params: { format: 'n' } };
        _this.validationRule = { required: true };
        _this.validationRule1 = { date: true };
        _this.validationRule2 = { required: true, number: true };
        return _this;
    }
    KeyBoard.prototype.render = function () {
        return (React.createElement("div", { className: 'control-pane' },
            React.createElement("div", { className: 'control-section' },
                React.createElement("div", { className: 'col-md-9' },
                    React.createElement(ej2_react_treegrid_1.TreeGridComponent, { dataSource: data_1.sampleData, treeColumnIndex: 1, childMapping: 'subtasks', height: '900', editSettings: this.editSettings },
                        React.createElement(ej2_react_treegrid_1.ColumnsDirective, null,
                            React.createElement(ej2_react_treegrid_1.ColumnDirective, { field: 'taskID', headerText: 'Task ID', isPrimaryKey: true, width: '90', textAlign: 'Right' }),
                            React.createElement(ej2_react_treegrid_1.ColumnDirective, { field: 'taskName', headerText: 'Task Name', width: '240', validationRules: this.validationRule }),
                            React.createElement(ej2_react_treegrid_1.ColumnDirective, { field: 'startDate', headerText: 'Start Date', format: 'yMd', textAlign: 'Right', editType: 'datepickeredit', validationRules: this.validationRule1, width: '105' }),
                            React.createElement(ej2_react_treegrid_1.ColumnDirective, { field: 'duration', headerText: 'Duration', width: '120', textAlign: 'Right', editType: 'numericedit', edit: this.editparams, validationRules: this.validationRule2 }),
                            React.createElement(ej2_react_treegrid_1.ColumnDirective, { field: 'progress', headerText: 'Progress', width: '130', textAlign: 'Right', editType: 'numericedit', edit: this.editparams })),
                        React.createElement(ej2_react_treegrid_1.Inject, { services: [ej2_react_treegrid_1.Edit] }))),
                React.createElement("div", { className: 'col-md-3 property-section' },
                    React.createElement(property_pane_1.PropertyPane, { title: 'Properties' },
                        React.createElement("table", { id: 'property', title: 'Properties', className: 'property-panel-table', style: { width: '100%' } },
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Keys")),
                                React.createElement("td", { style: { width: '70%' } },
                                    React.createElement("b", null, "Description"))),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "F2")),
                                React.createElement("td", { style: { width: '30%' } }, "Cell edit")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Enter")),
                                React.createElement("td", { style: { width: '30%' } }, "Save request")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Delete")),
                                React.createElement("td", { style: { width: '30%' } }, "Delete row")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Ctrl + Shift + UpArrow")),
                                React.createElement("td", { style: { width: '30%' } }, "Collapse Child Grid")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Ctrl + Shift + DownArrow")),
                                React.createElement("td", { style: { width: '30%' } }, "Expand Child Grid")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Ctrl + UpArrow")),
                                React.createElement("td", { style: { width: '30%' } }, "Collapse All")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Ctrl + DownArrow")),
                                React.createElement("td", { style: { width: '30%' } }, "Expand All")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Ctrl + Home")),
                                React.createElement("td", { style: { width: '30%' } }, "First row selection")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Ctrl + End")),
                                React.createElement("td", { style: { width: '30%' } }, "Last row selection")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Home")),
                                React.createElement("td", { style: { width: '30%' } }, "First cell selection")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "End")),
                                React.createElement("td", { style: { width: '30%' } }, "Last cell selection")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Up Arrow")),
                                React.createElement("td", { style: { width: '30%' } }, "Move row selection up")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Down Arrow")),
                                React.createElement("td", { style: { width: '30%' } }, "Move row selection down")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Right Arrow")),
                                React.createElement("td", { style: { width: '30%' } }, "Move Cell selection right")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Left Arrow")),
                                React.createElement("td", { style: { width: '30%' } }, "Move Cell selection left")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Shift + Down/Up")),
                                React.createElement("td", { style: { width: '30%' } }, "Multiple row Selection")),
                            React.createElement("tr", { style: { height: '50px' } },
                                React.createElement("td", { style: { width: '30%' } },
                                    React.createElement("b", null, "Ctrl + j")),
                                React.createElement("td", { style: { width: '30%' } }, "Focus TreeGrid element")))))),
            React.createElement("div", { id: "action-description" },
                React.createElement("p", null, "This demo showcases the keyboard shortcuts applicable on TreeGrid and also lists out in below description, how those applicable shortcuts interacts with TreeGrid actions.")),
            React.createElement("div", { id: 'description' },
                React.createElement("p", null,
                    "All the TreeGrid actions can be controlled via keyboard keys and is availed by using ",
                    React.createElement("code", null, "allowKeyboardInteraction"),
                    "property which is set to true by default. The applicable key combinations and its relative functionalities are listed below,"),
                React.createElement("p", null,
                    React.createElement("table", null,
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("b", null, "Keys")),
                            React.createElement("td", null,
                                React.createElement("b", null, "Description"))),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Down Arrow")),
                            React.createElement("td", null, "ExpandAll")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Up Arrow")),
                            React.createElement("td", null, "CollapseAll")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "F2")),
                            React.createElement("td", null, "Edit")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "ESC")),
                            React.createElement("td", null, "Cancel")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Enter")),
                            React.createElement("td", null, "Save")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Insert")),
                            React.createElement("td", null, "Add")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Delete")),
                            React.createElement("td", null, "Delete")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Home")),
                            React.createElement("td", null, "First row selection")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + End")),
                            React.createElement("td", null, "Last row selection")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Home")),
                            React.createElement("td", null, "First cell selection")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "End")),
                            React.createElement("td", null, "Last cell selection")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Up Arrow")),
                            React.createElement("td", null, "Move row selection up")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Down Arrow")),
                            React.createElement("td", null, "Move row selection down")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Up Arrow")),
                            React.createElement("td", null, "Move Cell selection up")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Down Arrow")),
                            React.createElement("td", null, "Move Cell selection down")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Right Arrow")),
                            React.createElement("td", null, "Move Cell selection right")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Left Arrow")),
                            React.createElement("td", null, "Move Cell selection left")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Shift + Down/Up")),
                            React.createElement("td", null, "Multiple row Selection")),
                        React.createElement("tr", null,
                            React.createElement("td", { style: { width: '70%' } },
                                React.createElement("code", null, "Shift + Right/Left/Down/Up")),
                            React.createElement("td", null, "Multiple Cell Selection")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Shift + Up Arrow")),
                            React.createElement("td", null, "Collapse selected parent row")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Shift + Down Arrow")),
                            React.createElement("td", null, "Expand selected parent row")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + j")),
                            React.createElement("td", null, "Focus TreeGrid element")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Tab")),
                            React.createElement("td", null, "Go to next cell for editing")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Shift + Tab")),
                            React.createElement("td", null, "Go to previous cell for editing")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "PageDown")),
                            React.createElement("td", null, "Go to Next page")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "PageUp")),
                            React.createElement("td", null, "Go to Previous page")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Alt + PageUp")),
                            React.createElement("td", null, "Go to First page")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Ctrl + Alt + PageDown")),
                            React.createElement("td", null, "Go to Last page")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Alt + PageUp")),
                            React.createElement("td", null, "Go to Next pager")),
                        React.createElement("tr", null,
                            React.createElement("td", null,
                                React.createElement("code", null, "Alt + PageDown")),
                            React.createElement("td", null, "Go to last pager")))),
                React.createElement("p", null, "More information on the gridLines configuration can be found in this documentation section."))));
    };
    return KeyBoard;
}(sample_base_1.SampleBase));
exports.KeyBoard = KeyBoard;
