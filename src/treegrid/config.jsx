export const TreeGridSampleOrder = [
    { 'path': 'treegrid/treegrid-overview', 'component': 'Overview', 'name': 'Overview', 'description': 'This demo for Syncfusion React TreeGrid component is an overview of how to display and manipulate large data with configuration options.', 'order': '01', 'category': 'Tree Grid', 'api': '{"TreeGridComponent":["queryCellInfo","dataSource","enableVirtualization","allowFiltering","allowSorting","allowSelection","selectionSettings","height","columns","dataBound","actionComplete","load"] }',
        'sourceFiles': [{ 'displayName': 'treegrid-overview.tsx', 'path': 'src/treegrid/treegrid-overview.tsx' }] },
    { 'path': 'treegrid/default', 'component': 'Default', 'name': 'Default Functionalities', 'description': 'This example shows how the Syncfusion React TreeGrid component looks with its default configuration.', 'order': '01', 'category': 'Tree Grid', 'api': '{"TreeGridComponent":["dataSource", "treeColumnIndex", "height", "childMapping", "columns"] }',
        'sourceFiles': [{ 'displayName': 'default.tsx', 'path': 'src/treegrid/default.tsx' }] },
    { 'path': 'treegrid/localdata', 'component': 'LocalData', 'name': 'Local Data', 'description': 'This example shows the binding of an array of list objects in the Syncfusion React TreeGrid component.', 'order': '02', 'category': 'Data Binding', 'api': '{"TreeGridComponent":["dataSource", "treeColumnIndex", "height", "childMapping", "columns"] }',
        'sourceFiles': [{ 'displayName': 'localdata.tsx', 'path': 'src/treegrid/localdata.tsx' }] },
    { 'path': 'treegrid/remote-data', 'component': 'RemoteData', 'name': 'Remote Data', 'description': 'This example shows the binding of remote services by using the DataManager in the Syncfusion React TreeGrid.', 'order': '02', 'category': 'Data Binding', 'api': '{"TreeGridComponent":["dataSource","allowPaging", "columns","treeColumnIndex", "hasChildMapping", "parentIdMapping","idMapping","height"] }',
        'sourceFiles': [{ 'displayName': 'remote-data.tsx', 'path': 'src/treegrid/remote-data.tsx' }] },
    { 'path': 'treegrid/selfreference', 'component': 'SelfReference', 'name': 'Self Reference', 'description': 'This example illustrates binding self-referential flat data with parent ID to a Syncfusion React TreeGrid component.', 'order': '02', 'category': 'Data Binding', 'api': '{"TreeGridComponent":["dataSource","allowPaging", "columns","treeColumnIndex","idMapping","parentIdMapping"] }',
        'sourceFiles': [{ 'displayName': 'selfreference.tsx', 'path': 'src/treegrid/selfreference.tsx' }] },
    { 'path': 'treegrid/columnformatting', 'component': 'ColumnFormat', 'name': 'Column Formatting', 'description': 'This demo explains how to display the content of TreeGrid columns based on the specified format in Syncfusion React TreeGrid.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","allowPaging"] }',
        'sourceFiles': [{ 'displayName': 'columnformatting.tsx', 'path': 'src/treegrid/columnformatting.tsx' }] },
    { 'path': 'treegrid/columntemplate', 'component': 'ColumnTemplate', 'name': 'Column Template', 'description': 'This demo explains how to define the template in TreeGrid columns in Syncfusion React TreeGrid component.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","width","height","columns","rowHeight"] }',
        'sourceFiles': [{ 'displayName': 'columntemplate.tsx', 'path': 'src/treegrid/columntemplate.tsx' }] },
    { 'path': 'treegrid/reorder', 'component': 'Reorders', 'name': 'Reorder', 'description': 'This demo explains how to reorder the columns of treegrid by simple drag and drop of columns using Syncfusion React TreeGrid component.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","allowReordering","actionComplete","columns","allowPaging"] }',
        'sourceFiles': [{ 'displayName': 'reorder.tsx', 'path': 'src/treegrid/reorder.tsx' }] },
    { 'path': 'treegrid/column-menu', 'component': 'TreeGridColumnMenu', 'name': 'Column Menu', 'description': 'This demo explains the default functionalities of the Column Menu in Syncfusion React TreeGrid component.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns", "showColumnMenu"] }',
        'sourceFiles': [{ 'displayName': 'column-menu.tsx', 'path': 'src/treegrid/column-menu.tsx' }] },
    { 'path': 'treegrid/cellalignment', 'component': 'CellAlign', 'name': 'Cell Alignment', 'description': 'This demo explains how to align the content inside the cells of treegrid columns and headers in Syncfusion React TreeGrid component.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns"] }',
        'sourceFiles': [{ 'displayName': 'cellalignment.tsx', 'path': 'src/treegrid/cellalignment.tsx' }] },
    { 'path': 'treegrid/autowrap', 'component': 'AutoWrap', 'name': 'AutoWrap Column Cells', 'description': 'This demo explains how to wrap the content of columns within the specified width of treegrid columns in Syncfusion React TreeGrid component.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex","allowPaging","allowTextWrap","columns","pageSettings"] }',
        'sourceFiles': [{ 'displayName': 'autowrap.tsx', 'path': 'src/treegrid/autowrap.tsx' }] },
    { 'path': 'treegrid/showhidecolumn', 'component': 'ShowHideColumn', 'name': 'Show or Hide Column', 'description': 'This demo explains how to hide or show the columns of treegrid dynamically using Syncfusion React TreeGrid methods.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex","allowPaging","allowTextWrap","columns","pageSettings"] }',
        'sourceFiles': [{ 'displayName': 'showhidecolumn.tsx', 'path': 'src/treegrid/showhidecolumn.tsx' }] },
    { 'path': 'treegrid/header-template', 'component': 'HeaderTemplate', 'name': 'Header Template', 'description': 'This demo explains how to customize column headers to show additional HTML elements, such as icons, images, etc. in Syncfusion React TreeGrid component.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex","allowPaging","columns"] }',
        'sourceFiles': [{ 'displayName': 'header-template.tsx', 'path': 'src/treegrid/header-template.tsx' }] },
    { 'path': 'treegrid/stacked-header', 'component': 'Stacked', 'name': 'Stacked Header', 'description': 'This demo explains how to provide a common header for the group of columns in Syncfusion React TreeGrid component.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","allowPaging","pageSettings","columns"] }',
        'sourceFiles': [{ 'displayName': 'stacked-header.tsx', 'path': 'src/treegrid/stacked-header.tsx' }] },
    { 'path': 'treegrid/checkbox-column', 'component': 'CheckboxColumn', 'name': 'Checkbox Column', 'description': 'This demo explains how the hierarchy selection between the records using column checkboxes in Syncfusion React TreeGrid component.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","allowPaging","pageSettings","columns"] }',
        'sourceFiles': [{ 'displayName': 'checkbox-column.tsx', 'path': 'src/treegrid/checkbox-column.tsx' }] },
    { 'path': 'treegrid/frozencolumn', 'component': 'FrozenColumn', 'name': 'Frozen Column', 'description': 'This demo for Essential JS 2 treegrid control shows frozen columns feature of treegrid. Scroll the movable content to view the frozen columns.', 'order': '03', 'category': 'Columns', 'api': '{"TreeGridComponent":["dataSource","childMapping","columns","treeColumnIndex","frozenColumns"] }',
        'sourceFiles': [{ 'displayName': 'frozencolumn.tsx', 'path': 'src/treegrid/frozencolumn.tsx' }] },
    { 'path': 'treegrid/rowhover', 'component': 'RowHover', 'name': 'Row Hover', 'description': 'This demo explains how the treegrid row color is changed while move the mouse over a row in Syncfusion React TreeGrid content.', 'order': '04', 'category': 'Rows', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","enableHover","columns"] }',
        'sourceFiles': [{ 'displayName': 'rowhover.tsx', 'path': 'src/treegrid/rowhover.tsx' }] },
    { 'path': 'treegrid/rowheight', 'component': 'RowHeight', 'name': 'Row Height', 'description': 'This demo shows how to set different row height to the treegrid rows of Syncfusion React TreeGrid component.', 'order': '04', 'category': 'Rows', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","rowHeight","columns"] }',
        'sourceFiles': [{ 'displayName': 'rowheight.tsx', 'path': 'src/treegrid/rowheight.tsx' }] },
    { 'path': 'treegrid/row-template', 'component': 'RowTemplate', 'name': 'Row Template', 'description': 'This demo for Essential JS 2 treegrid control shows the usage of the row template feature. We have rendered each TreeGrid row using template.', 'order': '04', 'category': 'Rows', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns"] }',
        'sourceFiles': [{ 'displayName': 'row-template.tsx', 'path': 'src/treegrid/row-template.tsx' }] },
    { 'path': 'treegrid/detail-template', 'component': 'DetailTemplate', 'name': 'Detail Template', 'description': 'This demo shows TreeGrid with detail template feature and also each row contains detailed information about a row.', 'order': '04', 'category': 'Rows', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","height"] }',
        'sourceFiles': [{ 'displayName': 'detail-template.tsx', 'path': 'src/treegrid/detail-template.tsx' }] },
    { 'path': 'treegrid/drag-drop', 'component': 'DragAndDrop', 'name': 'Drag And Drop', 'description': 'This demo for Essential JS 2 treegrid control how the rows can be dragged within the treegrid using the row drag-and-drop feature.', 'order': '04', 'category': 'Rows', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns"] }',
        'sourceFiles': [{ 'displayName': 'drag-drop.tsx', 'path': 'src/treegrid/drag-drop.tsx' }] },
    { 'path': 'treegrid/inline-editing', 'component': 'Editing', 'name': 'Inline Editing', 'description': 'This example shows how to add and edit treegrid row or treegrid cell inline on the Syncfusion React TreeGrid component.', 'order': '05', 'category': 'Editing', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex", "editSettings", "toolbar", "columns", "height"] }',
        'sourceFiles': [{ 'displayName': 'inline-editing.tsx', 'path': 'src/treegrid/inline-editing.tsx' }] },
    { 'path': 'treegrid/dialog-editing', 'component': 'Dialog', 'name': 'Dialog Editing', 'description': 'This demo explains how to edit a treegrid record in the Dialog mode using Syncfusion React TreeGrid component.', 'order': '05', 'category': 'Editing', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex", "editSettings", "toolbar", "columns", "height"] }',
        'sourceFiles': [{ 'displayName': 'dialog-editing.tsx', 'path': 'src/treegrid/dialog-editing.tsx' }] },
    { 'path': 'treegrid/lockrow', 'component': 'LockRow', 'name': 'Lock Row', 'description': 'This demo explains how to disable editing for specific rows dynamically in Syncfusion React TreeGrid component.', 'order': '05', 'category': 'Editing', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex", "editSettings", "toolbar", "columns", "height"] }',
        'sourceFiles': [{ 'displayName': 'lockrow.tsx', 'path': 'src/treegrid/lockrow.tsx' }] },
    { 'path': 'treegrid/celledittype', 'component': 'EditType', 'name': 'Cell Edit Type', 'description': 'This demo explains how to set different edit types and how to define edit params for the treegrid columns in Syncfusion React TreeGrid component.', 'order': '05', 'category': 'Editing', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex", "editSettings", "toolbar", "columns", "height"] }',
        'sourceFiles': [{ 'displayName': 'celledittype.tsx', 'path': 'src/treegrid/celledittype.tsx' }] },
    { 'path': 'treegrid/commandcolumn', 'component': 'Command', 'name': 'Command Column', 'description': 'This demo explains how to include CRUD action buttons as one of the columns in Syncfusion React TreeGrid component.', 'order': '05', 'category': 'Editing', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex", "editSettings", "toolbar", "columns", "height"] }',
        'sourceFiles': [{ 'displayName': 'commandcolumn.tsx', 'path': 'src/treegrid/commandcolumn.tsx' }] },
    { 'path': 'treegrid/edittemplate', 'component': 'EditTemplate', 'name': 'Edit Template', 'description': 'This demo explains how create a custom editor control for the treegrid cells when a row is edited in Syncfusion React TreeGrid.', 'order': '05', 'category': 'Editing', 'api': '{"TreeGridComponent":["dataSource", "childMapping", "treeColumnIndex", "editSettings", "toolbar", "columns", "height"] }',
        'sourceFiles': [{ 'displayName': 'edittemplate.tsx', 'path': 'src/treegrid/edittemplate.tsx' }] },
    { 'path': 'treegrid/sorting', 'component': 'Sorting', 'name': 'Multi Sorting', 'description': 'This demo demonstrates to sort multiple columns of treegrid by hold the CTRL key and click on the column headers of Syncfusion React TreeGrid component.', 'order': '06', 'category': 'Sorting', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","allowPaging","pageSettings","columns","allowSorting","actionComplete","sortSettings"] }',
        'sourceFiles': [{ 'displayName': 'sorting.tsx', 'path': 'src/treegrid/sorting.tsx' }] },
    { 'path': 'treegrid/sortingapi', 'component': 'SortingAPI', 'name': 'Sorting API', 'description': 'This demo explains how to sort columns dynamically using methods of Syncfusion React TreeGrid component.', 'order': '06', 'category': 'Sorting', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","allowPaging","pageSettings","columns","allowSorting","actionComplete","sortSettings"] }',
        'sourceFiles': [{ 'displayName': 'sortingapi.tsx', 'path': 'src/treegrid/sortingapi.tsx' }] },
    { 'path': 'treegrid/filtering', 'component': 'Filtering', 'name': 'Default Filtering', 'description': 'This demo explains the default functionalities of filtering and how to define the template for filter bar in Syncfusion React TreeGrid.', 'order': '07', 'category': 'Filtering', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns","allowFiltering","filterSettings","treeColumnIndex"] }',
        'sourceFiles': [{ 'displayName': 'filtering.tsx', 'path': 'src/treegrid/filtering.tsx' }] },
    { 'path': 'treegrid/filter-menu', 'component': 'FilterMenu', 'name': 'Menu Filter', 'description': 'This demo explains how to filter the content using menu filter type of Syncfusion React TreeGrid component.', 'order': '07', 'category': 'Filtering', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns","allowFiltering","treeColumnIndex","filterSettings"] }',
        'sourceFiles': [{ 'displayName': 'filter-menu.tsx', 'path': 'src/treegrid/filter-menu.tsx' }] },
    { 'path': 'treegrid/searching', 'component': 'Search', 'name': 'Search', 'description': 'This demo explains how to search the text entered in the search bar in Syncfusion React TreeGrid content.', 'order': '07', 'category': 'Filtering', 'api': '{"TreeGridComponent":["dataSource","allowPaging","pageSettings","columns","childMapping", "treeColumnIndex","toolbar"] }',
        'sourceFiles': [{ 'displayName': 'searching.tsx', 'path': 'src/treegrid/searching.tsx' }] },
    { 'path': 'treegrid/paging', 'component': 'Paging', 'name': 'Default Paging', 'description': 'This demo explains how to display the records in paginated view in Syncfusion React TreeGrid component.', 'order': '08', 'category': 'Paging', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns","pageSettings","treeColumnIndex"] }',
        'sourceFiles': [{ 'displayName': 'paging.tsx', 'path': 'src/treegrid/paging.tsx' }] },
    { 'path': 'treegrid/pagingapi', 'component': 'PagingAPI', 'name': 'Paging API', 'description': 'This demo explains how to customize a pager using the APIs that are relevant to paging of Syncfusion React TreeGrid component.', 'order': '08', 'category': 'Paging', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns","pageSettings","treeColumnIndex"] }',
        'sourceFiles': [{ 'displayName': 'pagingapi.tsx', 'path': 'src/treegrid/pagingapi.tsx' }] },
    { 'path': 'treegrid/defaultscrolling', 'component': 'DefaultScrolling', 'name': 'Default Scrolling', 'description': 'This demo for Essential JS 2 TreeGrid control shows the usage of the horizontal and vertical scrollbars to view TreeGrid content that exceeds the TreeGrid area.', 'order': '14', 'category': 'Scrolling', 'api': '{"TreeGridComponent":["dataSource","childMapping","treeColumnIndex","height"] }',
        'sourceFiles': [{ 'displayName': 'defaultscrolling.tsx', 'path': 'src/treegrid/defaultscrolling.tsx' }]
    },
    { 'path': 'treegrid/virtualscrolling', 'component': 'VirtualScrolling', 'name': 'Virtual Scrolling', 'description': 'This demo demonstrates how to use Essential JS 2 TreeGrid to show a large data view without performance degradation by rendering only the required rows.', 'order': '14', 'category': 'Scrolling', 'api': '{"TreeGridComponent":["dataSource","childMapping","treeColumnIndex","height","enableVirtualization"] }',
        'sourceFiles': [{ 'displayName': 'virtualscrolling.tsx', 'path': 'src/treegrid/virtualscrolling.tsx' }]
    },
    { 'path': 'treegrid/selection', 'component': 'Selection', 'name': 'Default Selection', 'description': 'This demo explains the customization of selection mode and toggle selection of Syncfusion React TreeGrid component.', 'order': '09', 'category': 'Selection', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns","allowSelection","selectionSettings","treeColumnIndex"] }',
        'sourceFiles': [{ 'displayName': 'selection.tsx', 'path': 'src/treegrid/selection.tsx' }] },
    { 'path': 'treegrid/selectionapi', 'component': 'SelectionAPI', 'name': 'Selection API', 'description': 'This demo explains how to select and clear multiple rows using methods of Syncfusion React TreeGrid component.', 'order': '09', 'category': 'Selection', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns","allowSelection","selectionSettings","treeColumnIndex"] }',
        'sourceFiles': [{ 'displayName': 'selectionapi.tsx', 'path': 'src/treegrid/selectionapi.tsx' }] },
    { 'path': 'treegrid/checkbox-selection', 'component': 'CheckboxSelection', 'name': 'Checkbox Selection', 'description': 'This demo explains how the check box selection feature can be used to select treegrid rows in Syncfusion React TreeGrid component.', 'order': '09', 'category': 'Selection', 'api': '{"TreeGridComponent":["dataSource","childMapping","allowPaging","columns","allowSelection","selectionSettings","treeColumnIndex"] }',
        'sourceFiles': [{ 'displayName': 'checkbox-selection.tsx', 'path': 'src/treegrid/checkbox-selection.tsx' }] },
    { 'path': 'treegrid/aggregate-default', 'component': 'AggregateRow', 'name': 'Default Aggregate', 'description': 'This demo explains how to display the summary values such as average, minimum, etc., for the columns in Syncfusion React TreeGrid component.', 'order': '10', 'category': 'Aggregates', 'api': '{"TreeGridComponent":["dataSource","childMapping","columns","aggregates","treeColumnIndex"] }',
        'sourceFiles': [{ 'displayName': 'aggregate-default.tsx', 'path': 'src/treegrid/aggregate-default.tsx' }] },
    { 'path': 'treegrid/custom-aggregate', 'component': 'CustomAggregate', 'name': 'Custom Aggregate', 'description': 'This demo explains how to display the custom aggregate for the columns in Syncfusion React TreeGrid component.', 'order': '10', 'category': 'Aggregates', 'api': '{"TreeGridComponent":["dataSource","childMapping","columns","aggregates","treeColumnIndex"] }',
        'sourceFiles': [{ 'displayName': 'custom-aggregate.tsx', 'path': 'src/treegrid/custom-aggregate.tsx' }] },
    { 'path': 'treegrid/contextmenu', 'component': 'TreeContextMenu', 'name': 'Default Context Menu', 'description': 'This demo explains the usage of context menu and the default context menu items in Syncfusion React TreeGrid component.', 'order': '11', 'category': 'Context Menu', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","allowPaging","columns","allowSorting","contextMenu","sortSettings"] }',
        'sourceFiles': [{ 'displayName': 'contextmenu.tsx', 'path': 'src/treegrid/contextmenu.tsx' }] },
    { 'path': 'treegrid/customcontextmenu', 'component': 'CustomContextMenu', 'name': 'Custom Context Menu', 'description': 'This demo explains the usage of custom context menu items of context menu in Syncfusion React TreeGrid component.', 'order': '11', 'category': 'Context Menu', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","allowPaging","columns","allowSorting","contextMenu","sortSettings"] }',
        'sourceFiles': [{ 'displayName': 'customcontextmenu.tsx', 'path': 'src/treegrid/customcontextmenu.tsx' }] },
    { 'path': 'treegrid/export', 'component': 'Export', 'name': 'Default Exporting', 'description': 'This demo explains how to export the treegrid content to Excel, PDF, and CSV documents using the Syncfusion React TreeGrid component.', 'order': '12', 'category': 'Exporting', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","toolbar"] }',
        'sourceFiles': [{ 'displayName': 'export.tsx', 'path': 'src/treegrid/export.tsx' }] },
    { 'path': 'treegrid/print', 'component': 'Print', 'name': 'Print', 'description': 'This demo explains how to print the records of the treegrid using the Print feature of Syncfusion React TreeGrid component.', 'order': '12', 'category': 'Exporting', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","toolbar"] }',
        'sourceFiles': [{ 'displayName': 'print.tsx', 'path': 'src/treegrid/print.tsx' }] },
    { 'path': 'treegrid/conditionalformatting', 'component': 'Format', 'name': 'Conditional Formatting', 'description': 'This demo explains how to apply styles to specific cells based on certain conditions in Syncfusion React TreeGrid component.', 'order': '13', 'category': 'Miscellaneous', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns"] }',
        'sourceFiles': [{ 'displayName': 'conditionalformatting.tsx', 'path': 'src/treegrid/conditionalformatting.tsx' }] },
    { 'path': 'treegrid/toolbar-template', 'component': 'ToolbarTemplate', 'name': 'Toolbar Template', 'description': 'This demo explains how to render custom template elements in a toolbar by which any custom operation can be performed in Syncfusion React TreeGrid.', 'order': '13', 'category': 'Miscellaneous', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","toolbar"] }',
        'sourceFiles': [{ 'displayName': 'toolbar-template.tsx', 'path': 'src/treegrid/toolbar-template.tsx' }] },
    { 'path': 'treegrid/events', 'component': 'Events', 'name': 'Events', 'description': 'This demo explains the basic functionalities of the events that are available in the Syncfusion React TreeGrid component.', 'order': '13', 'category': 'Miscellaneous', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","allowKeyboard"] }',
        'sourceFiles': [{ 'displayName': 'events.tsx', 'path': 'src/treegrid/events.tsx' }] },
    { 'path': 'treegrid/keyboard', 'component': 'KeyBoard', 'name': 'KeyBoard Interaction', 'description': 'This demo explains the key combinations used to perform corresponding treegrid actions in Syncfusion React TreeGrid component.', 'order': '13', 'category': 'Miscellaneous', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","allowKeyboard"] }',
        'sourceFiles': [{ 'displayName': 'keyboard.tsx', 'path': 'src/treegrid/keyboard.tsx' }] },
    { 'path': 'treegrid/gridlines', 'component': 'GridLines', 'name': 'Grid Lines', 'description': 'This demo explains how to customize the grid lines in treegrid using Syncfusion React TreeGrid component.', 'order': '13', 'category': 'Miscellaneous', 'api': '{"TreeGridComponent":["dataSource","childMapping", "treeColumnIndex","columns","gridLines"] }',
        'sourceFiles': [{ 'displayName': 'gridlines.tsx', 'path': 'src/treegrid/gridlines.tsx' }] }
];
