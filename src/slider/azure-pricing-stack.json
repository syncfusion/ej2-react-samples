{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SliderComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { CheckBoxComponent, ButtonComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { DialogComponent } from '@syncfusion/ej2-react-popups';\r\nimport { SampleBase } from './sample-base';\r\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\r\nconst slidercss = `\r\nhtml,\r\nbody {\r\n    height: 100%;\r\n    width: 100%;\r\n    margin: 0px;\r\n}\r\n\r\n#pricing-slider #cloud-right-pane .btn-size {\r\n    padding-top: 16px;\r\n    padding-bottom: 30px;\r\n    border-bottom: 1px solid lightgrey;\r\n}\r\n\r\n#pricing-slider .e-slider-container.e-horizontal {\r\n    height: 56px;\r\n}\r\n\r\n#pricing-slider .row {\r\n    border: 1px solid #CCCCCC;\r\n    box-shadow: 0px 0px 4px;\r\n    opacity: 100;\r\n\r\n    border-radius: 4px;\r\n}\r\n\r\n.discount .e-label,\r\n.discount .e-label {\r\n    white-space: initial;\r\n}\r\n\r\n#pricing-slider .sub-heading {\r\n    margin-top: -8px;\r\n    font-size: 13px;\r\n    font-family: Roboto-Regular;\r\n    color: #808080;\r\n}\r\n\r\n#pricing-slider .label-text.right-text {\r\n    padding-top: 16px;\r\n    padding-bottom: 20px;\r\n}\r\n\r\n#pricing-slider .label-text {\r\n    color: #000000;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n}\r\n\r\nspan.e-label .offer {\r\n    color: #4A90E2;\r\n}\r\n\r\n.cloud-slider {\r\n    display: block;\r\n    position: relative;\r\n}\r\n\r\n\r\n#processor {\r\n    background-color: #A06AFF;\r\n}\r\n\r\n#memory {\r\n    background-color: #7ED321;\r\n}\r\n\r\n#storage {\r\n    background-color: #4A90E2;\r\n}\r\n\r\n#memory,\r\n#storage,\r\n#processor {\r\n    font-family: Roboto-Medium;\r\n    font-size: 14px;\r\n    height: 24px;\r\n    width: 70px;\r\n    text-align: center;\r\n    line-height: 24px;\r\n    float: right;\r\n    color: #FFFFFF;\r\n    font-weight: 500;\r\n    border-radius: 18px;\r\n}\r\n\r\n#cPanel,\r\n#discount {\r\n    height: 30px;\r\n    margin-top: -10px;\r\n    width: 20px;\r\n}\r\n\r\n\r\n#value {\r\n    color: #000000;\r\n    font-family: Roboto-Bold;\r\n    font-size: 28px;\r\n    font-weight: bold;\r\n}\r\n\r\n#suffix {\r\n    color: #000000;\r\n    font-family: Roboto-Regular;\r\n    font-size: 16px;\r\n    font-weight: 500;\r\n}\r\n\r\n.text {\r\n    font-size: 13px;\r\n    padding-top: 26px;\r\n    width: 190px;\r\n}\r\n\r\n#cloud-right-pane {\r\n    background-color: #FFFFFF;\r\n    border-left: 1px solid #CCCCCC;\r\n    padding: 20px;\r\n    height: 443px;\r\n}\r\n\r\n.pricing-slider {\r\n    margin-top: 40px;\r\n    min-height: 20px;\r\n    margin-bottom: 20px;\r\n}\r\n\r\n.cloud-slider-right {\r\n    color: #000000;\r\n    font-size: 14px;\r\n}\r\n\r\n.cloud-slider-right.discount-pay {\r\n    padding-top: 20px;\r\n}\r\n\r\n#cloud-left-pane {\r\n    height: 443px;\r\n    padding: 40px;\r\n    background-color: #FAFAFA;\r\n}\r\n\r\n.discount {\r\n    padding-top: 20px;\r\n    padding-bottom: 35px;\r\n}\r\n\r\n@media (max-width: 1010px) {\r\n    #cloud-right-pane {\r\n        border-top: 1px solid #d5d7d8 !important;\r\n        border-left: none !important;\r\n        border-width: 1px 0 0!important;\r\n        padding-top: 15px !important;\r\n        padding-left: 0!important;\r\n    }\r\n    .cloud-right-content {\r\n        padding-left: 24px !important;\r\n    }\r\n    #cloud-left-pane {\r\n        width: 100%;\r\n    }\r\n    #cloud-right-pane {\r\n        width: 100%;\r\n    }\r\n}\r\n\r\n#cloud-slider-text {\r\n    padding-bottom: 20px;\r\n    border-bottom: 1px solid lightgrey;\r\n}\r\n\r\n#dollar {\r\n    color: #000000;\r\n    font-family: Roboto-Regular;\r\n    font-size: 14px;\r\n    font-weight: 500;\r\n    position: relative;\r\n    top: -7px;\r\n}\r\n\r\n\r\n#btn {\r\n    text-transform: uppercase;\r\n    width: -webkit-fill-available;\r\n}\r\n\r\n.cloud-left-slider {\r\n    margin-top: 40px;\r\n}\r\n\r\n.control-section {\r\n    padding-top: 0px;\r\n    margin-left: 75px;\r\n\r\n}\r\n\r\n@media screen and (max-width: 1199px) {\r\n    .control-section {\r\n        margin-left: 0px;\r\n    }\r\n}\r\n\r\n.cloud-right-content .e-btn.e-info {\r\n    padding: 0px;\r\n    width: 30px;\r\n    height: 30px;\r\n    line-height: inherit;\r\n    margin: 2px;\r\n}\r\n\r\n.highcontrast .pricing-slider,\r\n.highcontrast #pricing-slider .label-text,\r\n.highcontrast #pricing-slider .sub-heading {\r\n    color: white;\r\n}\r\n\r\n.fabric .cloud-right-content .e-btn.e-info,\r\n.highcontrast .e-btn.e-info {\r\n    line-height: 2px;\r\n}\r\n\r\n.highcontrast #dollar,\r\n.highcontrast #value,\r\n.highcontrast #dialog-header,\r\n.highcontrast #StorgeDialog,\r\n.highcontrast #CloudDialog,\r\n.highcontrast #processorDialog {\r\n    color: white;\r\n}\r\n\r\n.highcontrast #pricing-slider .row {\r\n    border: 1px solid #969696;\r\n}\r\n\r\n.highcontrast #cloud-right-pane {\r\n    border-left: 1px solid #969696;\r\n}\r\n\r\n.highcontrast #cloud-slider-text,\r\n.highcontrast #pricing-slider #cloud-right-pane .btn-size {\r\n    border-bottom: 1px solid #969696;\r\n}\r\n\r\n.highcontrast #processor {\r\n    background-color: #AE80FF;\r\n}\r\n\r\n.highcontrast #memory {\r\n    background-color: #7ED321;\r\n}\r\n\r\n.highcontrast #storage {\r\n    background-color: #61A4EF;\r\n}\r\n\r\n.highcontrast #cloud-left-pane {\r\n    background-color: #1a1a1a;\r\n}\r\n\r\n.highcontrast #cloud-right-pane {\r\n    background-color: #000;\r\n}\r\n\r\n.highcontrast #processorPriceName,\r\n.highcontrast #memoryPriceName,\r\n.highcontrast #storgePriceName,\r\n.highcontrast #cloudPriceName {\r\n    color: white;\r\n    opacity: 1;\r\n}\r\n\r\n#dialog-header {\r\n    color: #000000;\r\n    opacity: .87;\r\n    font-family: Roboto-Medium;\r\n    font-weight: 600;\r\n    font-size: 20px;\r\n}\r\n\r\n#CloudDialog {\r\n    color: #000000;\r\n    padding-top: 14px;\r\n    padding-bottom: 24px;\r\n    border-top: 1px solid #CCCCCC;\r\n}\r\n\r\n#processorPrice,\r\n#memoryPrice,\r\n#storgePrice {\r\n    opacity: 0.9;\r\n    font-family: Roboto-Bold;\r\n    font-weight: 600;\r\n    font-size: 16px;\r\n    float: right;\r\n}\r\n\r\n#alertDialog .e-footer-content {\r\n    padding-top: 0;\r\n}\r\n\r\n#processorPriceName,\r\n#memoryPriceName,\r\n#storgePriceName,\r\n#cloudPriceName {\r\n    opacity: 0.9;\r\n    color: #000000;\r\n    font-family: Roboto-Regular;\r\n    font-size: 16px;\r\n}\r\n\r\n#cloudPrice {\r\n    opacity: 0.9;\r\n    font-family: Roboto-Bold;\r\n    font-weight: 600;\r\n    font-size: 26px;\r\n    float: right;\r\n}\r\n\r\n#processorDialog {\r\n    color: #000000;\r\n    padding-top: 12px;\r\n    padding-bottom: 12px;\r\n}\r\n\r\n#StorgeDialog {\r\n    color: #000000;\r\n    padding-top: 12px;\r\n    padding-bottom: 16px;\r\n}\r\n\r\n.bootstrap4 #pricing-slider .row {\r\n    box-shadow: none;\r\n}\r\n\r\n`;\r\nexport class Cloudpricing extends SampleBase {\r\n    constructor() {\r\n        super();\r\n        this.nullValue = '';\r\n        this.objElements = ['#xSmallBtn', '#smallBtn', '#mediumBtn', '#largeBtn', '#xLargeBtn'];\r\n        this.buttonObj = { obj: ButtonComponent, prop: { cssClass: 'e-info', isPrimary: true } };\r\n        this.cssClass = 'e-success';\r\n        this.content = '<div id = \"dialog-content\"><div id = \"dialog-header\">Cloud Price Details</div>' +\r\n            '<div id=\"processorDialog\"><span id=\"processorPriceName\">Processor Price</span><span id=\"processorPrice\"></span></div>' +\r\n            '<div id=\"MemoryDialog\"><span id=\"memoryPriceName\">Memory Price</span><span id=\"memoryPrice\"></span></div>' +\r\n            '<div id=\"StorgeDialog\"><span id=\"storgePriceName\">Storge Price</span><span id=\"storgePrice\"></span></div>' +\r\n            '<div id=\"CloudDialog\"><span id=\"cloudPriceName\">Estimated Prices</span><span id=\"cloudPrice\"></span></div></div>';\r\n        this.showCloseIcon = false;\r\n        this.buttons = [{\r\n                click: this.alertDlgBtnClick, buttonModel: { content: 'Close', isPrimary: true }\r\n            }];\r\n        this.closeOnEscape = false;\r\n        this.width = '360px';\r\n        this.target = '#pricing-slider';\r\n        this.animationSettings = { effect: 'None' };\r\n        for (let i = 0; i < this.objElements.length; i++) {\r\n            this.buttonObj.obj = this.buttonObj.prop;\r\n            this.buttonObj.obj = this.objElements[i];\r\n        }\r\n    }\r\n    //   //Sets processor value\r\n    onCreateProcessor(args) {\r\n        if (!isNullOrUndefined(document.getElementById('processor'))) {\r\n            document.getElementById('processor').innerHTML = document.getElementById('processor-slider').ej2_instances[0].value + '  ' + 'CORE';\r\n        }\r\n    }\r\n    onCreateStorage(args) {\r\n        if (!isNullOrUndefined(document.getElementById('storage'))) {\r\n            document.getElementById('storage').innerHTML = document.getElementById('storage-slider').ej2_instances[0].value + '  ' + 'GB';\r\n            this.sliderValueChange();\r\n        }\r\n    }\r\n    //Sets memory value\r\n    onCreateMemory(args) {\r\n        if (!isNullOrUndefined(document.getElementById('memory'))) {\r\n            document.getElementById('memory').innerHTML = document.getElementById('memory-slider').ej2_instances[0].value + '  ' + 'GB';\r\n        }\r\n    }\r\n    //Processor Slider value change method\r\n    onChangeProcessor(args) {\r\n        this.onChange(document.getElementById('processor'), args.value, 'CORE');\r\n    }\r\n    //Memory Slider value change method\r\n    onChangeMemory(args) {\r\n        this.onChange(document.getElementById('memory'), args.value, 'GB');\r\n    }\r\n    //Storage Slider value change method\r\n    onChangeStorage(args) {\r\n        this.onChange(document.getElementById('storage'), args.value, 'GB');\r\n    }\r\n    //common method for Slider value change\r\n    onChange(elem, value, notation) {\r\n        if (!isNullOrUndefined(elem)) {\r\n            elem.innerText = value + '  ' + notation;\r\n            this.sliderValueChange();\r\n        }\r\n    }\r\n    //method to calculate monthly cloud price based on slider value\r\n    sliderValueChange() {\r\n        if (!isNullOrUndefined(document.getElementById('value')) && !isNullOrUndefined(document.getElementById('processor-slider'))\r\n            && !isNullOrUndefined(document.getElementById('memory-slider')) && !isNullOrUndefined(document.getElementById('storage-slider'))) {\r\n            this.elemValue = document.getElementById('value');\r\n            let porcessorValue = document.getElementById('processor-slider').ej2_instances[0].value;\r\n            let memoryValue = document.getElementById('memory-slider').ej2_instances[0].value;\r\n            let storageValue = document.getElementById('storage-slider').ej2_instances[0].value;\r\n            //formula to calculate cloud price based on slider value\r\n            this.finalValue = Number(((((porcessorValue * memoryValue) * 1000) + ((porcessorValue * memoryValue) * storageValue)\r\n                + ((porcessorValue * memoryValue) * 100)) / 12).toFixed(2));\r\n            if (document.getElementById('cPanel').ej2_instances && document.getElementById('cPanel').ej2_instances[0].checked) {\r\n                this.finalValue = Number((this.finalValue - 10).toFixed(2));\r\n            }\r\n            if (document.getElementById('discount').ej2_instances && document.getElementById('discount').ej2_instances[0].checked) {\r\n                this.finalValue = Number((this.finalValue - ((this.finalValue * 25) / 100)).toFixed(2));\r\n            }\r\n            this.elemValue.innerText = this.finalValue.toString();\r\n        }\r\n    }\r\n    sliderPriceValue(processor, memory, storage) {\r\n        this.processorSlider.value = processor;\r\n        this.memorySlider.value = memory;\r\n        this.storageSlider.value = storage;\r\n    }\r\n    btnClick(e) {\r\n        let processorPrice = document.getElementById('processorPrice');\r\n        this.onChange(processorPrice, this.processorSlider.value, 'CORE');\r\n        let memoryPrice = document.getElementById('memoryPrice');\r\n        this.onChange(memoryPrice, this.memorySlider.value, 'GB');\r\n        let storgePrice = document.getElementById('storgePrice');\r\n        this.onChange(storgePrice, this.storageSlider.value, 'GB');\r\n        let cloudPrice = document.getElementById('cloudPrice');\r\n        cloudPrice.innerText = '$' + this.finalValue;\r\n        this.sliderValueChange();\r\n        document.getElementById('alertDialog').ej2_instances[0].show();\r\n    }\r\n    ;\r\n    alertDlgBtnClick() {\r\n        if (!isNullOrUndefined(document.getElementById('alertDialog')) &&\r\n            !isNullOrUndefined(document.getElementById('alertDialog').ej2_instances[0])) {\r\n            document.getElementById('alertDialog').ej2_instances[0].hide();\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <div className=\"col-lg-10 control-section\">\r\n                    <div className=\"cloud-content-wrapper\">\r\n                        <div id=\"pricing-slider\" className=\"pricing-slider\">\r\n                            <style>{slidercss}</style>\r\n                            <div className=\"row\">\r\n                                <div id=\"cloud-left-pane\" className=\"col-lg-8 col-md-8 col-sm-8\">\r\n                                    <div className=\"cloud-slider\">\r\n                                        <div id=\"processor\"></div>\r\n                                        <span className=\"label-text\"> Processor </span>\r\n                                        \r\n                                        <SliderComponent id=\"processor-slider\" value={4} min={1} max={16} ref={(slider) => { this.processorSlider = slider; }} change={this.onChangeProcessor.bind(this)} created={this.onCreateProcessor.bind(this)}/>\r\n                                        <div className=\"sub-heading\"> Each core included minimum 2.26 GHz power </div>\r\n                                    </div>\r\n                                    <div className=\"cloud-slider cloud-left-slider\">\r\n                                        <div id=\"memory\"></div>\r\n                                        <span className=\"label-text\"> Memory </span>\r\n                                        \r\n                                        <SliderComponent id=\"memory-slider\" value={4} min={1} max={12} ref={(slider) => { this.memorySlider = slider; }} change={this.onChangeMemory.bind(this)} created={this.onCreateMemory.bind(this)}/>\r\n                                        <div className=\"sub-heading\"> Equal to burstable memory included </div>\r\n                                    </div>\r\n                                    <div className=\"cloud-slider cloud-left-slider\">\r\n                                        <div id=\"storage\"></div>\r\n                                        <span className=\"label-text\"> Storage </span>\r\n                                        \r\n                                        <SliderComponent id=\"storage-slider\" value={300} min={10} max={500} step={10} ref={(slider) => { this.storageSlider = slider; }} change={this.onChangeStorage.bind(this)} created={this.onCreateStorage.bind(this)}/>\r\n                                        <div className=\"sub-heading\"> 1000 GB bandwidth per month, at 100 Mbit/s uplink port </div>\r\n                                    </div>\r\n                                </div>\r\n                                <div id=\"cloud-right-pane\" className=\"col-lg-4 col-md-4 col-sm-4\">\r\n                                    <div className=\"cloud-right-content\">\r\n                                        <div className=\"label-text\"> Size Range </div>\r\n                                        <div className=\"btn-size\">\r\n                                            \r\n                                            <ButtonComponent id=\"xSmallBtn\" cssClass='e-info' isPrimary={true} onClick={this.sliderPriceValue.bind(this, 1, 1, 10)}>XS</ButtonComponent>\r\n                                            \r\n                                            <ButtonComponent id=\"smallBtn\" cssClass='e-info' isPrimary={true} onClick={this.sliderPriceValue.bind(this, 1, 2, 10)}>S</ButtonComponent>\r\n                                            \r\n                                            <ButtonComponent id=\"mediumBtn\" cssClass='e-info' isPrimary={true} onClick={this.sliderPriceValue.bind(this, 4, 4, 300)}>M</ButtonComponent>\r\n                                            \r\n                                            <ButtonComponent id=\"largeBtn\" cssClass='e-info' isPrimary={true} onClick={this.sliderPriceValue.bind(this, 12, 6, 100)}>L</ButtonComponent>\r\n                                            \r\n                                            <ButtonComponent id=\"xLargeBtn\" cssClass='e-info' isPrimary={true} onClick={this.sliderPriceValue.bind(this, 8, 12, 300)}>XL</ButtonComponent>\r\n                                        </div>\r\n                                        <div className=\"label-text right-text\"> ESTIMATED PRICE </div>\r\n                                        <div id=\"cloud-slider-text\">\r\n                                            <span id=\"dollar\">$ </span>\r\n                                            <span id=\"value\"></span>\r\n                                            <span className=\"suffix\">/month</span>\r\n                                        </div>\r\n                                        <div className=\"discount\">\r\n                                            <div className=\"cloud-slider-right\">\r\n                                                \r\n                                                <CheckBoxComponent id=\"cPanel\" label='Not required cPanel included' checked={false} change={this.sliderValueChange.bind(this)}></CheckBoxComponent>\r\n                                            </div>\r\n                                            <div className=\"cloud-slider-right discount-pay\">\r\n                                                \r\n                                                <CheckBoxComponent id=\"discount\" label='12 Months <span class = \"offer\" > Save 25%.</span> Pay Monthly' checked={false} ref={(scope) => { this.checkboxObj = scope; }} change={this.sliderValueChange.bind(this)}></CheckBoxComponent>\r\n                                            </div>\r\n                                        </div>\r\n                                        \r\n                                        <div className=\"slider-button\">\r\n                                            <ButtonComponent className=\"dlgbtn\" id=\"btn\" isPrimary={true} onClick={this.btnClick.bind(this)} ref={(button) => { this.buttonObj = button; }}>Signup Now!</ButtonComponent>\r\n                                        </div>\r\n                                        <div id=\"dialogWrapper\" className=\"cloud-content-wrapper\">\r\n                                            \r\n                                            <DialogComponent id=\"alertDialog\" animationSettings={this.animationSettings} width='360px' content={this.content} ref={(alertdialog) => { this.alertDialogObj = alertdialog; }} showCloseIcon={false} target={this.target} visible={false} buttons={this.buttons} closeOnEscape={false}></DialogComponent>\r\n                                        </div>\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Cloudpricing />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}