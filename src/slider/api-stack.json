{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SliderComponent, NumericTextBoxComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\r\nconst slidercss = `\r\n.content-wrapper {\r\n    width: 52%;\r\n    margin: 0 auto;\r\n    min-width: 185px;\r\n}\r\n\r\n.sliderwrap {\r\n    margin-top: 30px;\r\n}\r\n\r\n.sb-mobile-prop-pane #all-option-table #desktop-checkbox-row-1,\r\n.sb-mobile-prop-pane #all-option-table #desktop-checkbox-row-2 {\r\n    display: none;\r\n\r\n}\r\n\r\n.sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-1,\r\n.sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-2,\r\n.sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-3,\r\n.sb-mobile-prop-pane #all-option-table #mobile-checkbox-row-4 {\r\n    display: table-row;\r\n\r\n}\r\n\r\n#all-option-table #mobile-checkbox-row-1,\r\n#all-option-table #mobile-checkbox-row-2,\r\n#all-option-table #mobile-checkbox-row-3,\r\n#all-option-table #mobile-checkbox-row-4 {\r\n    display: none;\r\n\r\n}\r\n\r\n#all-option-table .property-panel-section .property-panel-content table#property tr {\r\n    height: 50px;\r\n}\r\n\r\n#all-option-sample .e-slider-container.e-horizontal {\r\n    margin-top: 160px;\r\n}\r\n\r\n#all-option-sample .e-slider-container.e-vertical {\r\n    margin-left: 40%;\r\n}\r\n\r\n#all-option-sample.content-wrapper {\r\n    height: 363px;\r\n    width: 50%;\r\n    margin: 0 auto;\r\n    min-width: 185px;\r\n}\r\n\r\n.sliderwrap {\r\n    height: 340px;\r\n}\r\n\r\n.e-bigger .content-wrapper {\r\n    width: 50%;\r\n}\r\n\r\n.sliderwrap label {\r\n    padding-bottom: 26px;\r\n    font-size: 13px;\r\n    font-weight: 500;\r\n    margin-top: 15px;\r\n    text-align: left;\r\n    width: 100%;\r\n}\r\n\r\n.userselect {\r\n    -webkit-user-select: none;\r\n    /* Safari 3.1+ */\r\n    -moz-user-select: none;\r\n    /* Firefox 2+ */\r\n    -ms-user-select: none;\r\n    /* IE 10+ */\r\n    user-select: none;\r\n    /* Standard syntax */\r\n}\r\n`;\r\nexport class APIs extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.tooltip = { placement: 'Before', isVisible: true, showOn: 'Focus' };\r\n        this.ticks = { placement: 'Before', largeStep: 20 };\r\n        this.tooltipplacement = [{ text: 'Before', value: 'Before' }, { text: 'After', value: 'After' }];\r\n        this.ticksplacement = [{ text: 'Before', value: 'Before' }, { text: 'After', value: 'After' }, { text: 'Both', value: 'Both' }, { text: 'None', value: 'None' }];\r\n        this.fields = { value: 'value', text: 'text' };\r\n    }\r\n    onValueChange(args) {\r\n        this.defaultObj.value = args.value;\r\n    }\r\n    onMinChange(args) {\r\n        this.defaultObj.min = args.value;\r\n    }\r\n    onMaxChange(args) {\r\n        this.defaultObj.max = args.value;\r\n    }\r\n    onStepChange(args) {\r\n        this.defaultObj.step = args.value;\r\n    }\r\n    onChange(args) {\r\n        this.defaultObj.tooltip.isVisible = args.checked;\r\n    }\r\n    onOrientationChange(args) {\r\n        args.checked ? this.defaultObj.orientation = 'Vertical' : this.defaultObj.orientation = 'Horizontal';\r\n    }\r\n    onReadonlyChange(args) {\r\n        this.defaultObj.readonly = args.checked;\r\n    }\r\n    onDisableChange(args) {\r\n        this.defaultObj.enabled = !args.checked;\r\n    }\r\n    onTicksChange(args) {\r\n        this.defaultObj.ticks = { placement: args.value };\r\n    }\r\n    onTooltipChange(args) {\r\n        this.defaultObj.tooltip = { placement: args.value };\r\n    }\r\n    onButtonChange(args) {\r\n        args.checked ? this.defaultObj.showButtons = true : this.defaultObj.showButtons = false;\r\n    }\r\n    refreshTooltip(e) {\r\n        if (this.defaultObj) {\r\n            this.defaultObj.refreshTooltip(this.defaultObj.tooltipTarget);\r\n        }\r\n    }\r\n    sliderChange(args) {\r\n        this.numbericValue.value = args.value;\r\n    }\r\n    render() {\r\n        if (!isNullOrUndefined(document.getElementById('right-pane'))) {\r\n            document.getElementById('right-pane').addEventListener('scroll', this.refreshTooltip.bind(this));\r\n        }\r\n        return (<div className='control-pane'>\r\n                <style>{slidercss}</style>\r\n                <div className='control-section'>\r\n                    <div className='col-lg-8'>\r\n                        <div className=\"content-wrapper\" id=\"all-option-sample\">\r\n                            <div className='sliderwrap'>\r\n                                <SliderComponent id='slider' value={30} min={0} max={100} change={this.sliderChange.bind(this)} ticks={this.ticks} tooltip={this.tooltip} type='MinRange' ref={(slider) => { this.defaultObj = slider; }}/>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                    <div id=\"all-option-table\" className=\"col-lg-4 property-section\">\r\n                        <PropertyPane title='Properties'>\r\n                            <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: \"100%\" }}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style={{ width: '50%' }}>\r\n                                            <div className=\"userselect\">Value</div>\r\n                                        </td>\r\n                                        <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                            <div>\r\n                                                <NumericTextBoxComponent value={30} format='n0' change={this.onValueChange.bind(this)} ref={(value) => { this.numbericValue = value; }}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: '50%' }}>\r\n                                            <div className=\"userselect\">Min</div>\r\n                                        </td>\r\n                                        <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                            <div>\r\n                                                <NumericTextBoxComponent value={0} format='n0' change={this.onMinChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: '50%' }}>\r\n                                            <div className=\"userselect\">Max</div>\r\n                                        </td>\r\n                                        <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                            <div>\r\n                                                <NumericTextBoxComponent value={100} format='n0' change={this.onMaxChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: '50%' }}>\r\n                                            <div className=\"userselect\">Step</div>\r\n                                        </td>\r\n                                        <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                            <div>\r\n                                                <NumericTextBoxComponent value={1} change={this.onStepChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr id=\"desktop-checkbox-row-1\">\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>\r\n                                                <CheckBoxComponent id=\"button\" label={\"Show Buttons\"} checked={false} change={this.onButtonChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                            <div style={{ paddingLeft: \"0\", paddingTop: \"10\" }}>\r\n                                                <CheckBoxComponent id=\"disabled\" label={\"Disable\"} checked={false} change={this.onDisableChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr id=\"desktop-checkbox-row-2\">\r\n                                        <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                            <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                                <CheckBoxComponent id=\"readOnly\" label={\"Read Only\"} checked={false} change={this.onReadonlyChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>\r\n                                                <CheckBoxComponent id=\"orientation\" label={\"Vertical Orientation\"} checked={false} change={this.onOrientationChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr id=\"mobile-checkbox-row-1\">\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>Show Buttons\r\n                                            </div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                            <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                                <CheckBoxComponent id=\"mb-button\" checked={false} change={this.onButtonChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr id=\"mobile-checkbox-row-2\">\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>Disabled\r\n                                            </div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                            <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                                <CheckBoxComponent id=\"mb-disabled\" checked={false} change={this.onDisableChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr id=\"mobile-checkbox-row-3\">\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>Vertical Orientation\r\n                                            </div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                            <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                                <CheckBoxComponent id=\"mb-orientation\" checked={false} change={this.onOrientationChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n\r\n                                    <tr id=\"mobile-checkbox-row-4\">\r\n                                        <td style={{ width: \"50%\" }}>\r\n                                            <div className=\"userselect\" style={{ paddingLeft: \"0\" }}>Readonly\r\n                                            </div>\r\n                                        </td>\r\n                                        <td style={{ width: \"50%\", paddingRight: '10px' }}>\r\n                                            <div style={{ paddingLeft: \"0\", paddingTop: \"0\" }}>\r\n                                                <CheckBoxComponent id=\"mb-readOnly\" checked={false} change={this.onReadonlyChange.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<APIs />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}