{"index.css":"/* css */","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SliderComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { SampleBase } from './sample-base';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nimport { PropertyPane } from './property-pane';\r\nimport { isNullOrUndefined } from '@syncfusion/ej2-base';\r\nconst slidercss = `\r\n.content-wrapper {\r\n    width: 80%;\r\n    margin: 0 auto;\r\n    min-width: 185px;\r\n}\r\n\r\n.sliderwrap {\r\n    height: 375px;\r\n    margin-top: 10px;\r\n    width: 60%;\r\n    margin: auto;\r\n}\r\n\r\n.e-bigger .content-wrapper {\r\n    width: 80%;\r\n}\r\n\r\n.sliderwrap .e-lbl {\r\n    display: block;\r\n    font-size: 11px;\r\n    font-weight: 500;\r\n    margin-top: 15px;\r\n    margin-left: -10px;\r\n}\r\n\r\n.sliderwrap:last-child .e-lbl {\r\n    margin-left: -2px;\r\n}\r\n\r\n.slider_table td {\r\n    text-align: center;\r\n}\r\n\r\n.slider_table {\r\n    border: 0;\r\n    width: 100%\r\n}\r\n`;\r\nexport class Orientation extends SampleBase {\r\n    // Checkbox change handlers\r\n    enableDisableTicks(args) {\r\n        this.ticks = { placement: args.checked ? 'Before' : 'None', largeStep: 20, smallStep: 5, showSmallTicks: true };\r\n        for (let slider of [this.defaultObj, this.minRangeObj, this.rangeObj]) {\r\n            // Assigning ticks values to each slider\r\n            slider.ticks = this.ticks;\r\n        }\r\n    }\r\n    enableDisableTooltip(args) {\r\n        this.tooltip = { isVisible: args.checked, placement: 'Before' };\r\n        for (let slider of [this.defaultObj, this.minRangeObj, this.rangeObj]) {\r\n            // Assigning tooltip values to each slider\r\n            slider.tooltip = this.tooltip;\r\n        }\r\n    }\r\n    refreshTooltip(e) {\r\n        if (this.defaultObj && this.rangeObj && this.minRangeObj) {\r\n            this.defaultObj.refreshTooltip(this.defaultObj.tooltipTarget);\r\n            this.minRangeObj.refreshTooltip(this.minRangeObj.tooltipTarget);\r\n            this.rangeObj.refreshTooltip(this.rangeObj.tooltipTarget);\r\n        }\r\n    }\r\n    render() {\r\n        if (!isNullOrUndefined(document.getElementById('right-pane'))) {\r\n            document.getElementById('right-pane').addEventListener('scroll', this.refreshTooltip.bind(this));\r\n        }\r\n        return (<div className='control-pane' style={{ overflow: 'hidden' }}>\r\n                <style>{slidercss}</style>\r\n                <div className='control-section'>\r\n                    <div className='col-lg-8'>\r\n                        <div className=\"content-wrapper\">\r\n                            <table className=\"slider_table\">\r\n                                <tbody><tr>\r\n                                    <td>\r\n                                        <div className=\"sliderwrap\">\r\n                                            \r\n                                            <SliderComponent id={\"slider01\"} value={30} orientation='Vertical' ref={(slider) => { this.defaultObj = slider; }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"sliderwrap\">\r\n                                            \r\n                                            <SliderComponent id={\"slider02\"} value={30} type='MinRange' orientation='Vertical' ref={(slider) => { this.minRangeObj = slider; }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                    <td>\r\n                                        <div className=\"sliderwrap\">\r\n                                            \r\n                                            <SliderComponent id={\"slider03\"} value={[30, 70]} type='Range' orientation='Vertical' ref={(slider) => { this.rangeObj = slider; }}/>\r\n                                        </div>\r\n                                    </td>\r\n                                </tr>\r\n                                </tbody></table>\r\n                        </div>\r\n                    </div>\r\n\r\n                    <div id=\"slider_event\" className=\"col-lg-4 property-section\">\r\n                        <PropertyPane title='Properties'>\r\n                            <table id=\"property\" title=\"Properties\" className='property-panel-table' style={{ width: '100%' }}>\r\n                                <tbody>\r\n                                    <tr>\r\n                                        <td style={{ width: '50%', paddingTop: '10px' }}>\r\n                                            <div className=\"userselect\">Ticks</div>\r\n                                        </td>\r\n                                        <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                            <div>\r\n                                                \r\n                                                <CheckBoxComponent checked={false} change={this.enableDisableTicks.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                        <td style={{ width: '50%', paddingTop: '10px' }}>\r\n                                            <div className=\"userselect\">Tooltip</div>\r\n                                        </td>\r\n                                        <td style={{ width: '50%', paddingRight: '10px' }}>\r\n                                            <div style={{ paddingleft: 0, paddingtop: 0 }}>\r\n                                                \r\n                                                <CheckBoxComponent checked={false} change={this.enableDisableTooltip.bind(this)}/>\r\n                                            </div>\r\n                                        </td>\r\n                                    </tr>\r\n                                </tbody>\r\n                            </table>\r\n                        </PropertyPane>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<Orientation />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}