{"index.css":".control_wrapper .imagepreview{\r\n    max-width: 505px;\r\n    margin: auto;\r\n}\r\n.imagepreview .e-file-select-wrap {\r\n    display: none;\r\n}\r\n.imagepreview .e-upload {\r\n    border: none;\r\n    margin-top: 10px;\r\n    width: 100%;\r\n}\r\n.imagepreview #dropimage {\r\n    font-size: 14px;\r\n}\r\n.e-bigger .imagepreview #dropimage {\r\n    font-size: 15px;\r\n}\r\n.control-pane #uploadpreview {\r\n    overflow: initial;\r\n}\r\n.imagepreview #dropArea {\r\n    border: 1px dashed #c3c3cc;\r\n    position: relative;\r\n    text-align: center;\r\n    padding-top: 20px;\r\n    display: block;\r\n    width: 100%;\r\n    overflow: hidden;\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files {\r\n    text-align: initial;\r\n    border-top: none;\r\n}\r\n.imagepreview #dropArea .e-upload-files .e-file-delete-btn.e-icons,\r\n.imagepreview #dropArea .e-upload-files .e-file-remove-btn.e-icons {\r\n    top: 120px;\r\n    background-color: white;\r\n    border-radius: 50%;\r\n    font-size: 12px;\r\n    left: 80px;\r\n}\r\n.imagepreview #dropArea .e-upload-files li .e-file-remove-btn.e-icons.e-upload-icon {\r\n    font-size: 14px;\r\n    left: 20px;\r\n}\r\n.imagepreview #dropArea .e-upload-files li:hover .e-icons {\r\n    visibility: visible;\r\n}\r\n.imagepreview #dropArea .e-upload-files li .e-icons {\r\n    visibility: hidden;\r\n}\r\n@font-face {\r\n    font-family: 'Uploader_Icon';\r\n    src:\r\n    url(data:application/x-font-ttf;charset=utf-8;base64,AAEAAAAKAIAAAwAgT1MvMj1tSfIAAAEoAAAAVmNtYXDnEOdVAAABiAAAADZnbHlmoZcPvgAAAcgAAABAaGVhZBLQTSUAAADQAAAANmhoZWEINQQDAAAArAAAACRobXR4CAAAAAAAAYAAAAAIbG9jYQAgAAAAAAHAAAAABm1heHABDgAdAAABCAAAACBuYW1lQySinQAAAggAAAIxcG9zdLfl0usAAAQ8AAAAMgABAAAEAAAAAFwEAAAAAAAD2AABAAAAAAAAAAAAAAAAAAAAAgABAAAAAQAA2vKJUF8PPPUACwQAAAAAANftBBgAAAAA1+0EGAAAAAAD2AP4AAAACAACAAAAAAAAAAEAAAACABEAAgAAAAAAAgAAAAoACgAAAP8AAAAAAAAAAQQAAZAABQAAAokCzAAAAI8CiQLMAAAB6wAyAQgAAAIABQMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAUGZFZABA5wDnAAQAAAAAXAQAAAAAAAABAAAAAAAABAAAAAQAAAAAAAACAAAAAwAAABQAAwABAAAAFAAEACIAAAAEAAQAAQAA5wD//wAA5wD//wAAAAEABAAAAAEAAAAAAAAAIAAAAAIAAAAAA9gD+AAHABAAADchESMVITUjEzM3ETMRFzMBKAOwPvzMPp1mtUC1Zv7FCAF6vb0BO7X+EAHwtQE7AAAAABIA3gABAAAAAAAAAAEAAAABAAAAAAABAAgAAQABAAAAAAACAAcACQABAAAAAAADAAgAEAABAAAAAAAEAAgAGAABAAAAAAAFAAsAIAABAAAAAAAGAAgAKwABAAAAAAAKACwAMwABAAAAAAALABIAXwADAAEECQAAAAIAcQADAAEECQABABAAcwADAAEECQACAA4AgwADAAEECQADABAAkQADAAEECQAEABAAoQADAAEECQAFABYAsQADAAEECQAGABAAxwADAAEECQAKAFgA1wADAAEECQALACQBLyBVcGxvYWRlclJlZ3VsYXJVcGxvYWRlclVwbG9hZGVyVmVyc2lvbiAxLjBVcGxvYWRlckZvbnQgZ2VuZXJhdGVkIHVzaW5nIFN5bmNmdXNpb24gTWV0cm8gU3R1ZGlvd3d3LnN5bmNmdXNpb24uY29tACAAVQBwAGwAbwBhAGQAZQByAFIAZQBnAHUAbABhAHIAVQBwAGwAbwBhAGQAZQByAFUAcABsAG8AYQBkAGUAcgBWAGUAcgBzAGkAbwBuACAAMQAuADAAVQBwAGwAbwBhAGQAZQByAEYAbwBuAHQAIABnAGUAbgBlAHIAYQB0AGUAZAAgAHUAcwBpAG4AZwAgAFMAeQBuAGMAZgB1AHMAaQBvAG4AIABNAGUAdAByAG8AIABTAHQAdQBkAGkAbwB3AHcAdwAuAHMAeQBuAGMAZgB1AHMAaQBvAG4ALgBjAG8AbQAAAAACAAAAAAAAAAoAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIBAgEDAAhVcGxvYWRlcgAAAAA=) format('truetype');\r\n    font-weight: normal;\r\n    font-style: normal;\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon{\r\n    font-family: 'Uploader_Icon';\r\n    speak: none;\r\n    font-size: 16px;\r\n    left: 20px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-variant: normal;\r\n    text-transform: none;\r\n    line-height: 1;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons.e-upload-icon::before{\r\n    content: '\\e700';\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files .e-icons:not(.e-uploaded):hover{\r\n    background-color: #e6e6e6;\r\n    border-color: #adadad;\r\n    color: #333;\r\n}\r\n.highcontrast .imagepreview #dropArea .e-upload-files .e-file-remove-btn.e-icons,\r\n.highcontrast .imagepreview #dropArea .e-upload-files .e-file-delete-btn.e-icons {\r\n    background-color: #ffd939;\r\n}\r\n.highcontrast .imagepreview #dropArea .e-upload .e-upload-files .e-file-delete-btn.e-icons::before,\r\n.highcontrast .imagepreview #dropArea .e-upload .e-upload-files .e-file-remove-btn.e-icons::before{\r\n    color: black;\r\n}\r\n.imagepreview #dropArea .e-upload .e-upload-files .e-upload-file-list {\r\n    border: 0;\r\n    display: inline-block;\r\n    width: 165px;\r\n}\r\n.imagepreview .upload-image {\r\n    width: 150px;\r\n    height: 150px;\r\n    display: inline-flex;\r\n    background-size: contain;\r\n    margin: 7px;\r\n    text-align: center;\r\n    line-height: 10;\r\n    border-radius: 5px;\r\n}\r\n.imagepreview .upload-image:after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 6px;\r\n    left: 6px;\r\n    width: inherit;\r\n    height: inherit;\r\n    background: lightgray url('http://via.placeholder.com/300?text=Loading...') no-repeat center;\r\n    color: transparent;\r\n    border-radius: 5px;\r\n}\r\n.highcontrast .imagepreview div.file-name {\r\n    color: white;\r\n}\r\n.imagepreview div.file-name {\r\n    color: rgba(0, 0, 0, 0.87);\r\n    font-size: 14px;\r\n    padding: 3px 10px;\r\n    overflow: hidden;\r\n    text-overflow: ellipsis;\r\n    width: 90%;\r\n    white-space: nowrap;\r\n}\r\n.highcontrast .imagepreview div.file-size {\r\n    color: white;\r\n}\r\n.imagepreview div.file-size {\r\n    font-size: 13px;\r\n    padding: 3px 10px;\r\n    overflow: hidden;\r\n}\r\n.imagepreview .progressbar {\r\n    background: #ff4081;\r\n    border: none;\r\n    border-radius: 10px;\r\n    height: 4px;\r\n    margin-left: 7px;\r\n    width: 90%;\r\n    top: -60px;\r\n    position: relative;\r\n}\r\n.imagepreview #dropArea progress {\r\n    border: none;\r\n    background: #fff;\r\n    margin-left: 8px;\r\n}\r\n.highcontrast .imagepreview #dropArea progress {\r\n    border: none;\r\n    background: black;\r\n}\r\n.imagepreview progress::-webkit-progress-bar {\r\n    border: none;\r\n    background-color: #ffffff;\r\n}\r\n.highcontrast .imagepreview progress::-webkit-progress-bar {\r\n    border: none;\r\n    background-color: #000000;\r\n}\r\n.material .imagepreview progress::-webkit-progress-value {\r\n    border-radius: 2px; \r\n    background-color: #ff4081;\r\n}\r\n.bootstrap .imagepreview progress::-webkit-progress-value {\r\n    border-radius: 2px; \r\n    background-color: #1f496e;\r\n}\r\n.fabric .imagepreview progress::-webkit-progress-value {\r\n    background-color: #1763ff;\r\n    border-radius: 2px; \r\n    top: -66px;\r\n}\r\n.highcontrast .imagepreview progress::-webkit-progress-value {\r\n    background-color: #ffd939;\r\n    border-radius: 2px; \r\n}\r\n.material .imagepreview progress::-moz-progress-bar {\r\n    border-radius: 2px; \r\n    background-color: #ff4081;\r\n}\r\n.bootstrap .imagepreview progress::-moz-progress-bar {\r\n    border-radius: 2px; \r\n    background-color: #1f496e;\r\n}\r\n.fabric .imagepreview progress::-moz-progress-bar {\r\n    background-color: #1763ff;\r\n    border-radius: 2px; \r\n    top: -66px;\r\n}\r\n.highcontrast .imagepreview progress::-moz-progress-bar {\r\n    background-color: #ffd939;\r\n    border-radius: 2px; \r\n}\r\n.material .imagepreview #dropimage a {\r\n    color:#ff4081;\r\n}\r\n.fabric .imagepreview #dropimage a {\r\n    color: #1763ff;\r\n}\r\n.bootstrap .imagepreview #dropimage a {\r\n    color: #1f496e;\r\n}\r\n.highcontrast .imagepreview #dropimage a {\r\n    color: #ffd939;\r\n}\r\n@media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {\r\n\t.imagepreview .dropTarget .e-upload .e-upload-files .e-file-remove-btn.e-icons, .e-bigger .imagepreview .dropTarget .e-upload .e-upload-files .e-file-remove-btn.e-icons {\r\n\t   padding: 18px 25px 18px 12px;\r\n\t}\r\n}\r\n\r\n.panel-style {\r\n    padding-top: 25px;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { UploaderComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-react-popups';\r\nimport { detach, Browser, createElement, isNullOrUndefined, EventHandler } from '@syncfusion/ej2-base';\r\n\r\nexport class Preview extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        // Uploader component\r\n        this.filesDetails = [];\r\n        this.filesList = [];\r\n        this.filesName = [];\r\n        this.dropAreaEle = null;\r\n        this.dropContainerEle = null;\r\n        this.dropImageEle = null;\r\n        this.dropContainerRef = element => {\r\n            this.dropContainerEle = element;\r\n        };\r\n        this.dropAreaRef = element => {\r\n            this.dropAreaEle = element;\r\n        };\r\n        this.dropImageRef = element => {\r\n            this.dropImageEle = element;\r\n        };\r\n        this.asyncSettings = {\r\n            saveUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save',\r\n            removeUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove'\r\n        };\r\n        this.allowedExtensions = '.jpg,.png,.jpeg';\r\n    }\r\n    rendereComplete() {\r\n        this.dropArea = this.dropAreaEle;\r\n        this.dropElement = this.dropContainerEle;\r\n        if (Browser.isDevice) {\r\n            this.dropImageEle.style.padding = '0px 10%';\r\n        }\r\n        this.uploadObj.element.setAttribute('name', 'UploadFiles');\r\n        document.getElementById('browse').onclick = () => {\r\n            document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\r\n            return false;\r\n        };\r\n        document.getElementById('clearbtn').onclick = () => {\r\n            if (!this.dropElement.querySelector('ul')) {\r\n                return;\r\n            }\r\n            detach(this.dropElement.querySelector('ul'));\r\n            this.filesList = [];\r\n            this.filesDetails = [];\r\n            this.filesName = [];\r\n            if (this.dropArea.classList.contains('e-spinner-pane')) {\r\n                hideSpinner(this.dropArea);\r\n                detach(this.dropElement.querySelector('.e-spinner-pane'));\r\n            }\r\n        };\r\n        document.getElementById('uploadbtn').onclick = () => {\r\n            if (this.dropElement.querySelector('ul') && this.filesDetails.length > 0) {\r\n                this.uploadObj.upload(this.filesDetails, true);\r\n            }\r\n        };\r\n        this.uploadObj.dropArea = this.dropElement;\r\n        this.uploadObj.dataBind();\r\n    }\r\n    onSelect(args) {\r\n        if (!this.dropElement.querySelector('li')) {\r\n            this.filesDetails = [];\r\n        }\r\n        if (isNullOrUndefined(this.dropArea.querySelector('.e-upload-files'))) {\r\n            this.parentElement = createElement('ul', { className: 'e-upload-files' });\r\n            document.getElementsByClassName('e-upload')[0].appendChild(this.parentElement);\r\n        }\r\n        let validFiles = this.validateFiles(args, this.filesDetails);\r\n        if (validFiles.length === 0) {\r\n            args.cancel = true;\r\n            return;\r\n        }\r\n        for (let i = 0; i < validFiles.length; i++) {\r\n            this.formSelectedData(validFiles[i], this);\r\n        }\r\n        this.filesDetails = this.filesDetails.concat(validFiles);\r\n        args.cancel = true;\r\n    }\r\n    validateFiles(args, viewedFiles) {\r\n        let modifiedFiles = [];\r\n        let validFiles = [];\r\n        let isModified = false;\r\n        if (args.event.type === 'drop') {\r\n            isModified = true;\r\n            let allImages = ['png', 'jpg', 'jpeg'];\r\n            let files = args.filesData;\r\n            for (let file of files) {\r\n                if (allImages.indexOf(file.type) !== -1) {\r\n                    modifiedFiles.push(file);\r\n                }\r\n            }\r\n        }\r\n        let files = modifiedFiles.length > 0 || isModified ? modifiedFiles : args.filesData;\r\n        if (this.filesName.length > 0) {\r\n            for (let file of files) {\r\n                if (this.filesName.indexOf(file.name) === -1) {\r\n                    this.filesName.push(file.name);\r\n                    validFiles.push(file);\r\n                }\r\n            }\r\n        }\r\n        else {\r\n            for (let file of files) {\r\n                this.filesName.push(file.name);\r\n                validFiles.push(file);\r\n            }\r\n        }\r\n        return validFiles;\r\n    }\r\n    formSelectedData(file, proxy) {\r\n        let liEle = createElement('li', { className: 'e-upload-file-list', attrs: { 'data-file-name': file.name } });\r\n        let imageTag = createElement('IMG', { className: 'upload-image', attrs: { 'alt': 'Image' } });\r\n        let wrapper = createElement('span', { className: 'wrapper' });\r\n        wrapper.appendChild(imageTag);\r\n        liEle.appendChild(wrapper);\r\n        liEle.appendChild(createElement('div', { className: 'file-name', innerHTML: file.name, attrs: { 'title': file.name } }));\r\n        liEle.appendChild(createElement('div', { className: 'file-size', innerHTML: proxy.uploadObj.bytesToSize(file.size) }));\r\n        let clearbtn;\r\n        let uploadbtn;\r\n        clearbtn = createElement('span', { id: 'removeIcon', className: 'e-icons e-file-remove-btn', attrs: { 'title': 'Remove' } });\r\n        EventHandler.add(clearbtn, 'click', this.removeFiles, proxy);\r\n        liEle.setAttribute('title', 'Ready to Upload');\r\n        uploadbtn = createElement('span', { className: 'e-upload-icon e-icons e-file-remove-btn', attrs: { 'title': 'Upload' } });\r\n        uploadbtn.setAttribute('id', 'iconUpload');\r\n        EventHandler.add(uploadbtn, 'click', this.uploadFile, proxy);\r\n        let progressbarContainer;\r\n        progressbarContainer = createElement('progress', { className: 'progressbar', id: 'progressBar', attrs: { value: '0', max: '100' } });\r\n        liEle.appendChild(clearbtn);\r\n        liEle.appendChild(uploadbtn);\r\n        liEle.appendChild(progressbarContainer);\r\n        this.readURL(liEle, file);\r\n        document.querySelector('.e-upload-files').appendChild(liEle);\r\n        proxy.filesList.push(liEle);\r\n    }\r\n    uploadFile(args) {\r\n        this.uploadObj.upload([this.filesDetails[this.filesList.indexOf(args.currentTarget.parentElement)]], true);\r\n    }\r\n    removeFiles(args) {\r\n        let removeFile = this.filesDetails[this.filesList.indexOf(args.currentTarget.parentElement)];\r\n        let statusCode = removeFile.statusCode;\r\n        if (statusCode === '2' || statusCode === '1') {\r\n            this.uploadObj.remove(removeFile, true);\r\n            this.uploadObj.element.value = '';\r\n        }\r\n        let index = this.filesList.indexOf(args.currentTarget.parentElement);\r\n        this.filesList.splice(index, 1);\r\n        this.filesDetails.splice(index, 1);\r\n        this.filesName.splice(this.filesName.indexOf(removeFile.name), 1);\r\n        if (statusCode !== '2') {\r\n            detach(args.currentTarget.parentElement);\r\n        }\r\n    }\r\n    onFileUpload(args) {\r\n        let li = this.dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n        let iconEle = li.querySelector('#iconUpload');\r\n        iconEle.style.cursor = 'not-allowed';\r\n        iconEle.classList.add('e-uploaded');\r\n        EventHandler.remove(li.querySelector('#iconUpload'), 'click', this.uploadFile);\r\n        let progressValue = Math.round((args.e.loaded / args.e.total) * 100);\r\n        if (!isNaN(progressValue) && li.querySelector('.progressbar')) {\r\n            li.getElementsByTagName('progress')[0].value = progressValue;\r\n        }\r\n    }\r\n    onUploadSuccess(args) {\r\n        let spinnerElement = document.getElementById('dropArea');\r\n        let li = this.dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n        if (li && !isNullOrUndefined(li.querySelector('.progressbar'))) {\r\n            li.querySelector('.progressbar').style.visibility = 'hidden';\r\n        }\r\n        if (args.operation === 'upload') {\r\n            EventHandler.remove(li.querySelector('#iconUpload'), 'click', this.uploadFile);\r\n            li.querySelector('.file-name').style.color = 'green';\r\n            li.querySelector('.e-icons').onclick = () => {\r\n                this.generateSpinner(this.dropArea);\r\n            };\r\n        }\r\n        else {\r\n            detach(li);\r\n            hideSpinner(spinnerElement);\r\n            detach(spinnerElement.querySelector('.e-spinner-pane'));\r\n        }\r\n        if (!isNullOrUndefined(li)) {\r\n            li.setAttribute('title', args.e.currentTarget.statusText);\r\n        }\r\n    }\r\n    generateSpinner(targetElement) {\r\n        createSpinner({ target: targetElement, width: '25px' });\r\n        showSpinner(targetElement);\r\n    }\r\n    onUploadFailed(args) {\r\n        let li = this.dropArea.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n        li.querySelector('.file-name').style.color = 'red';\r\n        li.setAttribute('title', args.e.currentTarget.statusText);\r\n        if (args.operation === 'upload') {\r\n            EventHandler.remove(li.querySelector('#iconUpload'), 'click', this.uploadFile);\r\n            li.querySelector('.progressbar').style.visibility = 'hidden';\r\n        }\r\n    }\r\n    readURL(li, args) {\r\n        let preview = li.querySelector('.upload-image');\r\n        let file = args.rawFile;\r\n        let reader = new FileReader();\r\n        reader.addEventListener('load', () => { preview.src = reader.result; }, false);\r\n        if (file) {\r\n            reader.readAsDataURL(file);\r\n        }\r\n    }\r\n    onRemoveFile(args) {\r\n        args.postRawFile = false;\r\n    }\r\n    render() {\r\n        return (<div className='control-pane' ref={this.dropContainerRef}>\r\n\t\t\t<div className='control-section' id='uploadpreview'>\r\n\t\t\t\t<div className='col-lg-9'>\r\n\t\t\t\t\t<div className='imagepreview'>\r\n\t\t\t\t\t\t<div id='dropArea' ref={this.dropAreaRef} className='dropTarget'>\r\n\t\t\t\t\t\t\t<span id='dropimage' ref={this.dropImageRef} className='file-name-drop'> Drop image (JPG, PNG) files here or <a href=\"\" id='browse'><u>Browse</u></a> </span>\r\n                            <UploaderComponent id='previewfileupload' type='file' ref={upload => this.uploadObj = upload} asyncSettings={this.asyncSettings} success={this.onUploadSuccess.bind(this)} selected={this.onSelect.bind(this)} removing={this.onRemoveFile.bind(this)} progress={this.onFileUpload.bind(this)} failure={this.onUploadFailed.bind(this)} allowedExtensions={this.allowedExtensions}></UploaderComponent>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='property-section uploader-panel col-lg-3'>\r\n\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t<div className='panel-style'>\r\n\t\t\t\t\t\t\t<button className=\"e-btn e-css\" id=\"clearbtn\" title=\"Clear All\">Clear All</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t<div className='panel-style'>\r\n\t\t\t\t\t\t\t<button className=\"e-btn e-css\" id=\"uploadbtn\" title=\"Upload All\">Upload All</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n      </div>);\r\n    }\r\n}\r\n\nrender(<Preview />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}