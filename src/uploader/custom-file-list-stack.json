{"index.css":".dropArea {\r\n    min-height: 50px;\r\n    padding-top: 15px;\r\n    position: relative;\r\n}\r\n\r\n.drop {\r\n    padding: 3% 30% 3%;\r\n    display: inherit;\r\n    border: 1px dashed #c3c3cc;\r\n}\r\n\r\n.template_wrapper {\r\n    max-width: 400px;\r\n    margin: auto;\r\n}\r\n\r\n.template_wrapper .file-name-span {\r\n    font-size:  14px;\r\n}\r\n\r\n\r\n.e-bigger .template_wrapper .file-name-span {\r\n    font-size:  15px;\r\n}\r\n\r\n.template_wrapper .e-file-select-wrap {\r\n    display: none;\r\n}\r\n\r\n.template_wrapper .e-upload {\r\n    float: none;\r\n    border: none;\r\n}\r\n\r\n.template_wrapper .ul-element {\r\n    list-style: none;\r\n    width: 100%;\r\n    padding-left: 0;\r\n}\r\n\r\n.template_wrapper .file-name {\r\n    padding: 8px 6px 8px 0;\r\n    font-size: 13px;\r\n    width: 46%;\r\n    display: inline-block;\r\n    position: relative;\r\n    top: 4px;\r\n}\r\n\r\n.property-section.template-panel .property-panel-section {\r\n    position: relative;\r\n    padding-left: 30px;\r\n}\r\n.e-bigger .property-section.template-panel .property-panel-section {\r\n     padding-left: 35px;\r\n}\r\n.template_wrapper .file-size {\r\n    padding: 4px;\r\n    font-size: 13px;\r\n    width: 18%;\r\n    display: inline-block;\r\n    position: relative;\r\n}\r\n\r\n.template_wrapper .file-lists {\r\n    border: 1px solid lightgray;\r\n    padding: 0 6px 0 14px;\r\n    margin-top: 15px;\r\n    position: relative;\r\n    background: rgba(0, 0, 0, 0.04);\r\n}\r\n\r\n.template_wrapper .file-size,.template_wrapper .file-name {\r\n    font-family: \"Helvetica Neue\", \"Helvetica\", \"Arial\", \"sans-serif\";\r\n    text-overflow: ellipsis;\r\n    overflow: hidden;\r\n    white-space: nowrap\r\n}\r\n.template_wrapper span.progress-bar-container {\r\n    display: block;\r\n    float: right;\r\n    height: 20px;\r\n    right: 13%;\r\n    top: 14px;\r\n    position: relative;\r\n    width: 20%;\r\n}\r\n\r\n.template_wrapper .progress{\r\n    width: 100%;\r\n    height: 15px;\r\n    -webkit-appearance: none;\r\n}\r\n\r\n.template_wrapper .close-icon-container\r\n{\r\n    cursor: pointer;\r\n    font-size: 11px;\r\n    height: 26px;\r\n    margin: 0 12px 0 22px;\r\n    padding: 0;\r\n    position: absolute;\r\n    right: 0;\r\n    width: 26px;\r\n    top: 6px;\r\n}\r\n\r\n.template_wrapper .close-icon-container.e-icons::before {\r\n    left: 7px;\r\n    position: inherit;\r\n    top: 7px;\r\n    content: '\\e932';\r\n}\r\n\r\n.bootstrap4 .template_wrapper .close-icon-container.e-icons::before {\r\n    left: 7px;\r\n    position: inherit;\r\n    top: 7px;\r\n    content: '\\e745';\r\n}\r\n.bootstrap4 .template_wrapper .file-lists {\r\n    background: #fff;\r\n}\r\n\r\n\r\n.template_wrapper .close-icon-container.delete-icon::before {\r\n    content: '\\e94a';\r\n}\r\n\r\n.bootstrap4 .template_wrapper .close-icon-container.delete-icon::before {\r\n    content: '\\e773';\r\n}\r\n\r\n\r\n.template_wrapper .close-icon-container:hover {\r\n    background-color: rgba(0, 0, 0, 0.12);\r\n    border-color: transparent;\r\n    border-radius: 50%;\r\n    box-shadow: 0 0 0 transparent;\r\n}\r\n\r\n.bootstrap4 .template_wrapper .close-icon-container:hover {\r\n    background-color: #e9ecef;\r\n    border-color: transparent;\r\n    border-radius: 4px;\r\n    box-shadow: 0 0 0 transparent;\r\n}\r\n\r\n\r\n.highcontrast .close-icon-container:hover {\r\n    background-color: #ffd939;\r\n    color: black;\r\n}\r\n\r\n.highcontrast .close-icon-container {\r\n    color: #ffffff;\r\n}\r\n\r\n.template_wrapper .upload-success {\r\n    color: #2bc700;\r\n}\r\n\r\n.template_wrapper .upload-fails {\r\n    color: #f44336;\r\n}\r\n\r\n.template_wrapper progress::-webkit-progress-bar {\r\n    border: 1px solid lightgrey;\r\n    background-color: #ffffff;\r\n    border-radius: 2px;\r\n}\r\n.bootstrap4 .template_wrapper progress::-webkit-progress-value {\r\n    background-color: #007bff;\r\n    border-radius: 4px; \r\n}\r\n\r\n#dropArea progress {\r\n    border: 1px solid lightgrey;\r\n    background-color: #ffffff;\r\n    border-radius: 2px;\r\n}\r\n.bootstrap4 #dropArea progress {\r\n    background-color: #dee2e6;\r\n    border-radius: 4px;\r\n}\r\n\r\n.highcontrast #dropArea progress {\r\n    background-color: #000000;\r\n}\r\n.highcontrast .template_wrapper progress::-webkit-progress-bar {\r\n    background-color: #000000;\r\n}\r\n.material .template_wrapper progress::-webkit-progress-value {\r\n    border-radius: 2px; \r\n    background-color: #ff4081;\r\n}\r\n.bootstrap .template_wrapper progress::-webkit-progress-value {\r\n    border-radius: 2px; \r\n    background-color: #1f496e;\r\n}\r\n.fabric .template_wrapper progress::-webkit-progress-value {\r\n    background-color: #1763ff;\r\n    border-radius: 2px; \r\n    top: -66px;\r\n}\r\n.highcontrast .template_wrapper progress::-webkit-progress-value {\r\n    background-color: #ffd939;\r\n    border-radius: 2px; \r\n}\r\n.material .template_wrapper progress::-moz-progress-bar {\r\n    border-radius: 2px; \r\n    background-color: #ff4081;\r\n}\r\n.bootstrap .template_wrapper progress::-moz-progress-bar {\r\n    border-radius: 2px; \r\n    background-color: #1f496e;\r\n}\r\n.fabric .template_wrapper progress::-moz-progress-bar {\r\n    background-color: #1763ff;\r\n    border-radius: 2px; \r\n    top: -66px;\r\n}\r\n.highcontrast .template_wrapper progress::-moz-progress-bar {\r\n    background-color: #ffd939;\r\n    border-radius: 2px; \r\n}\r\n.material .template_wrapper span a {\r\n    color:#ff4081;\r\n}\r\n.fabric .template_wrapper span a {\r\n    color: #1763ff;\r\n}\r\n.bootstrap .template_wrapper span a {\r\n    color: #1f496e;\r\n}\r\n.highcontrast .template_wrapper span a,\r\n.highcontrast .template_wrapper span a:hover {\r\n    color: #ffd939;\r\n}\r\n\r\n.custom-panel {\r\n    padding-top: 25px;\r\n}","property-pane.js":"import * as React from 'react';\r\nexport class PropertyPane extends React.Component {\r\n    render() {\r\n        return (<div className='property-panel-section'>\r\n                <div className=\"property-panel-header\">\r\n                    {this.props.title}\r\n                </div>\r\n                <div className=\"property-panel-content\">\r\n                    {this.props.children}\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\nimport * as React from 'react';\r\nimport { SampleBase } from './sample-base';\r\nimport { PropertyPane } from './property-pane';\r\nimport { UploaderComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { createSpinner, showSpinner, hideSpinner } from '@syncfusion/ej2-popups';\r\nimport { detach, isNullOrUndefined, createElement, EventHandler, Browser } from '@syncfusion/ej2-base';\r\n\r\nexport class CustomTemplate extends SampleBase {\r\n    constructor(props) {\r\n        super(props);\r\n        this.filesDetails = [];\r\n        this.filesList = [];\r\n        this.removeFiles = this.removeFiles.bind(this);\r\n        this.dropAreaEle = null;\r\n        this.dropContainerEle = null;\r\n        this.dropRef = element => {\r\n            this.dropAreaEle = element;\r\n        };\r\n        this.dropContainerRef = element => {\r\n            this.dropContainerEle = element;\r\n        };\r\n        this.asyncSettings = {\r\n            saveUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Save',\r\n            removeUrl: 'https://aspnetmvc.syncfusion.com/services/api/uploadbox/Remove'\r\n        };\r\n    }\r\n    onSuccess(args) {\r\n        let spinnerElement = this.dropAreaEle;\r\n        let li = this.dropAreaEle.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n        if (args.operation === 'upload') {\r\n            let progressBar = li.getElementsByTagName('progress')[0];\r\n            li.querySelector('.close-icon-container').classList.add('delete-icon');\r\n            detach(li.getElementsByTagName('progress')[0]);\r\n            li.querySelector('.file-size').style.display = 'inline-block';\r\n            li.querySelector('.file-name').style.color = 'green';\r\n            li.querySelector('.e-icons').onclick = () => {\r\n                createSpinner({ target: spinnerElement, width: '25px' });\r\n                showSpinner(spinnerElement);\r\n            };\r\n            li.querySelector('.close-icon-container').onkeydown = (e) => {\r\n                if (e.keyCode === 13) {\r\n                    createSpinner({ target: spinnerElement, width: '25px' });\r\n                    showSpinner(spinnerElement);\r\n                }\r\n            };\r\n        }\r\n        else {\r\n            this.filesDetails.splice(this.filesList.indexOf(li), 1);\r\n            this.filesList.splice(this.filesList.indexOf(li), 1);\r\n            this.uploadObj.element.value = '';\r\n            detach(li);\r\n            hideSpinner(spinnerElement);\r\n            detach(spinnerElement.querySelector('.e-spinner-pane'));\r\n        }\r\n        EventHandler.add(li.querySelector('.close-icon-container'), 'click', this.removeFiles, this);\r\n    }\r\n    onFileSelect(args) {\r\n        if (isNullOrUndefined(this.dropAreaEle.querySelector('.upload-list-root'))) {\r\n            this.parentElement = createElement('div', { className: 'upload-list-root' });\r\n            this.parentElement.appendChild(createElement('ul', { className: 'ul-element' }));\r\n            this.dropAreaEle.appendChild(this.parentElement);\r\n        }\r\n        for (let i = 0; i < args.filesData.length; i++) {\r\n            this.formSelectedData(args.filesData[i], this); // create the LI element for each file Data\r\n        }\r\n        this.filesDetails = this.filesDetails.concat(args.filesData);\r\n        this.uploadObj.upload(args.filesData, true);\r\n        args.cancel = true;\r\n    }\r\n    formSelectedData(selectedFiles, proxy) {\r\n        let liEle = createElement('li', { className: 'file-lists', attrs: { 'data-file-name': selectedFiles.name } });\r\n        liEle.appendChild(createElement('span', { className: 'file-name ', innerHTML: selectedFiles.name }));\r\n        liEle.appendChild(createElement('span', { className: 'file-size ', innerHTML: this.uploadObj.bytesToSize(selectedFiles.size) }));\r\n        if (selectedFiles.statusCode === '1') {\r\n            this.progressbarContainer = createElement('span', { className: 'progress-bar-container' });\r\n            this.progressbarContainer.appendChild(createElement('progress', { className: 'progress', attrs: { value: '0', max: '100' } }));\r\n            liEle.appendChild(this.progressbarContainer);\r\n        }\r\n        else {\r\n            liEle.querySelector('.file-name').classList.add('upload-fails');\r\n        }\r\n        let closeIconContainer = createElement('span', { className: 'e-icons close-icon-container' });\r\n        EventHandler.add(closeIconContainer, 'click', this.removeFiles, proxy);\r\n        liEle.appendChild(closeIconContainer);\r\n        document.querySelector('.ul-element').appendChild(liEle);\r\n        this.filesList.push(liEle);\r\n    }\r\n    onFileUpload(args) {\r\n        let li = this.dropAreaEle.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n        EventHandler.remove(li.querySelector('.close-icon-container'), 'click', this.removeFiles);\r\n        let progressValue = Math.round((args.e.loaded / args.e.total) * 100);\r\n        if (!isNaN(progressValue)) {\r\n            li.getElementsByTagName('progress')[0].value = progressValue; // Updating the progress bar value\r\n        }\r\n    }\r\n    onUploadFailed(args) {\r\n        let li = this.dropAreaEle.querySelector('[data-file-name=\"' + args.file.name + '\"]');\r\n        EventHandler.add(li.querySelector('.close-icon-container'), 'click', this.removeFiles, this);\r\n        li.querySelector('.file-name ').classList.add('upload-fails');\r\n        if (args.operation === 'upload') {\r\n            detach(li.querySelector('.progress-bar-container'));\r\n        }\r\n    }\r\n    removeFiles(args) {\r\n        let status = this.filesDetails[this.filesList.indexOf(args.currentTarget.parentElement)].statusCode;\r\n        if (status === '2') {\r\n            this.uploadObj.remove(this.filesDetails[this.filesList.indexOf(args.currentTarget.parentElement)]);\r\n        }\r\n        else {\r\n            detach(args.currentTarget.parentElement);\r\n        }\r\n    }\r\n    onRemoveFile(args) {\r\n        args.postRawFile = false;\r\n    }\r\n    rendereComplete() {\r\n        document.getElementById('browse').onclick = () => {\r\n            document.getElementsByClassName('e-file-select-wrap')[0].querySelector('button').click();\r\n            return false;\r\n        };\r\n        this.dropElement = this.dropContainerEle;\r\n        document.getElementById('clearbtn').onclick = () => {\r\n            if (!document.getElementsByClassName('upload-list-root')[0]) {\r\n                return;\r\n            }\r\n            detach(document.getElementsByClassName('upload-list-root')[0]);\r\n            this.filesList = [];\r\n            this.filesDetails = [];\r\n        };\r\n        this.uploadObj.element.setAttribute('name', 'UploadFiles');\r\n        this.uploadObj.dropArea = this.dropElement;\r\n        this.uploadObj.dataBind();\r\n        if (Browser.isDevice) {\r\n            this.uploadObj.dropArea.querySelector('drop').style.padding = '4% 13%';\r\n        }\r\n    }\r\n    render() {\r\n        return (<div className='control-pane' ref={this.dropContainerRef}>\r\n\t\t\t<div className='control-section uploadpreview'>\r\n\t\t\t\t <div className='col-lg-9'>\r\n\t\t\t\t\t\t  <div className='template_wrapper'>\r\n\t\t\t\t\t\t\t\r\n\t\t\t\t\t\t\t\t<div id='dropArea' className='dropArea' ref={this.dropRef}>\r\n\t\t\t\t\t\t\t\t\t<span id='drop' className='file-name-span drop'> Drop files here or <a href=\"\" id='browse'><u>Browse</u></a> </span>\r\n\t\t\t\t\t\t\t\t\t\t<UploaderComponent id='fileUpload' type='file' ref={(scope) => { this.uploadObj = scope; }} asyncSettings={this.asyncSettings} success={this.onSuccess.bind(this)} removing={this.onRemoveFile.bind(this)} selected={this.onFileSelect.bind(this)} progress={this.onFileUpload.bind(this)} // Triggres when upload is in progress\r\n         failure={this.onUploadFailed.bind(this)} // Triggres when upload got failed\r\n         dropArea={this.dropElement}></UploaderComponent>\r\n\t\t\t\t\t\t\t\t</div>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className='property-section template-panel col-lg-3'>\r\n\t\t\t\t\t<PropertyPane title='Properties'>\r\n\t\t\t\t\t\t<div className='custom-panel'>\r\n\t\t\t\t\t\t\t<button className=\"e-btn e-css\" id=\"clearbtn\" title=\"Clear All\">Clear All</button>\r\n\t\t\t\t\t\t</div>\r\n\t\t\t\t\t</PropertyPane>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</div>);\r\n    }\r\n}\r\n\nrender(<CustomTemplate />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}