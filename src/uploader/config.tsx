export const UploaderSampleOrder:Object = [
    { 'path': 'uploader/default', 'component':'Default', 'description': 'This sample demonstrates default functionalities of the file uploader component, including automatic upload and asynchronous mode options.', 'name': 'Default Functionalities', 'order': '01', 'category': 'File Upload','type': 'update', 'api': '{ "Uploader": ["autoUpload", "asyncSettings", "success", "dropArea"]}' },
    { 'path': 'uploader/chunk-upload', 'component':'ChunkUpload', 'description': 'This sample demonstrates how to upload files as chunks in the file upload component, which helps when uploading a large file to a server.', 'name': 'Chunk Upload', 'order': '01', 'category': 'File Upload', 'api': '{ "Uploader": ["autoUpload", "asyncSettings", "dropArea"]}' },
    { 'path': 'uploader/custom-file-list', 'component':'CustomTemplate', 'description': 'This sample demonstrates how to customize the file list with buttons using a template, and how to upload a file programmatically in the file upload component.', 'name': 'Template', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "success", "dropArea", "selected", "progress", "failure", "removing" ]}' },
    { 'path': 'uploader/preload-files', 'component':'Preloadfiles', 'description': 'This sample demonstrates how to preload files in the file upload component, which helps users view and manipulate server files.', 'name': 'Preload files', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "success", "dropArea", "files", "failure", "removing" ]}' },
    { 'path': 'uploader/file-validation', 'component':'Validation', 'description': 'This sample shows how to validate files before uploading them to a server by allowing or denying certain file extensions, setting minimum and maximum file sizes, and alerting users about duplicate files.', 'name': 'File Validation', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "autoUpload", "minFileSize", "allowedExtensions", "success", "dropArea", "selected" ]}' },
    { 'path': 'uploader/image-preview', 'component':'Preview', 'description': 'This sample demonstrates how to display a preview of an image file before and after uploading it to a server.', 'name': 'Image Preview', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "failure", "progress", "template", "allowedExtensions", "success", "dropArea", "selected" ]}' },
    { 'path': 'uploader/file-upload-with-forms', 'component':'Formsupport', 'description': 'This sample demonstrates how to integrate the file upload component in an HTML form (synchronous mode) and submit a form with selected files.', 'name': 'Form Support', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "failure", "progress", "template", "allowedExtensions", "success", "dropArea", "selected" ]}' },
    { 'path': 'uploader/custom-drop-area', 'component':'Customdroparea', 'description': 'This sample demonstrates how to upload a file using drag and drop and how to configure a custom drop area for the file upload component.', 'name': 'Custom Drop Area', 'order': '01', 'category': 'File Upload', 'api': '{"Uploader": [ "asyncSettings", "failure", "progress", "template", "allowedExtensions", "success", "dropArea", "selected" ]}' }
]
