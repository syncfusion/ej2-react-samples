{"index.css":"/* css */","index.html":"<!DOCTYPE html>\r\n<html>\r\n<head>\r\n    <title>Syncfusion React Sample</title>\r\n    <meta charset=\"utf-8\" />\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1.0, user-scalable=no\" />\r\n    <meta http-equiv=\"x-ua-compatible\" content=\"ie=edge\">\r\n    <meta name=\"description\" content=\"Syncfusion React UI Components\" />\r\n    <meta name=\"author\" content=\"Syncfusion\" />\r\n    <link href=\"////npmci.syncfusion.com/packages/development/{{theme}}.css\" rel=\"stylesheet\">\r\n    <link href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.3.7/css/bootstrap.min.css\" rel=\"stylesheet\" />\r\n</head>\r\n\r\n<body class=\"{{theme}}\">\r\n    <div id='sample'>\r\n</body>\r\n</html>\r\n","index.js":"import { render } from 'react-dom';\nimport './index.css';\n/**\r\n * Right to left for bullet chart\r\n */\r\nimport * as React from 'react';\r\nimport { BulletChartComponent, BulletRangeCollectionDirective, BulletRangeDirective, Inject, BulletTooltip } from '@syncfusion/ej2-react-charts';\r\nimport { SampleBase } from './sample-base';\r\nimport { ColorPickerComponent } from '@syncfusion/ej2-react-inputs';\r\nimport { CheckBoxComponent } from '@syncfusion/ej2-react-buttons';\r\nconst SAMPLE_CSS = `\r\n    .control-fluid {\r\n\t\tpadding: 0px !important;\r\n    }`;\r\nexport class BulletChartCustomization extends SampleBase {\r\n    constructor() {\r\n        super(...arguments);\r\n        this.bulletLoad = (args) => {\r\n            let chart = document.getElementById('customization');\r\n            chart.setAttribute('title', '');\r\n            let selectedTheme = location.hash.split('/')[1];\r\n            selectedTheme = selectedTheme ? selectedTheme : 'Material';\r\n            args.bulletChart.theme = (selectedTheme.charAt(0).toUpperCase() + selectedTheme.slice(1)).replace(/dark/i, 'Dark').replace(/light/i, 'Light').replace(/contrast/i, 'Contrast');\r\n        };\r\n    }\r\n    render() {\r\n        return (<div className='control-pane'>\r\n                <style>\r\n                    {SAMPLE_CSS}\r\n                </style>\r\n                <div className='control-section col-md-8'>\r\n                    <BulletChartComponent id='customization' ref={chart => this.bulletChartInstance = chart} width={'100%'} tooltip={{ enable: true }} animation={{ enable: false }} valueField='value' targetField='target' minimum={0} maximum={3} interval={0.5} title='Package Downloads' subtitle='in Thousands' load={this.bulletLoad.bind(this)} dataSource={[{ value: 1.7, target: 2.5 }]}>\r\n                        <Inject services={[BulletTooltip]}/>\r\n                        <BulletRangeCollectionDirective>\r\n                            <BulletRangeDirective end={1.5} color='#599C20'></BulletRangeDirective>\r\n                            <BulletRangeDirective end={2.5} color='#EFC820'></BulletRangeDirective>\r\n                            <BulletRangeDirective end={3} color='#CA4218'></BulletRangeDirective>\r\n                        </BulletRangeCollectionDirective>\r\n                    </BulletChartComponent>\r\n                </div>\r\n                <div className='property-section col-md-4'>\r\n                <div className=\"property-panel-header\">Properties</div>\r\n                    <table style={{ width: '100%' }}>                        \r\n                        <tr style={{ height: '50px' }}>\r\n                            <td style={{ width: '50%' }}>\r\n                                <div className='prop-text'>Start Color:</div>\r\n                            </td>\r\n                            <td style={{ width: '50%', textAlign: 'center' }}>\r\n                                <ColorPickerComponent id='start' mode='Palette' value='#599C20' change={(args) => {\r\n            this.bulletChartInstance.ranges[0].color = args.currentValue.hex;\r\n            this.bulletChartInstance.refresh();\r\n        }}></ColorPickerComponent>\r\n                            </td>\r\n                        </tr>\r\n                        <tr style={{ height: '50px' }}>\r\n                            <td style={{ width: '50%' }}>\r\n                                <div className='prop-text'>Middle Color:</div>\r\n                            </td>\r\n                            <td style={{ width: '50%', textAlign: 'center' }}>\r\n                                <ColorPickerComponent mode='Palette' id='middle' value='#EFC820' change={(args) => {\r\n            this.bulletChartInstance.ranges[1].color = args.currentValue.hex;\r\n            this.bulletChartInstance.refresh();\r\n        }}></ColorPickerComponent>\r\n                            </td>\r\n                        </tr>\r\n                        <tr style={{ height: '50px' }}>\r\n                            <td style={{ width: '50%' }}>\r\n                                <div className='prop-text'>End Color:</div>\r\n                            </td>\r\n                            <td style={{ width: '50%', textAlign: 'center' }}>\r\n                                <ColorPickerComponent id='end' mode='Palette' value='#CA4218' change={(args) => {\r\n            this.bulletChartInstance.ranges[2].color = args.currentValue.hex;\r\n            this.bulletChartInstance.refresh();\r\n        }}></ColorPickerComponent>\r\n                            </td>\r\n                        </tr>\r\n                        <tr style={{ height: '50px' }}>\r\n                            <td style={{ width: '50%' }}>\r\n                                <div className='prop-text'>Use Range Color:</div>\r\n                            </td>\r\n                            <td style={{ width: '50%', textAlign: 'center' }}>\r\n                                <CheckBoxComponent id='rangeColor' checked={false} change={(args) => {\r\n            this.bulletChartInstance.majorTickLines.useRangeColor = args.checked;\r\n            this.bulletChartInstance.minorTickLines.useRangeColor = args.checked;\r\n            this.bulletChartInstance.labelStyle.useRangeColor = args.checked;\r\n            this.bulletChartInstance.refresh();\r\n        }}></CheckBoxComponent>\r\n                            </td>\r\n                        </tr>\r\n                        <tr style={{ height: '50px' }}>\r\n                            <td style={{ width: '50%' }}>\r\n                                <div className='prop-text'>Opposed Position</div>\r\n                            </td>\r\n                            <td style={{ width: '50%', textAlign: 'center' }}>\r\n                                <CheckBoxComponent id='opposedPosition' checked={false} change={(args) => {\r\n            this.bulletChartInstance.opposedPosition = args.checked;\r\n            this.bulletChartInstance.refresh();\r\n        }}></CheckBoxComponent>\r\n                            </td>\r\n                        </tr>\r\n                    </table>\r\n                </div>\r\n            </div>);\r\n    }\r\n}\r\n\nrender(<BulletChartCustomization />, document.getElementById('sample'));","sample-base.js":"import * as React from 'react';\n    {{ripple}}\n    export class SampleBase extends React.PureComponent {\n        rendereComplete() {\n            /**custom render complete function */\n        }\n        componentDidMount() {\n            setTimeout(() => {\n            this.rendereComplete();\n        });\n          }\n        }\n    ","dependencies":"{\"@syncfusion/ej2\": \"*\",\"@syncfusion/ej2-react-base\": \"*\",\"@syncfusion/ej2-react-buttons\": \"*\",\"@syncfusion/ej2-react-calendars\": \"*\",\"@syncfusion/ej2-react-charts\": \"*\",\"@syncfusion/ej2-react-diagrams\": \"*\",\"@syncfusion/ej2-react-circulargauge\": \"*\",\"@syncfusion/ej2-react-dropdowns\": \"*\",\"@syncfusion/ej2-react-filemanager\": \"*\",\"@syncfusion/ej2-react-grids\": \"*\",\"@syncfusion/ej2-react-inputs\": \"*\",\"@syncfusion/ej2-react-layouts\": \"*\",\"@syncfusion/ej2-react-lineargauge\": \"*\",\"@syncfusion/ej2-react-barcode-generator\": \"*\",\"@syncfusion/ej2-react-lists\": \"*\",\"@syncfusion/ej2-react-maps\": \"*\",\"@syncfusion/ej2-react-treemap\": \"*\",\"@syncfusion/ej2-react-heatmap\": \"*\",\"@syncfusion/ej2-react-navigations\": \"*\",\"@syncfusion/ej2-react-notifications\": \"*\",\"@syncfusion/ej2-react-inplace-editor\": \"*\",\"@syncfusion/ej2-react-treegrid\": \"*\",\"@syncfusion/ej2-react-popups\": \"*\",\"@syncfusion/ej2-react-schedule\": \"*\",\"@syncfusion/ej2-react-splitbuttons\": \"*\",\"@syncfusion/ej2-react-documenteditor\": \"*\",\"@syncfusion/ej2-react-richtexteditor\": \"*\",\"@syncfusion/ej2-react-pivotview\": \"*\",\"@syncfusion/ej2-react-pdfviewer\": \"*\",\"@syncfusion/ej2-react-querybuilder\": \"*\",\"@syncfusion/ej2-react-gantt\": \"*\",\"@syncfusion/ej2-react-spreadsheet\": \"*\"}"}